#pragma once 
#include <KartDrift_Structs.h>
 
 
 
//Class KartDrift.ShadowAIComponent Size 296
// Inherited 176 bytes 
class UShadowAIComponent : public UActorComponent
{

 public: 
	struct UShadowQuestStateComponent* StateComponent;  // Offset: 176 Size: 8
	struct URaceProgressComponent* PlayerProgress;  // Offset: 184 Size: 8
	struct URaceProgressComponent* ShadowProgress;  // Offset: 192 Size: 8
	char pad_200[96];  // Offset: 200 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RiderNameChangeDialog Size 896
// Inherited 816 bytes 
class URiderNameChangeDialog : public UDialogTemplate
{

 public: 
	char pad_816[80];  // Offset: 816 Size: 80



 // Functions 
 public:
	void OnRiderNameTextChanged(struct FText& InRiderNameText); // Function KartDrift.RiderNameChangeDialog.OnRiderNameTextChanged
	void OnClickedRiderNameCheckBtn(int32_t InIndex); // Function KartDrift.RiderNameChangeDialog.OnClickedRiderNameCheckBtn
	void OnClickedRiderNameChangeBtn(int32_t InIndex); // Function KartDrift.RiderNameChangeDialog.OnClickedRiderNameChangeBtn
	void OnClickedCancelBtn(int32_t InIndex); // Function KartDrift.RiderNameChangeDialog.OnClickedCancelBtn
}; 
 
 


//Class KartDrift.AccelSpecModifyZone Size 576
// Inherited 576 bytes 
class AAccelSpecModifyZone : public AKdTriggerBox
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CheckPointVisualizerComponent Size 1152
// Inherited 1136 bytes 
class UCheckPointVisualizerComponent : public UPrimitiveComponent
{

 public: 
	char pad_1136[16];  // Offset: 1136 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForceFeedbackSubsystem Size 136
// Inherited 48 bytes 
class UForceFeedbackSubsystem : public UGameInstanceSubsystem
{

 public: 
	struct TMap<struct FName, struct UForceFeedbackEffect*> ModifiedForceFeedbackTable;  // Offset: 48 Size: 80
	struct UKartForceFeedbackTable* LoadedTable;  // Offset: 128 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdTriggerBox Size 576
// Inherited 552 bytes 
class AKdTriggerBox : public ATriggerBox
{

 public: 
	struct UFMODEvent* SoundToPlay;  // Offset: 552 Size: 8
	float SoundVolumeMultiplier;  // Offset: 560 Size: 4
	float SoundPitchMultiplier;  // Offset: 564 Size: 4
	float SoundStartTime;  // Offset: 568 Size: 4
	char pad_572[4];  // Offset: 572 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerState Size 808
// Inherited 800 bytes 
class AKdPlayerState : public APlayerState
{

 public: 
	char pad_800_1 : 7;  // Offset: 800 Size: 1
	bool bForceReadyClient : 1;  // Offset: 800 Size: 1
	char pad_801_1 : 7;  // Offset: 801 Size: 1
	bool bReadiedClient : 1;  // Offset: 801 Size: 1
	char pad_802[6];  // Offset: 802 Size: 6



 // Functions 
 public:
	void Server_SetClientWinCount(int32_t WinCount); // Function KartDrift.KdPlayerState.Server_SetClientWinCount
	void Server_ReadiedClient(); // Function KartDrift.KdPlayerState.Server_ReadiedClient
	void Server_ForceReadiedClient(bool bInReady); // Function KartDrift.KdPlayerState.Server_ForceReadiedClient
}; 
 
 


//Class KartDrift.ShadowQuestInitializePauseMenu Size 112
// Inherited 72 bytes 
class UShadowQuestInitializePauseMenu : public UShadowQuestRule
{

 public: 
	struct TSoftClassPtr<UObject> PauseMenuClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowResultWidget Size 72
// Inherited 72 bytes 
class UShowResultWidget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountSubsystem Size 48
// Inherited 48 bytes 
class UAccountSubsystem : public USubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ComboBoxStringExpandWithSearch Size 688
// Inherited 608 bytes 
class UComboBoxStringExpandWithSearch : public UUserWidget
{

 public: 
	struct UComboBoxStringExpand* ComboBoxString;  // Offset: 608 Size: 8
	struct UEditableTextBox* EditableTextBox;  // Offset: 616 Size: 8
	struct UButton* Button;  // Offset: 624 Size: 8
	char pad_632[32];  // Offset: 632 Size: 32
	struct TArray<struct UTextBlock*> TextBlockArray;  // Offset: 664 Size: 16
	char pad_680_1 : 7;  // Offset: 680 Size: 1
	bool bVisibleMetaTag : 1;  // Offset: 680 Size: 1
	char pad_681[7];  // Offset: 681 Size: 7



 // Functions 
 public:
	struct UWidget* OnGenerateWidget(struct FString InItem); // Function KartDrift.ComboBoxStringExpandWithSearch.OnGenerateWidget
	void OnEditableTextBoxChanged(struct FText& Text); // Function KartDrift.ComboBoxStringExpandWithSearch.OnEditableTextBoxChanged
	void OnButtonClicked(); // Function KartDrift.ComboBoxStringExpandWithSearch.OnButtonClicked
}; 
 
 


//Class KartDrift.LicenseTrackLineComponent Size 224
// Inherited 176 bytes 
class ULicenseTrackLineComponent : public UActorComponent
{

 public: 
	struct ULicenseTrackLineData* Data;  // Offset: 176 Size: 8
	struct AKdPawn* Pawn;  // Offset: 184 Size: 8
	struct USplineComponent* TrackLineSplineComponent;  // Offset: 192 Size: 8
	struct UKartMovementComponent* Movement;  // Offset: 200 Size: 8
	struct UUserWidget* WarningWidget;  // Offset: 208 Size: 8
	char pad_216[8];  // Offset: 216 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpecModifier Size 56
// Inherited 40 bytes 
class USpecModifier : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMessage Size 160
// Inherited 48 bytes 
class UPcMessage : public UPcPacket
{

 public: 
	struct FString Message;  // Offset: 48 Size: 16
	struct TArray<struct FString> Params;  // Offset: 64 Size: 16
	struct TMap<struct FString, struct FString> localizedMessage;  // Offset: 80 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnvironmentTriggerBox Size 640
// Inherited 552 bytes 
class AEnvironmentTriggerBox : public ATriggerBox
{

 public: 
	struct UAudioComponent* AudioComponent;  // Offset: 552 Size: 8
	struct USoundBase* SoundAsset_Low;  // Offset: 560 Size: 8
	struct USoundBase* SoundAsset_Medium;  // Offset: 568 Size: 8
	struct USoundBase* SoundAsset_High;  // Offset: 576 Size: 8
	struct UParticleSystem* EffectAsset_Low;  // Offset: 584 Size: 8
	struct UParticleSystem* EffectAsset_Medium;  // Offset: 592 Size: 8
	struct UParticleSystem* EffectAsset_High;  // Offset: 600 Size: 8
	float LowSpeed;  // Offset: 608 Size: 4
	float HighSpeed;  // Offset: 612 Size: 4
	float Factor;  // Offset: 616 Size: 4
	enum class EEnvironmentDirectingEffectType DirectingEffectType;  // Offset: 620 Size: 1
	char pad_621[3];  // Offset: 621 Size: 3
	float ActiveTimeSconds;  // Offset: 624 Size: 4
	struct FName AttachSocketName;  // Offset: 628 Size: 8
	char pad_636[4];  // Offset: 636 Size: 4



 // Functions 
 public:
	void TriggerBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.EnvironmentTriggerBox.TriggerBeginOverlap
	float GetPlayerKartSpeed(int32_t PlayerIndex); // Function KartDrift.EnvironmentTriggerBox.GetPlayerKartSpeed
}; 
 
 


//Class KartDrift.EventPageWidget Size 1184
// Inherited 744 bytes 
class UEventPageWidget : public UKdPageWidget
{

 public: 
	char pad_744_1 : 7;  // Offset: 744 Size: 1
	bool bSetDefaultFocus : 1;  // Offset: 744 Size: 1
	enum class ESceneCaptureType LastSceneCaptureType;  // Offset: 745 Size: 1
	char pad_746[198];  // Offset: 746 Size: 198
	UUserWidget* EventInfoClass;  // Offset: 944 Size: 8
	float EventTimerElapsedTime;  // Offset: 952 Size: 4
	char pad_956[4];  // Offset: 956 Size: 4
	UUserWidget* ADTEventClass;  // Offset: 960 Size: 8
	int32_t ADTStepIndex;  // Offset: 968 Size: 4
	int32_t ADTRewardIndex;  // Offset: 972 Size: 4
	struct TArray<struct FString> ADTRewardStocks;  // Offset: 976 Size: 16
	int32_t CurStepCheckIndex;  // Offset: 992 Size: 4
	char pad_996[4];  // Offset: 996 Size: 4
	struct UADTEventObject* LastADTEventObject;  // Offset: 1000 Size: 8
	char pad_1008[16];  // Offset: 1008 Size: 16
	float ADTTimerElapsedTime;  // Offset: 1024 Size: 4
	char pad_1028[4];  // Offset: 1028 Size: 4
	float CurStepADTTimerElapsedTime;  // Offset: 1032 Size: 4
	char pad_1036[4];  // Offset: 1036 Size: 4
	float ADTPeriodElapsedTime;  // Offset: 1040 Size: 4
	char pad_1044[4];  // Offset: 1044 Size: 4
	UUserWidget* VDTEventClass;  // Offset: 1048 Size: 8
	float VDTTimerElapsedTime;  // Offset: 1056 Size: 4
	char pad_1060[4];  // Offset: 1060 Size: 4
	float VDTPeriodElapsedTime;  // Offset: 1064 Size: 4
	char pad_1068[4];  // Offset: 1068 Size: 4
	float VDTEventStartRemainTime;  // Offset: 1072 Size: 4
	char pad_1076[4];  // Offset: 1076 Size: 4
	float VDTEventTimeCheckElapsedTime;  // Offset: 1080 Size: 4
	char pad_1084[4];  // Offset: 1084 Size: 4
	char pad_1088_1 : 7;  // Offset: 1088 Size: 1
	bool bIsVDTEventClear : 1;  // Offset: 1088 Size: 1
	char pad_1089_1 : 7;  // Offset: 1089 Size: 1
	bool bVDTEventInit : 1;  // Offset: 1089 Size: 1
	enum class EVDTEventStatus VDTEventStatus;  // Offset: 1090 Size: 1
	char pad_1091[5];  // Offset: 1091 Size: 5
	UUserWidget* AttendanceEventClass;  // Offset: 1096 Size: 8
	struct UUserWidget* CurrentAttendanceEventWidget;  // Offset: 1104 Size: 8
	char pad_1112[48];  // Offset: 1112 Size: 48
	struct TArray<struct UAttendanceEventObject*> CurrentAttendanceEventObjects;  // Offset: 1160 Size: 16
	struct TWeakObjectPtr<UDialogTemplate> RewardDetailDialog;  // Offset: 1176 Size: 8



 // Functions 
 public:
	void UpdateVDTEventProgress(struct FString EventID); // Function KartDrift.EventPageWidget.UpdateVDTEventProgress
	void SendVDTRewardPacket(int32_t InIndex); // Function KartDrift.EventPageWidget.SendVDTRewardPacket
	void SendADTRewardPacket(int32_t InIndex); // Function KartDrift.EventPageWidget.SendADTRewardPacket
	void SendADTRewardAllPacket(); // Function KartDrift.EventPageWidget.SendADTRewardAllPacket
	void OnUpdateVDTRewardUI(); // Function KartDrift.EventPageWidget.OnUpdateVDTRewardUI
	void OnUpdateVDTEvent(struct FString EventID); // Function KartDrift.EventPageWidget.OnUpdateVDTEvent
	void OnUpdateTabAlarm(); // Function KartDrift.EventPageWidget.OnUpdateTabAlarm
	void OnUpdateADTRewardUI(); // Function KartDrift.EventPageWidget.OnUpdateADTRewardUI
	void OnUpdateADTRewardAllUI(); // Function KartDrift.EventPageWidget.OnUpdateADTRewardAllUI
	void OnUpdateADTEvent(struct FString EventID); // Function KartDrift.EventPageWidget.OnUpdateADTEvent
	void OnUnFocusedAttendanceReward(int32_t InIndex); // Function KartDrift.EventPageWidget.OnUnFocusedAttendanceReward
	void OnFocusedVDTButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnFocusedVDTButton
	void OnFocusedAttendanceReward(int32_t InIndext); // Function KartDrift.EventPageWidget.OnFocusedAttendanceReward
	void OnCompleteLoadPawn(struct AOutGamePawn* LoadedPawn); // Function KartDrift.EventPageWidget.OnCompleteLoadPawn
	void OnClickedRewardDetailDialogBackButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedRewardDetailDialogBackButton
	void OnClickedRewardDetailButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedRewardDetailButton
	void OnClickedReceiveAllButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedReceiveAllButton
	void OnClickedItemListButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedItemListButton
	void OnClickedInfoList(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedInfoList
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.EventPageWidget.OnClickedBackButton
	void OnAttendanceEntryClicked(int32_t ItemIndex); // Function KartDrift.EventPageWidget.OnAttendanceEntryClicked
	void ChangeAttendanceStep(int32_t AttendanceStep); // Function KartDrift.EventPageWidget.ChangeAttendanceStep
	void ChangeADTStep(int32_t InIndex); // Function KartDrift.EventPageWidget.ChangeADTStep
}; 
 
 


//Class KartDrift.LevelLoadPostFixSettings Size 72
// Inherited 56 bytes 
class ULevelLoadPostFixSettings : public UDeveloperSettings
{

 public: 
	struct TArray<struct FPlatfromPostFix> PlatformPostfix;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseContents Size 64
// Inherited 48 bytes 
class ULicenseContents : public UDataAsset
{

 public: 
	char pad_48[16];  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRocketActorData Size 88
// Inherited 64 bytes 
class ULicenseRocketActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FLicenseRocketActorInfo> LicenseSpawnActorDataList;  // Offset: 64 Size: 16
	float Offset;  // Offset: 80 Size: 4
	float Scale;  // Offset: 84 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTimeAttackGetTracks Size 56
// Inherited 56 bytes 
class UPqTimeAttackGetTracks : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLiveryStickerUpdate Size 112
// Inherited 56 bytes 
class UPqLiveryStickerUpdate : public UPqPacket
{

 public: 
	struct FKtLiverySticker liverySticker;  // Offset: 56 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountCustomProperty Size 160
// Inherited 48 bytes 
class UAccountCustomProperty : public UAccountSubsystem
{

 public: 
	char pad_48[112];  // Offset: 48 Size: 112



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTimeAttackStart Size 72
// Inherited 56 bytes 
class UPqTimeAttackStart : public UPqPacket
{

 public: 
	struct FString trackId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccelBoostSpecModifier Size 272
// Inherited 56 bytes 
class UAccelBoostSpecModifier : public USpecModifier
{

 public: 
	char pad_56[216];  // Offset: 56 Size: 216



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BoostZone Size 584
// Inherited 576 bytes 
class ABoostZone : public AKdTriggerBox
{

 public: 
	float BoostPower;  // Offset: 576 Size: 4
	float Multiplier;  // Offset: 580 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountKartSkill Size 232
// Inherited 48 bytes 
class UAccountKartSkill : public UAccountSubsystem
{

 public: 
	char pad_48[184];  // Offset: 48 Size: 184



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FuncLib_MajorGame Size 40
// Inherited 40 bytes 
class UFuncLib_MajorGame : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_ScenarioPageWidget Size 1200
// Inherited 1184 bytes 
class UC_ScenarioPageWidget : public UScenarioPageWidget
{

 public: 
	struct UScenarioKeyGuideWidget* V_ScenarioKeyGuide;  // Offset: 1184 Size: 8
	struct UScenarioKeyAccumWidget* V_ScenarioKeyAccum;  // Offset: 1192 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureSaveGame Size 72
// Inherited 40 bytes 
class UBuildCaptureSaveGame : public USaveGame
{

 public: 
	struct TArray<struct FBuildCaptureLightInfo> BuildCaptureLightInfoList;  // Offset: 40 Size: 16
	struct TArray<struct FBuildCaptureCameraInfo> BuildCaptureCameraInfoList;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetAccountPlatformDataKtByAccountId Size 80
// Inherited 56 bytes 
class UPqGetAccountPlatformDataKtByAccountId : public UPqPacket
{

 public: 
	enum class EPlatformDataKtType Type;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4
	struct TArray<struct FString> accountIdVector;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerMarketPageWidget Size 2160
// Inherited 744 bytes 
class UStickerMarketPageWidget : public UKdPageWidget
{

 public: 
	struct UStickerMarketLogicComponent* StickerMarketLogicComponent;  // Offset: 744 Size: 8
	char pad_752[24];  // Offset: 752 Size: 24
	struct UDialogTemplate* CurrentStickerPopup;  // Offset: 776 Size: 8
	char pad_784[24];  // Offset: 784 Size: 24
	struct FStickerStock CurrentDownloadStock;  // Offset: 808 Size: 120
	char pad_928[8];  // Offset: 928 Size: 8
	struct FLiveryStickerDesc UploadConfirm_StickerDesc;  // Offset: 936 Size: 40
	char pad_976[56];  // Offset: 976 Size: 56
	struct FStickerStock CurrentSelectedStock;  // Offset: 1032 Size: 120
	char pad_1152[16];  // Offset: 1152 Size: 16
	struct UDialogTemplate* CurrentStockPopup;  // Offset: 1168 Size: 8
	char pad_1176[40];  // Offset: 1176 Size: 40
	struct UDialogTemplate* CurrentDetailViewPopup;  // Offset: 1216 Size: 8
	char pad_1224[24];  // Offset: 1224 Size: 24
	struct UDialogTemplate* CurrentTagSelectPopup;  // Offset: 1248 Size: 8
	char pad_1256[64];  // Offset: 1256 Size: 64
	struct UDialogTemplate* CurrentStickerSelectDialog;  // Offset: 1320 Size: 8
	char pad_1328[48];  // Offset: 1328 Size: 48
	struct UDialogTemplate* CurrentTextInputPopup;  // Offset: 1376 Size: 8
	char pad_1384[120];  // Offset: 1384 Size: 120
	struct UStickerMarketTextChecker* TextInput_TextChecker;  // Offset: 1504 Size: 8
	struct UDialogTemplate* CurrentUploadPopup;  // Offset: 1512 Size: 8
	struct TArray<struct UButtonTemplate*> CurrentUploadPopupTagBtns;  // Offset: 1520 Size: 16
	char pad_1536[16];  // Offset: 1536 Size: 16
	struct FLiveryStickerDesc CurrentUploadStickerDesc;  // Offset: 1552 Size: 40
	char pad_1592[80];  // Offset: 1592 Size: 80
	struct UDialogTemplate* CurrentReportDialog;  // Offset: 1672 Size: 8
	struct FStickerStock CurrentReportStock;  // Offset: 1680 Size: 120
	char pad_1800[16];  // Offset: 1800 Size: 16
	struct UDialogTemplate* CurrentSearchPopup;  // Offset: 1816 Size: 8
	char pad_1824[136];  // Offset: 1824 Size: 136
	struct UPageListTemplate* CurrentPageList;  // Offset: 1960 Size: 8
	char pad_1968[8];  // Offset: 1968 Size: 8
	struct TArray<struct FStickerMarketHotItems> HotItems;  // Offset: 1976 Size: 16
	struct TArray<struct UWidget*> HotItemSlots;  // Offset: 1992 Size: 16
	char pad_2008[136];  // Offset: 2008 Size: 136
	struct ULiveryMarketSearchStream* CurrentSearch;  // Offset: 2144 Size: 8
	char pad_2152[8];  // Offset: 2152 Size: 8



 // Functions 
 public:
	void Widget_UploadPopup_OnTagEditClick(int32_t BtnIndex); // Function KartDrift.StickerMarketPageWidget.Widget_UploadPopup_OnTagEditClick
	void Widget_UploadPopup_OnNewNameClick(int32_t BtnIndex); // Function KartDrift.StickerMarketPageWidget.Widget_UploadPopup_OnNewNameClick
	void Widget_UploadPopup_OnCloseClick(int32_t BtnIndex); // Function KartDrift.StickerMarketPageWidget.Widget_UploadPopup_OnCloseClick
	void Widget_TextInputPopup_OnTextCommitted(struct FText& CommitText, enum class ETextCommit CommitType); // Function KartDrift.StickerMarketPageWidget.Widget_TextInputPopup_OnTextCommitted
	void Widget_TextInputPopup_OnTextChanged(struct FText& ChangedText); // Function KartDrift.StickerMarketPageWidget.Widget_TextInputPopup_OnTextChanged
	void Widget_TextInput_ConfirmClick(int32_t ButtonIndex); // Function KartDrift.StickerMarketPageWidget.Widget_TextInput_ConfirmClick
	void Widget_TagSelectPopup_OnTagSelectClick(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_TagSelectPopup_OnTagSelectClick
	void Widget_StockPopup_ConfirmButtonClick(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_StockPopup_ConfirmButtonClick
	void Widget_StockPopup_BookmarkButtonClick(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_StockPopup_BookmarkButtonClick
	void Widget_StickerPopup_OnConfirmButtonClick(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_StickerPopup_OnConfirmButtonClick
	void Widget_SearchPopup_OnTagSelectUncheck(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_SearchPopup_OnTagSelectUncheck
	void Widget_SearchPopup_OnTagSelectCheck(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_SearchPopup_OnTagSelectCheck
	void Widget_ReportDialog_OnItemChecked(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_ReportDialog_OnItemChecked
	void Widget_ReportDialog_OnConfirmButtonClick(int32_t InIndex); // Function KartDrift.StickerMarketPageWidget.Widget_ReportDialog_OnConfirmButtonClick
	void Sort_Show(int32_t ButtonIndex); // Function KartDrift.StickerMarketPageWidget.Sort_Show
	void OnFinishedResetAnim(); // Function KartDrift.StickerMarketPageWidget.OnFinishedResetAnim
	void OnFinishedChangeAnim(); // Function KartDrift.StickerMarketPageWidget.OnFinishedChangeAnim
	void OnClicked_Upload(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_Upload
	void OnClicked_Sort(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_Sort
	void OnClicked_Search(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_Search
	void OnClicked_MainTab_Right(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_MainTab_Right
	void OnClicked_MainTab_Left(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_MainTab_Left
	void OnClicked_Back(int32_t nIndex); // Function KartDrift.StickerMarketPageWidget.OnClicked_Back
}; 
 
 


//Class KartDrift.AnimationPresetWidget Size 776
// Inherited 608 bytes 
class UAnimationPresetWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct TArray<struct FAnimationPresetDef> OnEnabled;  // Offset: 616 Size: 16
	struct TArray<struct FAnimationPresetDef> OnDisabled;  // Offset: 632 Size: 16
	struct TArray<struct FAnimationPresetDef> OnFocus;  // Offset: 648 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnfocus;  // Offset: 664 Size: 16
	struct TArray<struct FAnimationPresetDef> OnChecked;  // Offset: 680 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnchecked;  // Offset: 696 Size: 16
	struct TArray<struct FAnimationPresetDef> OnHovered;  // Offset: 712 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnHovered;  // Offset: 728 Size: 16
	struct TArray<struct FAnimationPresetDef> OnPressed;  // Offset: 744 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnPressed;  // Offset: 760 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseNextChapterZone Size 560
// Inherited 544 bytes 
class ALicenseNextChapterZone : public AActor
{

 public: 
	struct UParticleSystemComponent* NextPointParticle;  // Offset: 544 Size: 8
	struct USphereComponent* CollisionComponent;  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TierResultWidget Size 768
// Inherited 608 bytes 
class UTierResultWidget : public UUserWidget
{

 public: 
	float GppCountingDuration;  // Offset: 608 Size: 4
	float TierChangedMinWaiting;  // Offset: 612 Size: 4
	struct UWidgetAnimation* Tier_In;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Tier_Out;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Tier_ScoreUP;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Tier_ScoreDOWN;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Tier_TierUP_First;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Tier_TierUP;  // Offset: 656 Size: 8
	struct UWidgetAnimation* Tier_TierDOWN;  // Offset: 664 Size: 8
	struct UGrandPrixTierIconWidget* V_PrevTierIcon;  // Offset: 672 Size: 8
	struct UGrandPrixTierIconWidget* V_NextTierIcon;  // Offset: 680 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcherUpDown;  // Offset: 688 Size: 8
	struct UKdTextBlock* V_PrevTitleText;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_NextTitleText;  // Offset: 704 Size: 8
	struct UImage* V_ProgressBG;  // Offset: 712 Size: 8
	struct UImage* V_ProgressCurrent;  // Offset: 720 Size: 8
	struct UKdTextBlock* V_CurrentGpp;  // Offset: 728 Size: 8
	char pad_736[32];  // Offset: 736 Size: 32



 // Functions 
 public:
	void OnFinishedTierResultAnimation(); // Function KartDrift.TierResultWidget.OnFinishedTierResultAnimation
}; 
 
 


//Class KartDrift.ScenarioMesh Size 672
// Inherited 624 bytes 
class AScenarioMesh : public AScenarioSceneBase
{

 public: 
	struct TArray<struct FScenarioMaterialInstanceInterpolation> InterpolationContainer;  // Offset: 624 Size: 16
	struct TArray<struct UMaterialInstanceDynamic*> DynamicMaterialInstanceContainer;  // Offset: 640 Size: 16
	char pad_656[16];  // Offset: 656 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountAchievement Size 536
// Inherited 48 bytes 
class UAccountAchievement : public UAccountSubsystem
{

 public: 
	char pad_48[488];  // Offset: 48 Size: 488



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcSeasonUpdated Size 320
// Inherited 48 bytes 
class UPcSeasonUpdated : public UPcPacket
{

 public: 
	struct FKtSeasonInfo seasonInfo;  // Offset: 48 Size: 32
	struct FKtSeasonStaticInfo seasonStaticInfo;  // Offset: 80 Size: 56
	enum class ESeasonUpdatedType seasonUpdatedType;  // Offset: 136 Size: 1
	char pad_137[7];  // Offset: 137 Size: 7
	struct TArray<struct FKtItem> inventoryDataSeason;  // Offset: 144 Size: 16
	struct FKtQuestSetData questSetDataDaily;  // Offset: 160 Size: 80
	struct FKtQuestSetData questSetDataWeekly;  // Offset: 240 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowAssistListWidget_TimeAttack Size 88
// Inherited 88 bytes 
class UShowAssistListWidget_TimeAttack : public UShowAssistListWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAcceptCustomGameInvitation Size 80
// Inherited 56 bytes 
class UPqAcceptCustomGameInvitation : public UPqPacket
{

 public: 
	struct FString SessionId;  // Offset: 56 Size: 16
	enum class ECustomGameInvitationResult Result;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyTextureMap Size 128
// Inherited 48 bytes 
class UKeyTextureMap : public UDataAsset
{

 public: 
	struct TMap<struct FKey, struct FKeyTexture> KeyTextureMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PageListTemplate Size 784
// Inherited 608 bytes 
class UPageListTemplate : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	UUserWidget* EntryWidgetClass;  // Offset: 616 Size: 8
	struct UPanelWidget* V_ItemWidgetPanel;  // Offset: 624 Size: 8
	struct UPageButtonTemplate* V_PageButtonTemplate;  // Offset: 632 Size: 8
	int32_t RowCount;  // Offset: 640 Size: 4
	int32_t ColumnCount;  // Offset: 644 Size: 4
	char pad_648_1 : 7;  // Offset: 648 Size: 1
	bool bIsEmptyObjectHide : 1;  // Offset: 648 Size: 1
	char pad_649_1 : 7;  // Offset: 649 Size: 1
	bool bIsReFocusEnable : 1;  // Offset: 649 Size: 1
	char pad_650[6];  // Offset: 650 Size: 6
	struct TArray<struct UUserWidget*> ListItemWidgets;  // Offset: 656 Size: 16
	struct TArray<struct UObject*> ListItems;  // Offset: 672 Size: 16
	char pad_688[96];  // Offset: 688 Size: 96



 // Functions 
 public:
	void OnFocusedButton(int32_t PageIndex); // Function KartDrift.PageListTemplate.OnFocusedButton
	void OnClickedPrevPageList(int32_t Index); // Function KartDrift.PageListTemplate.OnClickedPrevPageList
	void OnClickedNextPageList(int32_t Index); // Function KartDrift.PageListTemplate.OnClickedNextPageList
	void OnClickedButton(int32_t PageIndex); // Function KartDrift.PageListTemplate.OnClickedButton
}; 
 
 


//Class KartDrift.AccountAsyncRequest Size 128
// Inherited 48 bytes 
class UAccountAsyncRequest : public UAccountSubsystem
{

 public: 
	struct TMap<struct FString, struct UAccountAsyncRequestItem*> Requests;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountAsyncRequestItem Size 112
// Inherited 40 bytes 
class UAccountAsyncRequestItem : public UObject
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HeadlightComponent Size 896
// Inherited 896 bytes 
class UHeadlightComponent : public USpotLightComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.IceReaction Size 880
// Inherited 880 bytes 
class UIceReaction : public UWaterReaction
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountNews Size 224
// Inherited 48 bytes 
class UAccountNews : public UAccountSubsystem
{

 public: 
	char pad_48[176];  // Offset: 48 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BaseConnectRuleComponent Size 200
// Inherited 176 bytes 
class UBaseConnectRuleComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountBot Size 56
// Inherited 48 bytes 
class UAccountBot : public UAccountSubsystem
{

 public: 
	char pad_48[8];  // Offset: 48 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedSinglePawn Size 944
// Inherited 936 bytes 
class ASpeedSinglePawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void Multicast_Logout(); // Function KartDrift.SpeedSinglePawn.Multicast_Logout
}; 
 
 


//Class KartDrift.RaceRankWidget Size 904
// Inherited 608 bytes 
class URaceRankWidget : public UUserWidget
{

 public: 
	struct TArray<struct URaceRankRowWidget*> RankGroupPlayers;  // Offset: 608 Size: 16
	struct UTextBlock* PlayerRankText;  // Offset: 624 Size: 8
	struct UTextBlock* PlayerRankTextBefore;  // Offset: 632 Size: 8
	struct UTextBlock* PlayerCountText;  // Offset: 640 Size: 8
	struct UWidgetAnimation* RankSlideWinning;  // Offset: 648 Size: 8
	struct UWidgetAnimation* RankSlideLosing;  // Offset: 656 Size: 8
	struct UVerticalBox* V_RankBox;  // Offset: 664 Size: 8
	struct TArray<struct AKdPawn*> LatestRankPawnList;  // Offset: 672 Size: 16
	struct TArray<struct AKdPawn*> LastRankPawnList;  // Offset: 688 Size: 16
	struct TMap<struct AKdPawn*, struct FRankPlayerInfo> RankPlayerInfoMap;  // Offset: 704 Size: 80
	char pad_784[32];  // Offset: 784 Size: 32
	struct USpectatorComponent* SpectatorComponent;  // Offset: 816 Size: 8
	char pad_824[8];  // Offset: 824 Size: 8
	struct URaceRankComponent* RaceRankComponent;  // Offset: 832 Size: 8
	char pad_840[56];  // Offset: 840 Size: 56
	struct UTeamColorDataAsset* TeamColorDataAsset;  // Offset: 896 Size: 8



 // Functions 
 public:
	void RefreshRank(); // Function KartDrift.RaceRankWidget.RefreshRank
	void ManagedTick(float inDeltaTime); // Function KartDrift.RaceRankWidget.ManagedTick
	bool IsLocalPlayMode(); // Function KartDrift.RaceRankWidget.IsLocalPlayMode
}; 
 
 


//Class KartDrift.M_EmoticonPageWidget Size 768
// Inherited 768 bytes 
class UM_EmoticonPageWidget : public UEmoticonPageWidget
{

 public: 



 // Functions 
 public:
	void OnEmoticonTouched(int32_t ButtonIndex); // Function KartDrift.M_EmoticonPageWidget.OnEmoticonTouched
}; 
 
 


//Class KartDrift.PrKartUpgrade Size 80
// Inherited 72 bytes 
class UPrKartUpgrade : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bSuccess : 1;  // Offset: 72 Size: 1
	enum class EKtItemGrade KartGrade;  // Offset: 73 Size: 1
	char pad_74[6];  // Offset: 74 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbyGameMode Size 784
// Inherited 704 bytes 
class ADedicatedLobbyGameMode : public AGameModeBase
{

 public: 
	char pad_704[16];  // Offset: 704 Size: 16
	struct UHttpServerRequester* SessionApiServer;  // Offset: 720 Size: 8
	char pad_728[56];  // Offset: 728 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseIceBallQuestWidget Size 664
// Inherited 608 bytes 
class ULicenseIceBallQuestWidget : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	struct ULicenseIceBallQuestWidgetInst* V_Quest0;  // Offset: 624 Size: 8
	struct ULicenseIceBallQuestWidgetInst* V_Quest1;  // Offset: 632 Size: 8
	struct ULicenseIceBallQuestWidgetInst* V_Quest2;  // Offset: 640 Size: 8
	struct ULicenseIceBallQuestWidgetInst* V_Quest3;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_Show;  // Offset: 656 Size: 8



 // Functions 
 public:
	void OnDriftClear(int32_t InIndex); // Function KartDrift.LicenseIceBallQuestWidget.OnDriftClear
}; 
 
 


//Class KartDrift.KdButtonImage Size 1520
// Inherited 616 bytes 
class UKdButtonImage : public UKdImage
{

 public: 
	char pad_616[8];  // Offset: 616 Size: 8
	struct FButtonStyleTag ButtonColorTag;  // Offset: 624 Size: 56
	struct FSlateBrush FocusedBrush;  // Offset: 680 Size: 136
	struct FSlateBrush CheckedBrush;  // Offset: 816 Size: 136
	struct FSlateBrush PressedBrush;  // Offset: 952 Size: 136
	struct FSlateBrush HoveredBrush;  // Offset: 1088 Size: 136
	struct FSlateBrush NormalBrush;  // Offset: 1224 Size: 136
	struct FSlateBrush DisabledBrush;  // Offset: 1360 Size: 136
	char pad_1496_1 : 7;  // Offset: 1496 Size: 1
	bool bForCheckBox : 1;  // Offset: 1496 Size: 1
	char pad_1497_1 : 7;  // Offset: 1497 Size: 1
	bool bLongPress : 1;  // Offset: 1497 Size: 1
	char pad_1498[2];  // Offset: 1498 Size: 2
	float LongPressTime;  // Offset: 1500 Size: 4
	char pad_1504[16];  // Offset: 1504 Size: 16



 // Functions 
 public:
	void UpdateBrush(); // Function KartDrift.KdButtonImage.UpdateBrush
}; 
 
 


//Class KartDrift.AccountLootBox Size 192
// Inherited 48 bytes 
class UAccountLootBox : public UAccountSubsystem
{

 public: 
	char pad_48[144];  // Offset: 48 Size: 144



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAcquireKDST Size 96
// Inherited 72 bytes 
class UPrAcquireKDST : public UPrPacket
{

 public: 
	struct FString Token;  // Offset: 72 Size: 16
	struct FDateTime expire;  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAIMissionComponent Size 464
// Inherited 176 bytes 
class ULicenseAIMissionComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct ULicenseAIMissionActorData* Data;  // Offset: 200 Size: 8
	struct UShadowPlaySetupComponent* ShadowPlaySetupComponent;  // Offset: 208 Size: 8
	float DraftLastTime;  // Offset: 216 Size: 4
	char pad_220_1 : 7;  // Offset: 220 Size: 1
	bool ScoreGate : 1;  // Offset: 220 Size: 1
	char pad_221[3];  // Offset: 221 Size: 3
	struct TArray<struct AActor*> SpawnedActors;  // Offset: 224 Size: 16
	struct UCurveFloat* SpawnCurve;  // Offset: 240 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 248 Size: 8
	struct AActor* Pawn;  // Offset: 256 Size: 8
	char pad_264[80];  // Offset: 264 Size: 80
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 344 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 384 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 424 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqCheckStickerStockName Size 72
// Inherited 56 bytes 
class ULqCheckStickerStockName : public UPqPacket
{

 public: 
	struct FString Name;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingProfileWidget Size 984
// Inherited 608 bytes 
class ULoadingProfileWidget : public UUserWidget
{

 public: 
	struct UUserWidget* UserEmblem;  // Offset: 608 Size: 8
	struct UPlatformIconWidget* V_Image_Platform;  // Offset: 616 Size: 8
	struct UImage* Image_Promotion;  // Offset: 624 Size: 8
	struct UKdButtonImage* Image_HighLight;  // Offset: 632 Size: 8
	struct UWidgetSwitcher* WidgetSwitcher_Slot;  // Offset: 640 Size: 8
	struct UTextBlock* TextBlock_UserName;  // Offset: 648 Size: 8
	struct UTextBlock* TextBlock_KartName;  // Offset: 656 Size: 8
	struct UTextBlock* TextBlock_KartLevel;  // Offset: 664 Size: 8
	struct UKdImage* V_KartGradeBg;  // Offset: 672 Size: 8
	struct UKdTextBlock* V_KartGradeText;  // Offset: 680 Size: 8
	struct UImage* V_BeginnerCareIcon;  // Offset: 688 Size: 8
	struct UImage* V_HighlightPoint;  // Offset: 696 Size: 8
	struct UProgressBar* ProgressBar_Loading;  // Offset: 704 Size: 8
	enum class ERaceTeamType TeamType;  // Offset: 712 Size: 1
	char pad_713[7];  // Offset: 713 Size: 7
	struct TMap<enum class ERaceTeamType, struct FLinearColor> TeamColorContainer;  // Offset: 720 Size: 80
	struct TMap<enum class ERaceTeamType, struct FLinearColor> TeamHighlightPointColorContainer;  // Offset: 800 Size: 80
	struct TMap<enum class ERaceTeamType, struct UObject*> TeamResourceContainer;  // Offset: 880 Size: 80
	char pad_960[24];  // Offset: 960 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLiveryDelete Size 88
// Inherited 72 bytes 
class UPrLiveryDelete : public UPrPacket
{

 public: 
	struct FString liveryId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountFuncLib Size 80
// Inherited 48 bytes 
class UAccountFuncLib : public UGameInstanceSubsystem
{

 public: 
	struct FSoftClassPath ImplClassName;  // Offset: 48 Size: 24
	struct UAccountFuncLibImpl* Impl;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemFilterCollection Size 64
// Inherited 40 bytes 
class UItemFilterCollection : public UObject
{

 public: 
	struct TArray<struct TScriptInterface<IKdItemFilter>> Filters;  // Offset: 40 Size: 16
	enum class EItemType LastBlockItemId;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseJumpEnd Size 88
// Inherited 80 bytes 
class UTransition_LicenseJumpEnd : public URaceGameTransition
{

 public: 
	struct ALicenseJumpPhysicsZone* Zone;  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetEmblem Size 64
// Inherited 64 bytes 
class UBelongingDataAssetEmblem : public UBelongingDataAsset
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountCustomGame Size 728
// Inherited 48 bytes 
class UAccountCustomGame : public UAccountSubsystem
{

 public: 
	char pad_48[24];  // Offset: 48 Size: 24
	struct FCustomGameInfo CustomGameInfo;  // Offset: 72 Size: 280
	char pad_352[152];  // Offset: 352 Size: 152
	struct FCustomGameInviteData LastAskCustomInviteData;  // Offset: 504 Size: 112
	char pad_616[112];  // Offset: 616 Size: 112



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShopXboxLive Size 200
// Inherited 200 bytes 
class UAccountShopXboxLive : public UAccountShopPlatform
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqReportLiverySticker Size 128
// Inherited 56 bytes 
class UPqReportLiverySticker : public UPqPacket
{

 public: 
	struct FString npsn;  // Offset: 56 Size: 16
	struct FString riderName;  // Offset: 72 Size: 16
	struct FString liveryStickerId;  // Offset: 88 Size: 16
	struct FString liveryStickerLabel;  // Offset: 104 Size: 16
	enum class EKtLiveryState State;  // Offset: 120 Size: 1
	char pad_121[7];  // Offset: 121 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PodiumSkydome Size 560
// Inherited 544 bytes 
class APodiumSkydome : public AActor
{

 public: 
	struct USpotLightComponent* FillSpotLightComponent;  // Offset: 544 Size: 8
	struct USpotLightComponent* KeySpotLightComponent;  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MailRequest Size 72
// Inherited 40 bytes 
class UMailRequest : public UObject
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetMyStickerDownloadList Size 96
// Inherited 72 bytes 
class ULrGetMyStickerDownloadList : public UPrPacket
{

 public: 
	struct TArray<int64_t> stickerStockIds;  // Offset: 72 Size: 16
	int32_t maxStickerCount;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMailList Size 88
// Inherited 48 bytes 
class UPcMailList : public UPcPacket
{

 public: 
	struct FString listName;  // Offset: 48 Size: 16
	struct TArray<struct FKtMail> mails;  // Offset: 64 Size: 16
	char pad_80_1 : 7;  // Offset: 80 Size: 1
	bool continued : 1;  // Offset: 80 Size: 1
	char pad_81[7];  // Offset: 81 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountEmoticon Size 72
// Inherited 48 bytes 
class UAccountEmoticon : public UAccountSubsystem
{

 public: 
	char pad_48[24];  // Offset: 48 Size: 24



 // Functions 
 public:
	void OnCreateEmoticon(struct UServerPacket* Packet); // Function KartDrift.AccountEmoticon.OnCreateEmoticon
}; 
 
 


//Class KartDrift.PqFindRider Size 72
// Inherited 56 bytes 
class UPqFindRider : public UPqPacket
{

 public: 
	struct FString Name;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRocketQuestWidget Size 712
// Inherited 608 bytes 
class ULicenseRocketQuestWidget : public UUserWidget
{

 public: 
	char pad_608[24];  // Offset: 608 Size: 24
	struct TArray<struct FLinearColor> ColorSolidList;  // Offset: 632 Size: 16
	struct TArray<struct FLinearColor> ColorBGList;  // Offset: 648 Size: 16
	struct ULicenseRocketQuestWidgetInst* V_Quest0;  // Offset: 664 Size: 8
	struct ULicenseRocketQuestWidgetInst* V_Quest1;  // Offset: 672 Size: 8
	struct ULicenseRocketQuestWidgetInst* V_Quest2;  // Offset: 680 Size: 8
	struct UWidgetAnimation* Anim_ShowMissileTargetOrder;  // Offset: 688 Size: 8
	struct UWidgetAnimation* Anim_Success;  // Offset: 696 Size: 8
	struct UWidgetAnimation* Anim_Fail;  // Offset: 704 Size: 8



 // Functions 
 public:
	void OnQuestSuccess(bool bSuccess, int32_t Index); // Function KartDrift.LicenseRocketQuestWidget.OnQuestSuccess
	void OnNewQuest(struct TArray<int32_t> QuestList); // Function KartDrift.LicenseRocketQuestWidget.OnNewQuest
}; 
 
 


//Class KartDrift.PqCommandSetLiveryReportExpire Size 72
// Inherited 72 bytes 
class UPqCommandSetLiveryReportExpire : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioWidgetBase Size 624
// Inherited 608 bytes 
class UScenarioWidgetBase : public UUserWidget
{

 public: 
	struct FMulticastInlineDelegate OnFinishedDelegate;  // Offset: 608 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PacketSaveGame Size 72
// Inherited 40 bytes 
class UPacketSaveGame : public USaveGame
{

 public: 
	struct TArray<struct FKartRepMovement> RepMovementList;  // Offset: 40 Size: 16
	struct TArray<struct FReplicatedKartState> KartStateList;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountEmergencyEvent Size 72
// Inherited 48 bytes 
class UAccountEmergencyEvent : public UAccountSubsystem
{

 public: 
	char pad_48[24];  // Offset: 48 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceHudWidget Size 744
// Inherited 608 bytes 
class URaceHudWidget : public UUserWidget
{

 public: 
	struct URaceCounterWidget* RaceCounterWidget;  // Offset: 608 Size: 8
	struct UWidgetSwitcher* V_WS_Sound;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* V_WS_Mic;  // Offset: 624 Size: 8
	struct UButtonTemplate* V_SoundButton_Off;  // Offset: 632 Size: 8
	struct UButtonTemplate* V_SoundButton_On;  // Offset: 640 Size: 8
	struct UButtonTemplate* V_MICButton_Off;  // Offset: 648 Size: 8
	struct UButtonTemplate* V_MICButton_On;  // Offset: 656 Size: 8
	char pad_664[80];  // Offset: 664 Size: 80



 // Functions 
 public:
	void ShowHUD(); // Function KartDrift.RaceHudWidget.ShowHUD
	void RemoveChildFromSlot(struct FName SlotName, struct UWidget* Widget); // Function KartDrift.RaceHudWidget.RemoveChildFromSlot
	void OnVoiceChatOnOffButtonClicked(int32_t InIndex); // Function KartDrift.RaceHudWidget.OnVoiceChatOnOffButtonClicked
	void OnMicOnOffButtonClicked(int32_t InIndex); // Function KartDrift.RaceHudWidget.OnMicOnOffButtonClicked
	void HideHud(); // Function KartDrift.RaceHudWidget.HideHud
	struct UPanelWidget* GetSlotFromRoot(struct FName SlotName); // Function KartDrift.RaceHudWidget.GetSlotFromRoot
	void ClearChildFromSlot(struct FName SlotName); // Function KartDrift.RaceHudWidget.ClearChildFromSlot
	void BeginRaceCountdown(float BeginTime); // Function KartDrift.RaceHudWidget.BeginRaceCountdown
	struct UPanelSlot* AddChildToSlot(struct FName SlotName, struct UWidget* Widget); // Function KartDrift.RaceHudWidget.AddChildToSlot
}; 
 
 


//Class KartDrift.PqCancelMatch Size 56
// Inherited 56 bytes 
class UPqCancelMatch : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoginLogicComponent Size 608
// Inherited 224 bytes 
class ULoginLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224_1 : 7;  // Offset: 224 Size: 1
	bool bIsEntryTutorial : 1;  // Offset: 224 Size: 1
	char pad_225_1 : 7;  // Offset: 225 Size: 1
	bool bIsCinematicSeasonMovie : 1;  // Offset: 225 Size: 1
	char pad_226_1 : 7;  // Offset: 226 Size: 1
	bool bIsCinematicMainMovie : 1;  // Offset: 226 Size: 1
	char pad_227[381];  // Offset: 227 Size: 381



 // Functions 
 public:
	void ShowNickNameCreationWidget(); // Function KartDrift.LoginLogicComponent.ShowNickNameCreationWidget
	void ShowNickNameChangeWidget(); // Function KartDrift.LoginLogicComponent.ShowNickNameChangeWidget
	void OnWaitExpireAccount(int32_t ExpireSec); // Function KartDrift.LoginLogicComponent.OnWaitExpireAccount
	void OnRiderNameDuplicateCheck(enum class EPrSetRiderNameResult InCreateResult, struct FString InNotSupportedLetter); // Function KartDrift.LoginLogicComponent.OnRiderNameDuplicateCheck
	void OnNeedAccountLinkSelect(bool bInAllowAccountLinkGuest, bool bInMustAccountLink); // Function KartDrift.LoginLogicComponent.OnNeedAccountLinkSelect
	void OnLinkConfirm(bool bSuccess, struct FText ErrorMsg); // Function KartDrift.LoginLogicComponent.OnLinkConfirm
	void OnCreateNicknameResult(enum class EPrSetRiderNameResult InCreateResult, struct FString InNotSupportedLetter); // Function KartDrift.LoginLogicComponent.OnCreateNicknameResult
}; 
 
 


//Class KartDrift.ItemTacticalWidget Size 672
// Inherited 608 bytes 
class UItemTacticalWidget : public UUserWidget
{

 public: 
	UItemTacticalRowWidget* RightRowWidgetClass;  // Offset: 608 Size: 8
	UItemTacticalRowWidget* LeftRowWidgetClass;  // Offset: 616 Size: 8
	struct UVerticalBox* LeftVertBox;  // Offset: 624 Size: 8
	struct UVerticalBox* RightVertBox;  // Offset: 632 Size: 8
	struct TArray<struct FHitWidgetRowInfo> LeftInfoList;  // Offset: 640 Size: 16
	struct TArray<struct FHitWidgetRowInfo> RightInfoList;  // Offset: 656 Size: 16



 // Functions 
 public:
	void OnRacePlayerResult(); // Function KartDrift.ItemTacticalWidget.OnRacePlayerResult
	void Disappear(int32_t ID); // Function KartDrift.ItemTacticalWidget.Disappear
	void AddInfo(struct FHitInfo& HitInfo); // Function KartDrift.ItemTacticalWidget.AddInfo
}; 
 
 


//Class KartDrift.AccountVoiceChat Size 376
// Inherited 48 bytes 
class UAccountVoiceChat : public UAccountSubsystem
{

 public: 
	char pad_48[328];  // Offset: 48 Size: 328



 // Functions 
 public:
	void OnGfsFriendRemoved(struct FAccountPlatformData& NotFriend); // Function KartDrift.AccountVoiceChat.OnGfsFriendRemoved
	void OnGfsFriendAdded(struct FAccountPlatformData& NewFriend); // Function KartDrift.AccountVoiceChat.OnGfsFriendAdded
}; 
 
 


//Class KartDrift.AccountEvent Size 48
// Inherited 48 bytes 
class UAccountEvent : public UAccountSubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetRecommandFriends Size 56
// Inherited 56 bytes 
class UPqGetRecommandFriends : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InGameWidgetLogicComponent Size 248
// Inherited 224 bytes 
class UInGameWidgetLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[17];  // Offset: 224 Size: 17
	enum class EInputDeviceType CurrentInputDevice;  // Offset: 241 Size: 1
	char pad_242[6];  // Offset: 242 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FuncLib_General Size 40
// Inherited 40 bytes 
class UFuncLib_General : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountAttendanceEvent Size 232
// Inherited 48 bytes 
class UAccountAttendanceEvent : public UAccountEvent
{

 public: 
	struct TMap<struct FString, struct FKtAttendanceEventDef> events;  // Offset: 48 Size: 80
	char pad_128[104];  // Offset: 128 Size: 104



 // Functions 
 public:
	void OnPrAttendanceEventInfo(struct FPrResult Result, struct UPrPacket* ReceivedPacket); // Function KartDrift.AccountAttendanceEvent.OnPrAttendanceEventInfo
}; 
 
 


//Class KartDrift.AccountShopMobile Size 200
// Inherited 200 bytes 
class UAccountShopMobile : public UAccountShopPlatform
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Pr2ndPwd Size 80
// Inherited 72 bytes 
class UPr2ndPwd : public UPrPacket
{

 public: 
	int32_t failCount;  // Offset: 72 Size: 4
	int32_t maxFailCount;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MediaWallGameInfoWidget Size 624
// Inherited 608 bytes 
class UMediaWallGameInfoWidget : public UUserWidget
{

 public: 
	struct UTextBlock* TrackName;  // Offset: 608 Size: 8
	struct UTextBlock* ModeName;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPreAuth Size 96
// Inherited 56 bytes 
class UPqPreAuth : public UPqPacket
{

 public: 
	struct FString Key;  // Offset: 56 Size: 16
	struct FString clientVer;  // Offset: 72 Size: 16
	enum class EKtAccountPlatform AccountPlatform;  // Offset: 88 Size: 1
	enum class EKtPlatform platform;  // Offset: 89 Size: 1
	char pad_90[6];  // Offset: 90 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRegisterRecentActivity Size 72
// Inherited 72 bytes 
class UPrRegisterRecentActivity : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMessageWidget Size 664
// Inherited 608 bytes 
class ULicenseMessageWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimation* Nice_Anim;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_addscore;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* Ws_Ment;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_Text_Message;  // Offset: 632 Size: 8
	struct UWidgetSwitcher* WS_MentType;  // Offset: 640 Size: 8
	struct UWidgetSwitcher* V_Score_Switcher;  // Offset: 648 Size: 8
	struct UKdTextBlock* V_Add_Score_Text;  // Offset: 656 Size: 8



 // Functions 
 public:
	void RemoveObstacle(int32_t InIndex); // Function KartDrift.LicenseMessageWidget.RemoveObstacle
	void Nice(int32_t MentIndex, int32_t Score); // Function KartDrift.LicenseMessageWidget.Nice
	void ChargeGauge(struct FText Text); // Function KartDrift.LicenseMessageWidget.ChargeGauge
}; 
 
 


//Class KartDrift.AccountLoginEvent Size 96
// Inherited 48 bytes 
class UAccountLoginEvent : public UAccountEvent
{

 public: 
	char pad_48[48];  // Offset: 48 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandEtc Size 72
// Inherited 72 bytes 
class UPqCommandEtc : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SignificantComponent Size 200
// Inherited 176 bytes 
class USignificantComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct TArray<struct UActorComponent*> ManagedComponents;  // Offset: 184 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRankComponent Size 344
// Inherited 176 bytes 
class URaceRankComponent : public UActorComponent
{

 public: 
	char pad_176[88];  // Offset: 176 Size: 88
	struct TArray<struct AKdPawn*> RaceGameStateRankList;  // Offset: 264 Size: 16
	struct TArray<struct AKdPawn*> CachedPawnList;  // Offset: 280 Size: 16
	char pad_296[40];  // Offset: 296 Size: 40
	float Mileage1st;  // Offset: 336 Size: 4
	char pad_340[4];  // Offset: 340 Size: 4



 // Functions 
 public:
	void SetLaps(int32_t InLapCount); // Function KartDrift.RaceRankComponent.SetLaps
	void InitCheckPoints(int32_t InLapCount); // Function KartDrift.RaceRankComponent.InitCheckPoints
}; 
 
 


//Class KartDrift.PqSendReport Size 208
// Inherited 56 bytes 
class UPqSendReport : public UPqPacket
{

 public: 
	struct FString suspectId;  // Offset: 56 Size: 16
	struct FString suspectSubId;  // Offset: 72 Size: 16
	struct FString suspectName;  // Offset: 88 Size: 16
	enum class EKtAccountPlatform suspectPlatform;  // Offset: 104 Size: 1
	enum class EKtReportCategory Category;  // Offset: 105 Size: 1
	char pad_106[6];  // Offset: 106 Size: 6
	struct FString subcategory;  // Offset: 112 Size: 16
	struct FString reportRoute;  // Offset: 128 Size: 16
	struct FString gameId;  // Offset: 144 Size: 16
	struct FString replayPath;  // Offset: 160 Size: 16
	struct FString Message;  // Offset: 176 Size: 16
	struct FString detailInfo;  // Offset: 192 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PhysXKartAnimInstance Size 2976
// Inherited 704 bytes 
class UPhysXKartAnimInstance : public UAnimInstance
{

 public: 
	char pad_704[8];  // Offset: 704 Size: 8
	char pad_712_1 : 7;  // Offset: 712 Size: 1
	bool bOldSteer : 1;  // Offset: 712 Size: 1
	char pad_713[3];  // Offset: 713 Size: 3
	float MAX_SUSPENSION_TRAVEL;  // Offset: 716 Size: 4
	float MAX_SUSPENSION_TRAVEL_LOWER;  // Offset: 720 Size: 4
	char pad_724_1 : 7;  // Offset: 724 Size: 1
	bool HasFrontSteering : 1;  // Offset: 724 Size: 1
	char pad_725[3];  // Offset: 725 Size: 3
	float SteerRotation;  // Offset: 728 Size: 4
	char pad_732[4];  // Offset: 732 Size: 4
	struct FRotator FrontRotation;  // Offset: 736 Size: 12
	struct FRotator BackRotation;  // Offset: 748 Size: 12
	float KartSpeed;  // Offset: 760 Size: 4
	float SpeedRate;  // Offset: 764 Size: 4
	struct TArray<float> SuspensionZ;  // Offset: 768 Size: 16
	float PhysicsWithBlend;  // Offset: 784 Size: 4
	float WheelBlendWeights;  // Offset: 788 Size: 4
	struct TArray<float> LayerBlend;  // Offset: 792 Size: 16
	char pad_808[1948];  // Offset: 808 Size: 1948
	char pad_2756_1 : 7;  // Offset: 2756 Size: 1
	bool bTransforming : 1;  // Offset: 2756 Size: 1
	char pad_2757_1 : 7;  // Offset: 2757 Size: 1
	bool bTransformed : 1;  // Offset: 2757 Size: 1
	char pad_2758_1 : 7;  // Offset: 2758 Size: 1
	bool bUntransforming : 1;  // Offset: 2758 Size: 1
	char pad_2759_1 : 7;  // Offset: 2759 Size: 1
	bool bUntransformed : 1;  // Offset: 2759 Size: 1
	char pad_2760_1 : 7;  // Offset: 2760 Size: 1
	bool bPick : 1;  // Offset: 2760 Size: 1
	char pad_2761_1 : 7;  // Offset: 2761 Size: 1
	bool bLastPick : 1;  // Offset: 2761 Size: 1
	char pad_2762_1 : 7;  // Offset: 2762 Size: 1
	bool bLastTransforming : 1;  // Offset: 2762 Size: 1
	char pad_2763_1 : 7;  // Offset: 2763 Size: 1
	bool bHasIdleAnim : 1;  // Offset: 2763 Size: 1
	char pad_2764_1 : 7;  // Offset: 2764 Size: 1
	bool bHasTransformAnim : 1;  // Offset: 2764 Size: 1
	char pad_2765_1 : 7;  // Offset: 2765 Size: 1
	bool bHasTransformedAnim : 1;  // Offset: 2765 Size: 1
	char pad_2766[90];  // Offset: 2766 Size: 90
	struct UAnimSequenceBase* IdleAnimation;  // Offset: 2856 Size: 8
	struct UAnimSequenceBase* AnimTransform;  // Offset: 2864 Size: 8
	struct UAnimSequenceBase* AnimTransformed;  // Offset: 2872 Size: 8
	struct UAnimMontage* SufferMontage_Rocket;  // Offset: 2880 Size: 8
	struct UAnimMontage* SufferMontage_Water;  // Offset: 2888 Size: 8
	struct UAnimMontage* SufferMontage_WaterEnd;  // Offset: 2896 Size: 8
	struct UAnimMontage* SufferMontage_Ice;  // Offset: 2904 Size: 8
	struct UAnimMontage* SufferMontage_IceEnd;  // Offset: 2912 Size: 8
	struct UAnimMontage* SufferMontage_Banana;  // Offset: 2920 Size: 8
	struct UAnimSequenceBase* PickAnim;  // Offset: 2928 Size: 8
	struct UAnimMontage* Montage_EngineStarting;  // Offset: 2936 Size: 8
	float TransformAnimRate;  // Offset: 2944 Size: 4
	float UntransLoopRate;  // Offset: 2948 Size: 4
	float TransLoopRate;  // Offset: 2952 Size: 4
	float IdleAnimRate;  // Offset: 2956 Size: 4
	float DefaultIdleAnimRate;  // Offset: 2960 Size: 4
	float DefaultTransformLoopAnimRate;  // Offset: 2964 Size: 4
	char pad_2968_1 : 7;  // Offset: 2968 Size: 1
	bool bIdleRateBySpeed : 1;  // Offset: 2968 Size: 1
	char pad_2969_1 : 7;  // Offset: 2969 Size: 1
	bool bTransformLoopRateBySpeed : 1;  // Offset: 2969 Size: 1
	char pad_2970[6];  // Offset: 2970 Size: 6



 // Functions 
 public:
	void StopMontage(enum class EKartPlayingMontageState InState, float BlendOutTime); // Function KartDrift.PhysXKartAnimInstance.StopMontage
	float PlayMontage(enum class EKartPlayingMontageState InState, float InPlayRate, enum class EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // Function KartDrift.PhysXKartAnimInstance.PlayMontage
	bool IsPick(); // Function KartDrift.PhysXKartAnimInstance.IsPick
}; 
 
 


//Class KartDrift.PqCustomGameSetPlatformSession Size 80
// Inherited 56 bytes 
class UPqCustomGameSetPlatformSession : public UPqPacket
{

 public: 
	struct FString sessionUri;  // Offset: 56 Size: 16
	enum class EKtAccountPlatform platform;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModePawn Size 40
// Inherited 40 bytes 
class UModePawn : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OnFailLicenseRule Size 80
// Inherited 80 bytes 
class UOnFailLicenseRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountVDTEvent Size 384
// Inherited 48 bytes 
class UAccountVDTEvent : public UAccountEvent
{

 public: 
	struct TMap<struct FString, struct FVDTEventDef> events;  // Offset: 48 Size: 80
	struct TMap<struct FString, struct FVDTEventData> VDTEventDataMap;  // Offset: 128 Size: 80
	struct TMap<struct FString, struct FVDTEventData> PreVDTEventDataMap;  // Offset: 208 Size: 80
	struct FDateTime RecentUpdateDateTime;  // Offset: 288 Size: 8
	struct FVDTEventData UserVDTEventData;  // Offset: 296 Size: 56
	char pad_352[32];  // Offset: 352 Size: 32



 // Functions 
 public:
	void OnUPcVDTEventData(struct UServerPacket* InPacket); // Function KartDrift.AccountVDTEvent.OnUPcVDTEventData
	void OnPrGetVDTEventReward(struct FPrResult Result, struct UPrPacket* ReceivedPacket); // Function KartDrift.AccountVDTEvent.OnPrGetVDTEventReward
}; 
 
 


//Class KartDrift.ListItemObject Size 56
// Inherited 40 bytes 
class UListItemObject : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqEquipKartSkill Size 72
// Inherited 56 bytes 
class UPqEquipKartSkill : public UPqPacket
{

 public: 
	struct FString skillNodeId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountADTEvent Size 288
// Inherited 48 bytes 
class UAccountADTEvent : public UAccountEvent
{

 public: 
	struct TMap<struct FString, struct FADTEventDef> events;  // Offset: 48 Size: 80
	char pad_128[40];  // Offset: 128 Size: 40
	struct TMap<struct FString, struct FADTEventData> ADTEventDataMap;  // Offset: 168 Size: 80
	struct FDateTime RecentUpdateDateTime;  // Offset: 248 Size: 8
	char pad_256[32];  // Offset: 256 Size: 32



 // Functions 
 public:
	void OnUPcADTEventData(struct UServerPacket* InPacket); // Function KartDrift.AccountADTEvent.OnUPcADTEventData
	void OnPrGetADTEventReward(struct FPrResult Result, struct UPrPacket* ReceivedPacket); // Function KartDrift.AccountADTEvent.OnPrGetADTEventReward
	void OnPrGetADTEventAllReward(struct FPrResult Result, struct UPrPacket* ReceivedPacket); // Function KartDrift.AccountADTEvent.OnPrGetADTEventAllReward
}; 
 
 


//Class KartDrift.AccountFuncLibImpl Size 48
// Inherited 40 bytes 
class UAccountFuncLibImpl : public UObject
{

 public: 
	struct UGameInstance* GameInstance;  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionHackChecked Size 144
// Inherited 48 bytes 
class UKtSessionHackChecked : public UKxObject
{

 public: 
	struct FString playerId;  // Offset: 48 Size: 16
	struct FString riderName;  // Offset: 64 Size: 16
	enum class ERaceMode raceMode;  // Offset: 80 Size: 1
	char pad_81[7];  // Offset: 81 Size: 7
	struct FString trackId;  // Offset: 88 Size: 16
	struct FString gameId;  // Offset: 104 Size: 16
	int32_t blockedLap;  // Offset: 120 Size: 4
	int32_t blockedLapTime;  // Offset: 124 Size: 4
	int32_t TotalLapTime;  // Offset: 128 Size: 4
	int32_t hackCheckLapTime;  // Offset: 132 Size: 4
	int32_t hackCheckTotalTime;  // Offset: 136 Size: 4
	char pad_140[4];  // Offset: 140 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLogin Size 56
// Inherited 56 bytes 
class UPqLogin : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopPurchase Size 112
// Inherited 56 bytes 
class UPqShopPurchase : public UPqPacket
{

 public: 
	struct FString Category;  // Offset: 56 Size: 16
	struct FString stockId;  // Offset: 72 Size: 16
	struct FString currency;  // Offset: 88 Size: 16
	int32_t Count;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameDataCache Size 128
// Inherited 40 bytes 
class UGameDataCache : public UObject
{

 public: 
	struct UAccountGameData* AccountGameData;  // Offset: 40 Size: 8
	char pad_48[32];  // Offset: 48 Size: 32
	struct UObject* Data;  // Offset: 80 Size: 8
	char pad_88[40];  // Offset: 88 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandBroadcast Size 72
// Inherited 72 bytes 
class UPqCommandBroadcast : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeItemSpawn_WaterBomb Size 216
// Inherited 104 bytes 
class UTimeItemSpawn_WaterBomb : public UItemSpawningRule
{

 public: 
	char pad_104[8];  // Offset: 104 Size: 8
	struct TArray<struct FTimeItemSpawnStruct> SpawnList;  // Offset: 112 Size: 16
	char pad_128[32];  // Offset: 128 Size: 32
	int32_t Index;  // Offset: 160 Size: 4
	char pad_164[4];  // Offset: 164 Size: 4
	struct AActor* DecalActor;  // Offset: 168 Size: 8
	struct TSoftObjectPtr<UStaticMesh> StartDecalMesh;  // Offset: 176 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIPathDataAsset Size 80
// Inherited 48 bytes 
class UAIPathDataAsset : public UDataAsset
{

 public: 
	struct FAIPathDataList dataList;  // Offset: 48 Size: 16
	int32_t SelectedIndex;  // Offset: 64 Size: 4
	int32_t TargetIndex;  // Offset: 68 Size: 4
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool IsClosedLoop : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCoinComponent Size 296
// Inherited 176 bytes 
class ULicenseCoinComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseCoinData* Data;  // Offset: 192 Size: 8
	struct TArray<struct ALicenseCoin*> CoinList;  // Offset: 200 Size: 16
	struct ULicenseScoreComponent* ScoreComponent;  // Offset: 216 Size: 8
	struct APawn* Pawn;  // Offset: 224 Size: 8
	struct TArray<struct AGoItem_Cube*> CubeList;  // Offset: 232 Size: 16
	struct UParticleSystemComponent* Particle;  // Offset: 248 Size: 8
	char pad_256[40];  // Offset: 256 Size: 40



 // Functions 
 public:
	void OnCrash(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.LicenseCoinComponent.OnCrash
}; 
 
 


//Class KartDrift.ItemContextComponent Size 176
// Inherited 176 bytes 
class UItemContextComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIEnableStraightWinCare Size 72
// Inherited 72 bytes 
class UAIEnableStraightWinCare : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommand Size 72
// Inherited 56 bytes 
class UPqCommand : public UPqPacket
{

 public: 
	struct FString Param;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTutorialRecord Size 72
// Inherited 72 bytes 
class UPrTutorialRecord : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestRule Size 72
// Inherited 72 bytes 
class UShadowQuestRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountGameData Size 216
// Inherited 48 bytes 
class UAccountGameData : public UAccountSubsystem
{

 public: 
	char pad_48[88];  // Offset: 48 Size: 88
	struct TMap<struct FString, struct UGameDataCache*> Caches;  // Offset: 136 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSpeedLimitWidget Size 728
// Inherited 608 bytes 
class ULicenseSpeedLimitWidget : public UUserWidget
{

 public: 
	struct UOverlay* V_OV_Speed;  // Offset: 608 Size: 8
	struct UKdTextBlock* Challengespeed;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_Add_Score_Text;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Enter_Anim;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Out_Anim;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_Success;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_Fail;  // Offset: 656 Size: 8
	struct UWidgetAnimation* Anim_addscore;  // Offset: 664 Size: 8
	char pad_672[56];  // Offset: 672 Size: 56



 // Functions 
 public:
	void OnNextSpeedLimit(float SuccessSpeed, int32_t Score); // Function KartDrift.LicenseSpeedLimitWidget.OnNextSpeedLimit
	void OnInitializeSpeedLimit(struct TArray<float> MinSpeed, struct TArray<float> MaxSpeed); // Function KartDrift.LicenseSpeedLimitWidget.OnInitializeSpeedLimit
}; 
 
 


//Class KartDrift.PcServerTime Size 64
// Inherited 48 bytes 
class UPcServerTime : public UPcPacket
{

 public: 
	struct FString utc;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIItemComponent Size 296
// Inherited 176 bytes 
class UAIItemComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct TSoftObjectPtr<UAIItemUseRuleData> ItemUseRuleData;  // Offset: 200 Size: 40
	struct UAIItemUseRuleData* ItemUseRuleDataAsset;  // Offset: 240 Size: 8
	struct AActor* RealPlayer;  // Offset: 248 Size: 8
	char pad_256[16];  // Offset: 256 Size: 16
	struct UItemComponent* ItemComponent;  // Offset: 272 Size: 8
	char pad_280[16];  // Offset: 280 Size: 16



 // Functions 
 public:
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.AIItemComponent.OnAffectedBy
}; 
 
 


//Class KartDrift.LicenseShadowAIComponent Size 784
// Inherited 176 bytes 
class ULicenseShadowAIComponent : public UActorComponent
{

 public: 
	struct ULicenseShadowAIData* Data;  // Offset: 176 Size: 8
	struct AKdPawn* PlayerPawn;  // Offset: 184 Size: 8
	struct AKdPawn* ShadowPawn;  // Offset: 192 Size: 8
	struct UKdPawnSpawner* PawnSpawner;  // Offset: 200 Size: 8
	struct FPawnRecordData RecordedData;  // Offset: 208 Size: 368
	char pad_576[208];  // Offset: 576 Size: 208



 // Functions 
 public:
	void StartReplayNow(); // Function KartDrift.LicenseShadowAIComponent.StartReplayNow
}; 
 
 


//Class KartDrift.AccountGarage Size 128
// Inherited 48 bytes 
class UAccountGarage : public UAccountSubsystem
{

 public: 
	struct TMap<struct FString, struct FKtKartBodyParam> KartBodyParams;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchTicket Size 120
// Inherited 40 bytes 
class UMatchTicket : public UObject
{

 public: 
	struct FString Ticket;  // Offset: 40 Size: 16
	struct FString status;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool Closed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	struct TArray<enum class ERaceMode> raceModes;  // Offset: 80 Size: 16
	int32_t MatchTargetType;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4
	struct TArray<int32_t> trackGroups;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountGrandPrix Size 312
// Inherited 48 bytes 
class UAccountGrandPrix : public UAccountSubsystem
{

 public: 
	char pad_48[264];  // Offset: 48 Size: 264



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceSaveGame3 Size 448
// Inherited 40 bytes 
class URaceSaveGame3 : public URaceSaveGameBase
{

 public: 
	char pad_40[408];  // Offset: 40 Size: 408



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetADTEventReward Size 64
// Inherited 56 bytes 
class UPqGetADTEventReward : public UPqPacket
{

 public: 
	int32_t rewardStep;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryMarketSearchStream Size 216
// Inherited 40 bytes 
class ULiveryMarketSearchStream : public UObject
{

 public: 
	struct ULiveryMarketSearch* Search;  // Offset: 40 Size: 8
	struct UAccountLiveryMarket* MarketServer;  // Offset: 48 Size: 8
	char pad_56[32];  // Offset: 56 Size: 32
	struct TArray<struct FStickerStock> Stocks;  // Offset: 88 Size: 16
	char pad_104[112];  // Offset: 104 Size: 112



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateBossHPWidget Size 112
// Inherited 72 bytes 
class UCreateBossHPWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> BossHPWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrReportLiveryDeleteConfirm Size 104
// Inherited 72 bytes 
class UPrReportLiveryDeleteConfirm : public UPrPacket
{

 public: 
	struct TArray<struct FKtLivery> liveryVector;  // Offset: 72 Size: 16
	struct TArray<struct FKtLiverySticker> liveryStickerVector;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SQNoAccountConfigStorage Size 48
// Inherited 40 bytes 
class USQNoAccountConfigStorage : public UShadowQuestConfigStorage
{

 public: 
	struct FRaceSaveGameLatestPtr LocalSaveGameCache;  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCalcRemainTimeScoreRule Size 72
// Inherited 72 bytes 
class ULicenseCalcRemainTimeScoreRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DraftComponent Size 264
// Inherited 176 bytes 
class UDraftComponent : public UActorComponent
{

 public: 
	char pad_176[88];  // Offset: 176 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryMarketSearch Size 144
// Inherited 40 bytes 
class ULiveryMarketSearch : public UObject
{

 public: 
	char pad_40[96];  // Offset: 40 Size: 96
	struct UAccountLiveryMarket* MarketServer;  // Offset: 136 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioInterface Size 40
// Inherited 40 bytes 
class UScenarioInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountLiveryMarket Size 504
// Inherited 48 bytes 
class UAccountLiveryMarket : public UAccountSubsystem
{

 public: 
	char pad_48[24];  // Offset: 48 Size: 24
	struct UAuthorizedServer* LiveryMarketServer;  // Offset: 72 Size: 8
	char pad_80[136];  // Offset: 80 Size: 136
	struct UStickerStockCache* StickerStockCache;  // Offset: 216 Size: 8
	char pad_224[184];  // Offset: 224 Size: 184
	struct TMap<int32_t, struct FLiveryStickerDesc> UploadPendingStickerDesc;  // Offset: 408 Size: 80
	struct ULiveryMarketTagCache* TagCache;  // Offset: 488 Size: 8
	struct ULiveryMarketTagIdCache* TagIdCache;  // Offset: 496 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SetLicenseScoreRule Size 88
// Inherited 72 bytes 
class USetLicenseScoreRule : public URuleObject
{

 public: 
	float TotalTime;  // Offset: 72 Size: 4
	float TimeWeight;  // Offset: 76 Size: 4
	int32_t ScoreWhenFinished;  // Offset: 80 Size: 4
	char pad_84_1 : 7;  // Offset: 84 Size: 1
	bool bFailOnTimeOver : 1;  // Offset: 84 Size: 1
	char pad_85[3];  // Offset: 85 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_GaragePageWidget Size 1232
// Inherited 1208 bytes 
class UC_GaragePageWidget : public UGaragePageWidget
{

 public: 
	struct TWeakObjectPtr<UPageListTemplate> WeakItemPageList;  // Offset: 1208 Size: 8
	char pad_1216[16];  // Offset: 1216 Size: 16



 // Functions 
 public:
	void OnReleasedRotatePawnButton(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnReleasedRotatePawnButton
	void OnPressedRotatePawnButton(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnPressedRotatePawnButton
	void OnClickedShowEmotionStorage(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedShowEmotionStorage
	void OnClickedPrevSubTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedPrevSubTab
	void OnClickedPrevMainTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedPrevMainTab
	void OnClickedPrevEmotionStorage(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedPrevEmotionStorage
	void OnClickedPrevCharacterTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedPrevCharacterTab
	void OnClickedNextSubTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedNextSubTab
	void OnClickedNextMainTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedNextMainTab
	void OnClickedNextEmotionStorage(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedNextEmotionStorage
	void OnClickedNextCharacterTab(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedNextCharacterTab
	void OnClickedChatButton(int32_t InIndex); // Function KartDrift.C_GaragePageWidget.OnClickedChatButton
}; 
 
 


//Class KartDrift.PcHostGame Size 168
// Inherited 48 bytes 
class UPcHostGame : public UPcPacket
{

 public: 
	struct FString gameId;  // Offset: 48 Size: 16
	struct UObject* gameSettings;  // Offset: 64 Size: 8
	struct TArray<struct FHostGamePlayer> players;  // Offset: 72 Size: 16
	struct FString sessionAPIEndpoint;  // Offset: 88 Size: 16
	struct FString sessionAPIKey;  // Offset: 104 Size: 16
	struct FString sessionAPIAuthToken;  // Offset: 120 Size: 16
	struct FString redisChannelName;  // Offset: 136 Size: 16
	struct UObject* ETC;  // Offset: 152 Size: 8
	char pad_160_1 : 7;  // Offset: 160 Size: 1
	bool isSpectator : 1;  // Offset: 160 Size: 1
	char pad_161[7];  // Offset: 161 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetCustomProperty Size 72
// Inherited 72 bytes 
class UPqCommandSetCustomProperty : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcKartUpgradeInfo Size 168
// Inherited 48 bytes 
class UPcKartUpgradeInfo : public UPcPacket
{

 public: 
	struct FString kartItemId;  // Offset: 48 Size: 16
	struct FOwnKartUpgradeInfo UpgradeInfo;  // Offset: 64 Size: 104



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqInviteCustomGame Size 96
// Inherited 56 bytes 
class UPqInviteCustomGame : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16
	struct FString riderName;  // Offset: 72 Size: 16
	struct FNullableInt32 Slot;  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetTrophy Size 72
// Inherited 72 bytes 
class UPqCommandSetTrophy : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountMail Size 336
// Inherited 48 bytes 
class UAccountMail : public UAccountSubsystem
{

 public: 
	struct TArray<struct FKtMailHeader> Received;  // Offset: 48 Size: 16
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<struct FKtMail> Sent;  // Offset: 72 Size: 16
	struct TArray<struct FKtMail> acquired;  // Offset: 88 Size: 16
	char pad_104[96];  // Offset: 104 Size: 96
	struct TMap<struct FString, struct FMailCache> ReceivedMailCache;  // Offset: 200 Size: 80
	struct TArray<struct UMailRequest*> MailRequests;  // Offset: 280 Size: 16
	struct UDelegateBarrier* Barrier;  // Offset: 296 Size: 8
	char pad_304[32];  // Offset: 304 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioInitializePauseMenu Size 112
// Inherited 72 bytes 
class UScenarioInitializePauseMenu : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ScenarioPauseWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FriendLogicComponent Size 224
// Inherited 224 bytes 
class UFriendLogicComponent : public UWidgetLogicComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Item Size 856
// Inherited 544 bytes 
class AItem : public AActor
{

 public: 
	char pad_544[8];  // Offset: 544 Size: 8
	struct USceneComponent* SceneComponent;  // Offset: 552 Size: 8
	enum class EItemType ItemType;  // Offset: 560 Size: 1
	char pad_561[7];  // Offset: 561 Size: 7
	struct TSoftObjectPtr<UTexture2D> ItemIcon;  // Offset: 568 Size: 40
	struct TSoftObjectPtr<UMaterialInstance> ItemBackground;  // Offset: 608 Size: 40
	int32_t GoItemUniqueID;  // Offset: 648 Size: 4
	char pad_652[148];  // Offset: 652 Size: 148
	struct UItemComponent* AuthAttacker;  // Offset: 800 Size: 8
	char pad_808[16];  // Offset: 808 Size: 16
	struct UItemComponent* LocalAttacker;  // Offset: 824 Size: 8
	struct UItemSlotComponent* OwnerItemSlot;  // Offset: 832 Size: 8
	int32_t ItemSequence;  // Offset: 840 Size: 4
	char pad_844_1 : 7;  // Offset: 844 Size: 1
	bool bNeedRegisterToSlot : 1;  // Offset: 844 Size: 1
	char pad_845_1 : 7;  // Offset: 845 Size: 1
	bool bChangeItemOnSlot : 1;  // Offset: 845 Size: 1
	char pad_846[2];  // Offset: 846 Size: 2
	int32_t ChangingItemIndex;  // Offset: 848 Size: 4
	char pad_852[4];  // Offset: 852 Size: 4



 // Functions 
 public:
	void OnRep_NeedRegisterToSlot(); // Function KartDrift.Item.OnRep_NeedRegisterToSlot
	void OnRep_ChangeItemOnSlot(); // Function KartDrift.Item.OnRep_ChangeItemOnSlot
}; 
 
 


//Class KartDrift.AccountMatch Size 288
// Inherited 48 bytes 
class UAccountMatch : public UAccountSubsystem
{

 public: 
	char pad_48[88];  // Offset: 48 Size: 88
	struct UMatchTicket* CurrentMatchTicket;  // Offset: 136 Size: 8
	struct UServerRequest* MatchRequest;  // Offset: 144 Size: 8
	char pad_152[48];  // Offset: 152 Size: 48
	struct UKtRaceDetails* SavedRaceDetails;  // Offset: 200 Size: 8
	char pad_208[80];  // Offset: 208 Size: 80



 // Functions 
 public:
	void RegisterMatch(struct TArray<enum class ERaceMode> GameType, bool bInExclusive, int32_t InMatchTargetType, struct TArray<int32_t>& InTrackGroups, struct FString InGrandPrixId); // Function KartDrift.AccountMatch.RegisterMatch
}; 
 
 


//Class KartDrift.StickerMarketLogicComponent Size 888
// Inherited 224 bytes 
class UStickerMarketLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[128];  // Offset: 224 Size: 128
	struct ULiveryMarketSearch* Top100SearchCur;  // Offset: 352 Size: 8
	struct ULiveryMarketSearch* Top100SearchPrev;  // Offset: 360 Size: 8
	char pad_368[344];  // Offset: 368 Size: 344
	struct UAccountLiveryMarket* Market;  // Offset: 712 Size: 8
	struct UKdAccount* Account;  // Offset: 720 Size: 8
	char pad_728[160];  // Offset: 728 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePauseWidget Size 856
// Inherited 816 bytes 
class ULicensePauseWidget : public UDialogTemplate
{

 public: 
	struct UKdTextBlock* V_MissionInfoTitle;  // Offset: 816 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry1;  // Offset: 824 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry2;  // Offset: 832 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry3;  // Offset: 840 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry4;  // Offset: 848 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountMisc Size 416
// Inherited 48 bytes 
class UAccountMisc : public UAccountSubsystem
{

 public: 
	char pad_48[368];  // Offset: 48 Size: 368



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseBossComponent Size 592
// Inherited 176 bytes 
class ULicenseBossComponent : public UActorComponent
{

 public: 
	char pad_176[48];  // Offset: 176 Size: 48
	struct FTransform BossTransform;  // Offset: 224 Size: 48
	struct ULicenseBossData* Data;  // Offset: 272 Size: 8
	float HP;  // Offset: 280 Size: 4
	char pad_284_1 : 7;  // Offset: 284 Size: 1
	bool bRageState : 1;  // Offset: 284 Size: 1
	char pad_285[3];  // Offset: 285 Size: 3
	float RageLastTime;  // Offset: 288 Size: 4
	char pad_292_1 : 7;  // Offset: 292 Size: 1
	bool bLastRage : 1;  // Offset: 292 Size: 1
	char pad_293[3];  // Offset: 293 Size: 3
	float SlipRadius;  // Offset: 296 Size: 4
	int32_t RageIndex;  // Offset: 300 Size: 4
	float LastBananaDistance;  // Offset: 304 Size: 4
	char pad_308[4];  // Offset: 308 Size: 4
	struct AKdPawn* BossPawn;  // Offset: 312 Size: 8
	struct AKdPawn* PlayerPawn;  // Offset: 320 Size: 8
	struct UItemComponent* BossItemComp;  // Offset: 328 Size: 8
	struct UItemComponent* SpawnItemComp;  // Offset: 336 Size: 8
	float CurrentDistance;  // Offset: 344 Size: 4
	char pad_348_1 : 7;  // Offset: 348 Size: 1
	bool bFinish : 1;  // Offset: 348 Size: 1
	char pad_349[11];  // Offset: 349 Size: 11
	enum class ELicenseBossState BossState;  // Offset: 360 Size: 4
	float CurrentStateTimer;  // Offset: 364 Size: 4
	int32_t SelectedNormalAttackPattern;  // Offset: 368 Size: 4
	int32_t SelectedRageAttackPattern;  // Offset: 372 Size: 4
	int32_t PatternIndex;  // Offset: 376 Size: 4
	float NormalAttackStartDistance;  // Offset: 380 Size: 4
	float RageAttackStartDistance;  // Offset: 384 Size: 4
	float NormalAttackTimer;  // Offset: 388 Size: 4
	char pad_392_1 : 7;  // Offset: 392 Size: 1
	bool bPlayStartAnim : 1;  // Offset: 392 Size: 1
	char pad_393[7];  // Offset: 393 Size: 7
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 400 Size: 16
	struct USplineComponent* SplineGuide;  // Offset: 416 Size: 8
	struct TSoftClassPtr<UObject> DamageWidgetClass;  // Offset: 424 Size: 40
	struct TSoftClassPtr<UObject> ItemCubeClass;  // Offset: 464 Size: 40
	struct TSoftObjectPtr<UStaticMesh> ItemCubeMeshClass;  // Offset: 504 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject;  // Offset: 544 Size: 40
	char pad_584[8];  // Offset: 584 Size: 8



 // Functions 
 public:
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.LicenseBossComponent.OnAffectedBy
}; 
 
 


//Class KartDrift.PqRegisterTag Size 72
// Inherited 56 bytes 
class UPqRegisterTag : public UPqPacket
{

 public: 
	struct TArray<struct FString> Tag;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemBigBanana Size 1232
// Inherited 856 bytes 
class AItemBigBanana : public AItem
{

 public: 
	struct USphereComponent* OverlapComponent;  // Offset: 856 Size: 8
	struct USkeletalMeshComponent* BananaSkeletalMeshComponent;  // Offset: 864 Size: 8
	struct TSoftObjectPtr<UAnimationAsset> BananaBeginAnimSequence;  // Offset: 872 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> BananaIdleAnimSequence;  // Offset: 912 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 952 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BananaMesh;  // Offset: 992 Size: 40
	struct TSoftClassPtr<UObject> Banana_Bullet;  // Offset: 1032 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1072 Size: 40
	char pad_1112[120];  // Offset: 1112 Size: 120



 // Functions 
 public:
	void MulticastBorn(struct FVector Location, struct FRotator Rotation, float TargetHeight); // Function KartDrift.ItemBigBanana.MulticastBorn
	void MulticastBeginOverlap(); // Function KartDrift.ItemBigBanana.MulticastBeginOverlap
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemBigBanana.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemBigBanana.MulticastAffectTo
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemBigBanana.BeginOverlap
}; 
 
 


//Class KartDrift.TouchItemButton Size 728
// Inherited 696 bytes 
class UTouchItemButton : public UTouchInputButton
{

 public: 
	char pad_696[16];  // Offset: 696 Size: 16
	struct UItemSlotWidget* V_ItemSlot;  // Offset: 712 Size: 8
	struct UNamedSlot* V_KeyGuideSlot;  // Offset: 720 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EmoticonPageWidget Size 768
// Inherited 744 bytes 
class UEmoticonPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* EmoticonPopup;  // Offset: 744 Size: 8
	struct UUserWidget* EmoticonWidget;  // Offset: 752 Size: 8
	char pad_760[8];  // Offset: 760 Size: 8



 // Functions 
 public:
	void OnBackButtonClicked(int32_t ButtonIndex); // Function KartDrift.EmoticonPageWidget.OnBackButtonClicked
}; 
 
 


//Class KartDrift.AccountNgs Size 48
// Inherited 48 bytes 
class UAccountNgs : public UAccountSubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CharacterSkeletalMeshComponent Size 4160
// Inherited 3856 bytes 
class UCharacterSkeletalMeshComponent : public USkeletalMeshComponent
{

 public: 
	char pad_3856[72];  // Offset: 3856 Size: 72
	struct TMap<enum class ECharacterMontage, struct TSoftObjectPtr<UAnimMontage>> AnimMontageContainer;  // Offset: 3928 Size: 80
	char pad_4008[8];  // Offset: 4008 Size: 8
	struct TArray<int32_t> LODToFrameSkip;  // Offset: 4016 Size: 16
	struct FCharacterDesc CharacterDesc;  // Offset: 4032 Size: 96
	struct UBelongingDataAssetCostume* CostumeAsset;  // Offset: 4128 Size: 8
	char pad_4136[24];  // Offset: 4136 Size: 24



 // Functions 
 public:
	void OnRep_CharacterDesc(); // Function KartDrift.CharacterSkeletalMeshComponent.OnRep_CharacterDesc
	void OnLoadComplete(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.CharacterSkeletalMeshComponent.OnLoadComplete
	void OnClientVerified(enum class EClientVerifierOrder InOrder); // Function KartDrift.CharacterSkeletalMeshComponent.OnClientVerified
}; 
 
 


//Class KartDrift.LicenseSequenceDecodingComponent Size 640
// Inherited 176 bytes 
class ULicenseSequenceDecodingComponent : public UActorComponent
{

 public: 
	struct ULevelSequence* Sequence;  // Offset: 176 Size: 8
	struct ULevelSequencePlayer* Player;  // Offset: 184 Size: 8
	struct UKartMovementReplication* ReplicationComponent;  // Offset: 192 Size: 8
	struct USimulationMovementComponent* MovementComponent;  // Offset: 200 Size: 8
	struct UBoostComponent* BoostComponent;  // Offset: 208 Size: 8
	struct UItemSlotComponent* ItemSlotComponent;  // Offset: 216 Size: 8
	struct TSoftClassPtr<UObject> SequenceWidgetClass;  // Offset: 224 Size: 40
	struct UDialogTemplate* SequenceWidget;  // Offset: 264 Size: 8
	struct ULicensePortraitMessageWidget* SequenceMessageWidget;  // Offset: 272 Size: 8
	struct UFMODEvent* PauseSound;  // Offset: 280 Size: 8
	char pad_288[352];  // Offset: 288 Size: 352



 // Functions 
 public:
	void OnClickedSkipButton(int32_t InIndex); // Function KartDrift.LicenseSequenceDecodingComponent.OnClickedSkipButton
	void OnClickedPlayButton(int32_t InIndex); // Function KartDrift.LicenseSequenceDecodingComponent.OnClickedPlayButton
	void OnClickedPauseButton(int32_t InIndex); // Function KartDrift.LicenseSequenceDecodingComponent.OnClickedPauseButton
}; 
 
 


//Class KartDrift.PqLicenseClear Size 168
// Inherited 56 bytes 
class UPqLicenseClear : public UPqPacket
{

 public: 
	struct FString licenseGroupId;  // Offset: 56 Size: 16
	struct FString licenseMissionId;  // Offset: 72 Size: 16
	struct FString trackId;  // Offset: 88 Size: 16
	int32_t starCount;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4
	struct FDateTime StartTime;  // Offset: 112 Size: 8
	struct FKtLicenseTMIData licenseTMIData;  // Offset: 120 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CheatComponent Size 176
// Inherited 176 bytes 
class UCheatComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
	void Server_TravelWorld(); // Function KartDrift.CheatComponent.Server_TravelWorld
	void Server_TMITickLogLatency(float InLatency); // Function KartDrift.CheatComponent.Server_TMITickLogLatency
	void Server_SetValue(struct FString VariableName, struct FString Value); // Function KartDrift.CheatComponent.Server_SetValue
	void Server_SetDisconnected(struct APawn* Pawn); // Function KartDrift.CheatComponent.Server_SetDisconnected
	void Server_SetBoosterDistance(int32_t Distance); // Function KartDrift.CheatComponent.Server_SetBoosterDistance
	void Server_SetAITeleport(float InputKey, float Speed); // Function KartDrift.CheatComponent.Server_SetAITeleport
	void Server_RaceFinish(); // Function KartDrift.CheatComponent.Server_RaceFinish
	void Server_OverrideTotalTime(int32_t Minute, int32_t Second, int32_t Millisecond); // Function KartDrift.CheatComponent.Server_OverrideTotalTime
	void Server_GainItem(struct APawn* Pawn, char Type); // Function KartDrift.CheatComponent.Server_GainItem
}; 
 
 


//Class KartDrift.LqDeleteStickerStockBookmark Size 64
// Inherited 56 bytes 
class ULqDeleteStickerStockBookmark : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetMotionSit Size 64
// Inherited 64 bytes 
class UBelongingDataAssetMotionSit : public UBelongingDataAsset
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandKillMe Size 72
// Inherited 72 bytes 
class UPqCommandKillMe : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandUpdateSeason Size 72
// Inherited 72 bytes 
class UPqCommandUpdateSeason : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandReset2ndPwd Size 72
// Inherited 72 bytes 
class UPqCommandReset2ndPwd : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLogin Size 2192
// Inherited 72 bytes 
class UPrLogin : public UPrPacket
{

 public: 
	struct FKtAccountProfile Profile;  // Offset: 72 Size: 96
	struct FString accountId;  // Offset: 168 Size: 16
	struct FString loginId;  // Offset: 184 Size: 16
	struct FString serviceId;  // Offset: 200 Size: 16
	struct FString npsn;  // Offset: 216 Size: 16
	struct FKtSeasonInfo seasonInfo;  // Offset: 232 Size: 32
	struct FKtSeasonStaticInfo seasonStaticInfo;  // Offset: 264 Size: 56
	struct FString riderName;  // Offset: 320 Size: 16
	struct TArray<struct FKtItem> inventoryData;  // Offset: 336 Size: 16
	struct TArray<struct FKtItem> inventoryDataSeason;  // Offset: 352 Size: 16
	struct TArray<struct FKtItem> inventoryDataInitial;  // Offset: 368 Size: 16
	struct TArray<struct FKtItem> inventoryDataDefaultParts;  // Offset: 384 Size: 16
	struct TArray<struct FKtItem> inventoryDataCash;  // Offset: 400 Size: 16
	struct FString emblemItemIdOn;  // Offset: 416 Size: 16
	struct FKtItemPreset itemPresetOn;  // Offset: 432 Size: 160
	struct TArray<struct FKtItemPreset> itemPresetVector;  // Offset: 592 Size: 16
	struct TArray<struct FKtLivery> liveryVector;  // Offset: 608 Size: 16
	struct TArray<struct FKtLiverySticker> liveryStickerVector;  // Offset: 624 Size: 16
	struct FKtQuestSetData questSetDataDaily;  // Offset: 640 Size: 80
	struct FKtQuestSetDataComplete questSetDataDailyComplete;  // Offset: 720 Size: 80
	struct FKtQuestSetData questSetDataWeekly;  // Offset: 800 Size: 80
	struct FKtQuestSetDataComplete questSetDataWeeklyComplete;  // Offset: 880 Size: 80
	struct FKtQuestSetData questSetDataEmblem;  // Offset: 960 Size: 80
	struct FKtQuestSetDataComplete questSetDataEmblemComplete;  // Offset: 1040 Size: 80
	struct FKtQuestSetData questSetDataLive;  // Offset: 1120 Size: 80
	struct FKtQuestSetDataComplete questSetDataLiveComplete;  // Offset: 1200 Size: 80
	struct FKtQuestSetData questSetDataPsn;  // Offset: 1280 Size: 80
	struct FKtQuestSetDataComplete questSetDataPsnComplete;  // Offset: 1360 Size: 80
	struct FKtQuestSetData questSetDataEvent;  // Offset: 1440 Size: 80
	struct FKtQuestSetDataComplete questSetDataEventComplete;  // Offset: 1520 Size: 80
	struct FString UtcNow;  // Offset: 1600 Size: 16
	struct FServerSettingToClient serverSetting;  // Offset: 1616 Size: 48
	struct FKtOptionSetting optionSetting;  // Offset: 1664 Size: 88
	struct FKtLicenseData licenseData;  // Offset: 1752 Size: 80
	struct FKtTutorialData tutorialData;  // Offset: 1832 Size: 2
	char pad_1834[6];  // Offset: 1834 Size: 6
	struct TMap<struct FString, struct FString> customProperties;  // Offset: 1840 Size: 80
	struct TArray<enum class EKtAccountFlag> Flag;  // Offset: 1920 Size: 16
	struct FString serverRegionId;  // Offset: 1936 Size: 16
	struct FString sharedValue;  // Offset: 1952 Size: 16
	char pad_1968_1 : 7;  // Offset: 1968 Size: 1
	bool crossPlayEnabled : 1;  // Offset: 1968 Size: 1
	char pad_1969[7];  // Offset: 1969 Size: 7
	struct TMap<struct FString, struct FOwnKartUpgradeInfo> ownKartsUpgradeInfo;  // Offset: 1976 Size: 80
	struct TArray<struct FString> liverySignedUrlVector;  // Offset: 2056 Size: 16
	struct TArray<struct FString> liveryStickerSignedUrlVector;  // Offset: 2072 Size: 16
	struct FKtPlayLucciInfo playLucci;  // Offset: 2088 Size: 16
	char pad_2104_1 : 7;  // Offset: 2104 Size: 1
	bool isChangeUnusableItem : 1;  // Offset: 2104 Size: 1
	struct FKtPermissionData permission;  // Offset: 2105 Size: 1
	char pad_2106_1 : 7;  // Offset: 2106 Size: 1
	bool ugcEnabled : 1;  // Offset: 2106 Size: 1
	char pad_2107_1 : 7;  // Offset: 2107 Size: 1
	bool chatEnabled : 1;  // Offset: 2107 Size: 1
	enum class EKtGrandPrixSubTier regularGrandPrixTier;  // Offset: 2108 Size: 1
	enum class EKtAffiliatePlatform firstBuyPlatform;  // Offset: 2109 Size: 1
	char pad_2110_1 : 7;  // Offset: 2110 Size: 1
	bool isAdult : 1;  // Offset: 2110 Size: 1
	char pad_2111[1];  // Offset: 2111 Size: 1
	struct FString npaCode;  // Offset: 2112 Size: 16
	struct FKtModeSelectDataList modeSelectDataList;  // Offset: 2128 Size: 16
	struct FKtMatchRequestData quickMatchData;  // Offset: 2144 Size: 40
	int32_t accPlayTimeSec;  // Offset: 2184 Size: 4
	char pad_2188[4];  // Offset: 2188 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PSOCompileDialog Size 840
// Inherited 816 bytes 
class UPSOCompileDialog : public UDialogTemplate
{

 public: 
	char pad_816[24];  // Offset: 816 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRiderNameChangeConfirm Size 104
// Inherited 72 bytes 
class UPrRiderNameChangeConfirm : public UPrPacket
{

 public: 
	struct FKtRiderNameChange riderNameChange;  // Offset: 72 Size: 16
	struct FString changeRiderName;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForceFeedbackLibrary Size 40
// Inherited 40 bytes 
class UForceFeedbackLibrary : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
	void StopForceFeedback(struct APawn* KartPawn, struct FName ForceFeedbackName); // Function KartDrift.ForceFeedbackLibrary.StopForceFeedback
	void PlayForceFeedback(struct APawn* KartPawn, struct FName ForceFeedbackName); // Function KartDrift.ForceFeedbackLibrary.PlayForceFeedback
}; 
 
 


//Class KartDrift.CreateLicenseRocketTargetWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseRocketTargetWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseRocketTargetWidgetClass;  // Offset: 72 Size: 40
	struct UUserWidget* RocketTarget;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcQuestSetUpdated Size 1024
// Inherited 48 bytes 
class UPcQuestSetUpdated : public UPcPacket
{

 public: 
	struct FKtQuestSetData questSetDataDaily;  // Offset: 48 Size: 80
	struct FKtQuestSetDataComplete questSetDataDailyComplete;  // Offset: 128 Size: 80
	struct FKtQuestSetData questSetDataWeekly;  // Offset: 208 Size: 80
	struct FKtQuestSetDataComplete questSetDataWeeklyComplete;  // Offset: 288 Size: 80
	struct FKtQuestSetData questSetDataEmblem;  // Offset: 368 Size: 80
	struct FKtQuestSetDataComplete questSetDataEmblemComplete;  // Offset: 448 Size: 80
	struct FKtQuestSetData questSetDataLive;  // Offset: 528 Size: 80
	struct FKtQuestSetDataComplete questSetDataLiveComplete;  // Offset: 608 Size: 80
	struct FKtQuestSetData questSetDataPsn;  // Offset: 688 Size: 80
	struct FKtQuestSetDataComplete questSetDataPsnComplete;  // Offset: 768 Size: 80
	struct FKtQuestSetData questSetDataEvent;  // Offset: 848 Size: 80
	struct FKtQuestSetDataComplete questSetDataEventComplete;  // Offset: 928 Size: 80
	struct TArray<struct FKtStockReward> rewardStockVector;  // Offset: 1008 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftLimit Size 568
// Inherited 544 bytes 
class ADriftLimit : public AActor
{

 public: 
	int32_t DriftStartIndex;  // Offset: 544 Size: 4
	int32_t DriftEndIndex;  // Offset: 548 Size: 4
	char pad_552[16];  // Offset: 552 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSetRiderName Size 72
// Inherited 56 bytes 
class UPqSetRiderName : public UPqPacket
{

 public: 
	struct FString riderName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqBreakPiggy Size 96
// Inherited 56 bytes 
class UPqBreakPiggy : public UPqPacket
{

 public: 
	struct FString piggyName;  // Offset: 56 Size: 16
	struct FKtPiggyOpenReward expectedReward;  // Offset: 72 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropRace Size 640
// Inherited 40 bytes 
class UKdPlayerPropRace : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct FRacePlayerEquipDesc Equip;  // Offset: 48 Size: 304
	struct FKtKartBodyParam KartBodyParam;  // Offset: 352 Size: 212
	struct FKtKartChannelParam KartChannelParam;  // Offset: 564 Size: 72
	char pad_636_1 : 7;  // Offset: 636 Size: 1
	bool bUseBeginnerCare : 1;  // Offset: 636 Size: 1
	char pad_637_1 : 7;  // Offset: 637 Size: 1
	bool bIsAiPlayer : 1;  // Offset: 637 Size: 1
	enum class EKtRaceAiType aiType;  // Offset: 638 Size: 1
	char pad_639[1];  // Offset: 639 Size: 1



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrSetRiderName Size 88
// Inherited 72 bytes 
class UPrSetRiderName : public UPrPacket
{

 public: 
	struct FString NotSupportedLetter;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Pq2ndPwd Size 80
// Inherited 56 bytes 
class UPq2ndPwd : public UPqPacket
{

 public: 
	struct FString Hash;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool set : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemListPopup Size 864
// Inherited 816 bytes 
class UItemListPopup : public UDialogTemplate
{

 public: 
	char pad_816[48];  // Offset: 816 Size: 48



 // Functions 
 public:
	void CancleButton(int32_t InIndex); // Function KartDrift.ItemListPopup.CancleButton
}; 
 
 


//Class KartDrift.PcLogout Size 72
// Inherited 48 bytes 
class UPcLogout : public UPcPacket
{

 public: 
	struct FString Reason;  // Offset: 48 Size: 16
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool Shutdown : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrInviteCustomGame Size 104
// Inherited 72 bytes 
class UPrInviteCustomGame : public UPrPacket
{

 public: 
	struct FString accountId;  // Offset: 72 Size: 16
	struct FString riderName;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftSaveGame Size 80
// Inherited 40 bytes 
class ULicenseDriftSaveGame : public USaveGame
{

 public: 
	struct FString SaveSlotName;  // Offset: 40 Size: 16
	uint32_t UserIndex;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4
	struct TArray<struct FDriftData> Data;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyAccumLayoutItemWidget Size 624
// Inherited 608 bytes 
class UScenarioKeyAccumLayoutItemWidget : public UUserWidget
{

 public: 
	struct UScenarioKeyLayoutWidget* V_KeyLayout;  // Offset: 608 Size: 8
	struct UWidgetAnimationGraph* WidgetAnimationGraph;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPartyInfoChange Size 120
// Inherited 48 bytes 
class UPcPartyInfoChange : public UPcPacket
{

 public: 
	struct FPartyInfo PartyInfo;  // Offset: 48 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopInventoryPickupKrPc Size 64
// Inherited 56 bytes 
class UPqShopInventoryPickupKrPc : public UPqPacket
{

 public: 
	int32_t Index;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PredictHelper Size 40
// Inherited 40 bytes 
class UPredictHelper : public UObject
{

 public: 



 // Functions 
 public:
	struct TArray<float> Predict_wsyoon_ver1(struct TArray<float>& Inputs); // Function KartDrift.PredictHelper.Predict_wsyoon_ver1
	struct TArray<float> Predict_wsyoon_ver0(struct TArray<float>& Inputs); // Function KartDrift.PredictHelper.Predict_wsyoon_ver0
	struct TArray<float> Predict_jieunjung_ver47(float DeltaTime, struct TArray<float>& Inputs); // Function KartDrift.PredictHelper.Predict_jieunjung_ver47
	struct TArray<float> Predict_jieunjung_ver44(float DeltaTime, struct TArray<float>& Inputs); // Function KartDrift.PredictHelper.Predict_jieunjung_ver44
	struct TArray<float> Predict_hwanghou_GLU_light(float DeltaTime, struct TArray<float>& Inputs); // Function KartDrift.PredictHelper.Predict_hwanghou_GLU_light
}; 
 
 


//Class KartDrift.PqLogout Size 72
// Inherited 56 bytes 
class UPqLogout : public UPqPacket
{

 public: 
	struct FString Reason;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIItemUseRuleData Size 160
// Inherited 48 bytes 
class UAIItemUseRuleData : public UDataAsset
{

 public: 
	struct TMap<enum class EItemType, struct FAIItemUseRule> AIItemUseRule;  // Offset: 48 Size: 80
	float Timeout;  // Offset: 128 Size: 4
	float IgnoreTimeOutRemainDistance;  // Offset: 132 Size: 4
	struct FAIItemWaterlockEscapeSetting WaterlockEscapeSetting;  // Offset: 136 Size: 8
	float Shield_Probability;  // Offset: 144 Size: 4
	float Angel_Probability;  // Offset: 148 Size: 4
	float EMP_Probability;  // Offset: 152 Size: 4
	char pad_156[4];  // Offset: 156 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseConnectRuleComponent Size 608
// Inherited 200 bytes 
class ULicenseConnectRuleComponent : public UBaseConnectRuleComponent
{

 public: 
	struct TArray<struct APlayerStart*> StartSpotContainer;  // Offset: 200 Size: 16
	struct APawn* PlayerPawn;  // Offset: 216 Size: 8
	struct FString PlayerStartName;  // Offset: 224 Size: 16
	struct FString PlayerUniqueID;  // Offset: 240 Size: 16
	int32_t SpotIndex;  // Offset: 256 Size: 4
	char pad_260[340];  // Offset: 260 Size: 340
	struct ULicenseDataAsset* LicenseDataAsset;  // Offset: 600 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqOptionSettingUpdate Size 144
// Inherited 56 bytes 
class UPqOptionSettingUpdate : public UPqPacket
{

 public: 
	struct FKtOptionSetting optionSetting;  // Offset: 56 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetPublicDynData Size 88
// Inherited 56 bytes 
class UPqGetPublicDynData : public UPqPacket
{

 public: 
	struct FString Name;  // Offset: 56 Size: 16
	struct FString Hash;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuth Size 96
// Inherited 56 bytes 
class UPqAuth : public UPqPacket
{

 public: 
	enum class EKtPlatform platform;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7
	struct FString localIp;  // Offset: 64 Size: 16
	struct FString machineId;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartUpgradeLogicComponent Size 360
// Inherited 224 bytes 
class UKartUpgradeLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[136];  // Offset: 224 Size: 136



 // Functions 
 public:
	void UpdateKartInfo(); // Function KartDrift.KartUpgradeLogicComponent.UpdateKartInfo
	void ShowKartUpgradeResult(bool bIsSuccess, enum class EKtItemGrade KartGrade); // Function KartDrift.KartUpgradeLogicComponent.ShowKartUpgradeResult
	void CompleateResetUpgradeGear(); // Function KartDrift.KartUpgradeLogicComponent.CompleateResetUpgradeGear
	void CompleateApplyUpgradeGear(); // Function KartDrift.KartUpgradeLogicComponent.CompleateApplyUpgradeGear
}; 
 
 


//Class KartDrift.RiderNameTagWidget Size 768
// Inherited 608 bytes 
class URiderNameTagWidget : public UUserWidget
{

 public: 
	struct APlayerState* AttachedPlayerState;  // Offset: 608 Size: 8
	char pad_616_1 : 7;  // Offset: 616 Size: 1
	bool bIsMyPawnIdWidget : 1;  // Offset: 616 Size: 1
	char pad_617[7];  // Offset: 617 Size: 7
	struct TArray<struct AKdPawn*> LastRankList;  // Offset: 624 Size: 16
	struct UTextBlock* V_Number;  // Offset: 640 Size: 8
	struct UTextBlock* V_Id;  // Offset: 648 Size: 8
	struct UWidgetSwitcher* V_WS_RankBG;  // Offset: 656 Size: 8
	struct UOverlay* V_OV_Rank;  // Offset: 664 Size: 8
	struct UOverlay* V_OV_UserName;  // Offset: 672 Size: 8
	struct UImage* V_RiderNameBG;  // Offset: 680 Size: 8
	struct UImage* V_RiderNameBG_CenterArrow;  // Offset: 688 Size: 8
	char pad_696[72];  // Offset: 696 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetKartParts Size 144
// Inherited 64 bytes 
class UBelongingDataAssetKartParts : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<USkeletalMesh> PartMesh;  // Offset: 64 Size: 40
	struct TSoftClassPtr<UObject> PartAnim;  // Offset: 104 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartAIBaseComponent Size 184
// Inherited 176 bytes 
class UKartAIBaseComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetPublicDynData Size 152
// Inherited 72 bytes 
class UPrGetPublicDynData : public UPrPacket
{

 public: 
	struct FString Name;  // Offset: 72 Size: 16
	struct FString Hash;  // Offset: 88 Size: 16
	char pad_104_1 : 7;  // Offset: 104 Size: 1
	bool hasData : 1;  // Offset: 104 Size: 1
	char pad_105_1 : 7;  // Offset: 105 Size: 1
	bool isBinary : 1;  // Offset: 105 Size: 1
	char pad_106[6];  // Offset: 106 Size: 6
	struct FString Data;  // Offset: 112 Size: 16
	char pad_128_1 : 7;  // Offset: 128 Size: 1
	bool isCompressed : 1;  // Offset: 128 Size: 1
	char pad_129[3];  // Offset: 129 Size: 3
	int32_t uncompressedSize;  // Offset: 132 Size: 4
	struct FString compressedData;  // Offset: 136 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_EndRetireCountdown Size 80
// Inherited 80 bytes 
class UTransition_EndRetireCountdown : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShopPlatform Size 200
// Inherited 40 bytes 
class UAccountShopPlatform : public UObject
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72
	struct FShopPurchasingInfo CachedStockInfo;  // Offset: 112 Size: 72
	struct TArray<struct UShopFuncClass*> ShopFuncClasses;  // Offset: 184 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_PlayFMOD Size 104
// Inherited 48 bytes 
class UAnimNotifyState_PlayFMOD : public UAnimNotifyState
{

 public: 
	struct FName AttachName;  // Offset: 48 Size: 8
	char FadeOut : 1;  // Offset: 56 Size: 1
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	char pad_57[8];  // Offset: 57 Size: 8
	struct UFMODEvent* Event;  // Offset: 64 Size: 8
	char CanListenAll : 1;  // Offset: 72 Size: 1
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	char pad_73[8];  // Offset: 73 Size: 8
	struct TArray<struct FAnimNoti_FMODParam> FMODParam;  // Offset: 80 Size: 16
	int32_t defaultIndex;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSetClientStage Size 88
// Inherited 56 bytes 
class UPqSetClientStage : public UPqPacket
{

 public: 
	struct FString stage;  // Offset: 56 Size: 16
	struct FString stageParam;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_InfoPageWidget Size 784
// Inherited 784 bytes 
class UM_InfoPageWidget : public UInfoPageWidget
{

 public: 



 // Functions 
 public:
	void OnUpdateSeasonUI(); // Function KartDrift.M_InfoPageWidget.OnUpdateSeasonUI
	void OnClickedBackButton_GrandPrix(int32_t InIndex); // Function KartDrift.M_InfoPageWidget.OnClickedBackButton_GrandPrix
}; 
 
 


//Class KartDrift.PqGetServerEndpoint Size 72
// Inherited 56 bytes 
class UPqGetServerEndpoint : public UPqPacket
{

 public: 
	struct FString serverName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqKartUpgrade Size 72
// Inherited 56 bytes 
class UPqKartUpgrade : public UPqPacket
{

 public: 
	struct FString kartItemId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_PresetPageWidget Size 776
// Inherited 776 bytes 
class UC_PresetPageWidget : public UPresetPageWidget
{

 public: 



 // Functions 
 public:
	void OnDetailViewButtonClicked(int32_t ButtonIndex); // Function KartDrift.C_PresetPageWidget.OnDetailViewButtonClicked
}; 
 
 


//Class KartDrift.PrGetServerEndpoint Size 88
// Inherited 72 bytes 
class UPrGetServerEndpoint : public UPrPacket
{

 public: 
	struct FString endpoint;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GaragePageWidget Size 1208
// Inherited 744 bytes 
class UGaragePageWidget : public UKdPageWidget
{

 public: 
	char pad_744[88];  // Offset: 744 Size: 88
	struct TWeakObjectPtr<UItemDefEntryObject> CurrentFocusedItem;  // Offset: 832 Size: 8
	char pad_840[320];  // Offset: 840 Size: 320
	float PawnRotationSpeed;  // Offset: 1160 Size: 4
	char pad_1164[44];  // Offset: 1164 Size: 44



 // Functions 
 public:
	void OnClickedStudioButton(int32_t InIndex); // Function KartDrift.GaragePageWidget.OnClickedStudioButton
	void OnClickedPresetButton(int32_t InIndex); // Function KartDrift.GaragePageWidget.OnClickedPresetButton
	void OnClickedItemOnlyView(int32_t InIndex); // Function KartDrift.GaragePageWidget.OnClickedItemOnlyView
	void OnClickedEmotionStorageBackButton(int32_t InIndex); // Function KartDrift.GaragePageWidget.OnClickedEmotionStorageBackButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.GaragePageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.ButtonContainerTemplate Size 760
// Inherited 608 bytes 
class UButtonContainerTemplate : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	char pad_616_1 : 7;  // Offset: 616 Size: 1
	bool bCheckBox : 1;  // Offset: 616 Size: 1
	enum class EContainerCheckType CheckType;  // Offset: 617 Size: 1
	char pad_618_1 : 7;  // Offset: 618 Size: 1
	bool bMenuTab : 1;  // Offset: 618 Size: 1
	char pad_619_1 : 7;  // Offset: 619 Size: 1
	bool bScrollRetainer : 1;  // Offset: 619 Size: 1
	float StartThreshold;  // Offset: 620 Size: 4
	float EndThreshold;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct TArray<bool> CheckedState;  // Offset: 632 Size: 16
	UButtonTemplate* DynamicChildButtonClass;  // Offset: 648 Size: 8
	struct TArray<struct UButtonTemplate*> ContainerChildren;  // Offset: 656 Size: 16
	struct UPanelWidget* V_Btn_Container;  // Offset: 672 Size: 8
	char pad_680[80];  // Offset: 680 Size: 80



 // Functions 
 public:
	void OnUncheck(int32_t InIndex); // Function KartDrift.ButtonContainerTemplate.OnUncheck
	void OnSelect(int32_t InIndex); // Function KartDrift.ButtonContainerTemplate.OnSelect
	void OnScrolled(float Offset); // Function KartDrift.ButtonContainerTemplate.OnScrolled
	void OnFocus(int32_t InIndex); // Function KartDrift.ButtonContainerTemplate.OnFocus
	void OnCheck(int32_t InIndex); // Function KartDrift.ButtonContainerTemplate.OnCheck
}; 
 
 


//Class KartDrift.AnimNotifyState_GetIntoTheKart Size 64
// Inherited 48 bytes 
class UAnimNotifyState_GetIntoTheKart : public UAnimNotifyState
{

 public: 
	enum class EInterpolationType InterpolationType;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	float Exponential;  // Offset: 52 Size: 4
	char pad_56[8];  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAcquireKDST Size 72
// Inherited 56 bytes 
class UPqAcquireKDST : public UPqPacket
{

 public: 
	struct FString Target;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetStockTagId Size 88
// Inherited 72 bytes 
class ULrGetStockTagId : public UPrPacket
{

 public: 
	struct TArray<int32_t> tagId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqConfirmLoginEvent Size 72
// Inherited 56 bytes 
class UPqConfirmLoginEvent : public UPqPacket
{

 public: 
	struct FString EventID;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGestureWidget Size 728
// Inherited 608 bytes 
class UKdGestureWidget : public UUserWidget
{

 public: 
	char pad_608[72];  // Offset: 608 Size: 72
	float LimitFlickAngle;  // Offset: 680 Size: 4
	char pad_684_1 : 7;  // Offset: 684 Size: 1
	bool bUsePinchInverse : 1;  // Offset: 684 Size: 1
	char pad_685_1 : 7;  // Offset: 685 Size: 1
	bool bGestureDebugPrint : 1;  // Offset: 685 Size: 1
	char pad_686_1 : 7;  // Offset: 686 Size: 1
	bool bTouchMove : 1;  // Offset: 686 Size: 1
	char pad_687[1];  // Offset: 687 Size: 1
	struct FVector BeforeTouchLocation;  // Offset: 688 Size: 12
	struct FVector TouchStartLocation;  // Offset: 700 Size: 12
	float BeforePinch;  // Offset: 712 Size: 4
	float BeforeRotate;  // Offset: 716 Size: 4
	char pad_720_1 : 7;  // Offset: 720 Size: 1
	bool bGesutrePause : 1;  // Offset: 720 Size: 1
	char pad_721[7];  // Offset: 721 Size: 7



 // Functions 
 public:
	void OnPageWidgetActivated(bool bActivate); // Function KartDrift.KdGestureWidget.OnPageWidgetActivated
}; 
 
 


//Class KartDrift.PcAsyncRequestReply Size 80
// Inherited 48 bytes 
class UPcAsyncRequestReply : public UPcPacket
{

 public: 
	struct FString reqUid;  // Offset: 48 Size: 16
	struct FString Reply;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrVivoxJoinToken Size 120
// Inherited 72 bytes 
class UPrVivoxJoinToken : public UPrPacket
{

 public: 
	struct FString vivoxChannelName;  // Offset: 72 Size: 16
	struct FString vivoxJoinToken;  // Offset: 88 Size: 16
	struct FString vivoxTranscriptionToken;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropLevelExp Size 56
// Inherited 40 bytes 
class UKdPlayerPropLevelExp : public UObject
{

 public: 
	struct FKdLevelExpProp Player;  // Offset: 40 Size: 8
	struct FKdLevelExpProp Kart;  // Offset: 48 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetStickerStockList Size 104
// Inherited 72 bytes 
class ULrGetStickerStockList : public UPrPacket
{

 public: 
	struct TArray<int64_t> stickerStockIdList;  // Offset: 72 Size: 16
	struct FString Cursor;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAsyncRequestReply Size 104
// Inherited 56 bytes 
class UPqAsyncRequestReply : public UPqPacket
{

 public: 
	struct FKtAsyncRequestId arid;  // Offset: 56 Size: 32
	struct FString Reply;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePatrolSpawnComponent Size 448
// Inherited 176 bytes 
class ULicensePatrolSpawnComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicensePatrolActorData* Data;  // Offset: 192 Size: 8
	float EventLastTime;  // Offset: 200 Size: 4
	char pad_204[4];  // Offset: 204 Size: 4
	struct TArray<struct AActor*> SpawnedActors;  // Offset: 208 Size: 16
	struct UCurveFloat* SpawnCurve;  // Offset: 224 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 232 Size: 8
	struct AActor* Pawn;  // Offset: 240 Size: 8
	char pad_248[32];  // Offset: 248 Size: 32
	struct UFMODAudioComponent* AudioComponent;  // Offset: 280 Size: 8
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 288 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 328 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 368 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 408 Size: 40



 // Functions 
 public:
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.LicensePatrolSpawnComponent.OnAffectedBy
	void BeginRaceCountdown(float BeginTime); // Function KartDrift.LicensePatrolSpawnComponent.BeginRaceCountdown
}; 
 
 


//Class KartDrift.CharacterCostumeAsset Size 160
// Inherited 48 bytes 
class UCharacterCostumeAsset : public UDataAsset
{

 public: 
	float CharMeshScale;  // Offset: 48 Size: 4
	struct FVector OffsetFromSeat;  // Offset: 52 Size: 12
	float HandleDirectionOffset;  // Offset: 64 Size: 4
	int32_t NotifyAnimParticleId;  // Offset: 68 Size: 4
	struct UCharacterMontageAsset* MontageAssets;  // Offset: 72 Size: 8
	struct TSoftObjectPtr<USkeletalMesh> Mesh;  // Offset: 80 Size: 40
	struct TSoftClassPtr<UObject> AnimInstance;  // Offset: 120 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPageWidget Size 744
// Inherited 608 bytes 
class UKdPageWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	UWidgetLogicComponent* LogicComponentClass;  // Offset: 616 Size: 8
	char pad_624[32];  // Offset: 624 Size: 32
	struct TMap<struct FString, struct TSoftClassPtr<UObject>> DialogClassMap;  // Offset: 656 Size: 80
	char pad_736[1];  // Offset: 736 Size: 1
	char pad_737_1 : 7;  // Offset: 737 Size: 1
	bool bIsBlankPage : 1;  // Offset: 737 Size: 1
	char pad_738_1 : 7;  // Offset: 738 Size: 1
	bool bWorldRenderingFlag : 1;  // Offset: 738 Size: 1
	char pad_739[5];  // Offset: 739 Size: 5



 // Functions 
 public:
	void OnUpdateButtonState(); // Function KartDrift.KdPageWidget.OnUpdateButtonState
}; 
 
 


//Class KartDrift.LrStickerMarketLocked Size 136
// Inherited 72 bytes 
class ULrStickerMarketLocked : public UPrPacket
{

 public: 
	struct FDateTime StartTime;  // Offset: 72 Size: 8
	struct FDateTime EndTime;  // Offset: 80 Size: 8
	struct FString indexId;  // Offset: 88 Size: 16
	struct FKtSeasonInfo seasonInfo;  // Offset: 104 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddStock Size 72
// Inherited 72 bytes 
class UPqCommandAddStock : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddItem Size 72
// Inherited 72 bytes 
class UPqCommandAddItem : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandUseItem Size 72
// Inherited 72 bytes 
class UPqCommandUseItem : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseGaugeChargingWidget Size 672
// Inherited 608 bytes 
class ULicenseGaugeChargingWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_DriftText;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_DriftText_WhiteStyle;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* WS_TextStyle;  // Offset: 624 Size: 8
	char pad_632[40];  // Offset: 632 Size: 40



 // Functions 
 public:
	void OnUpdateGaugeChargeGoal(float InPercentageMoreThan, float InPercentageLessThan); // Function KartDrift.LicenseGaugeChargingWidget.OnUpdateGaugeChargeGoal
}; 
 
 


//Class KartDrift.KdReplaySubsystem Size 256
// Inherited 48 bytes 
class UKdReplaySubsystem : public UGameInstanceSubsystem
{

 public: 
	char pad_48[208];  // Offset: 48 Size: 208



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SequenceItemComponent Size 1104
// Inherited 1104 bytes 
class USequenceItemComponent : public UItemComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MainmenuPageWidget Size 1064
// Inherited 744 bytes 
class UMainmenuPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[24];  // Offset: 744 Size: 24
	struct TSoftObjectPtr<UPageWidgetAsset> PageWidgetAsset;  // Offset: 768 Size: 40
	struct UWidgetSwitcher* MainSwitcher;  // Offset: 808 Size: 8
	struct UVoiceChatWidget* VoiceChatWidget;  // Offset: 816 Size: 8
	char pad_824[32];  // Offset: 824 Size: 32
	struct UCommonPopup* GameStartAlertPopupWidget;  // Offset: 856 Size: 8
	struct UObject* PreCachePageAsset;  // Offset: 864 Size: 8
	struct TSet<struct UObject*> PreCacheAssetContainer;  // Offset: 872 Size: 80
	char pad_952[112];  // Offset: 952 Size: 112



 // Functions 
 public:
	void OnUpdateGameStartAlertFromPartyPopup(float WaitTime); // Function KartDrift.MainmenuPageWidget.OnUpdateGameStartAlertFromPartyPopup
	void OnShowGameStartAlertFromPartyPopup(float WaitTime); // Function KartDrift.MainmenuPageWidget.OnShowGameStartAlertFromPartyPopup
	void OnRestoreFromScenario(); // Function KartDrift.MainmenuPageWidget.OnRestoreFromScenario
	void OnMainmenuActivateTab(enum class EPageCase PageCase, bool bFocusToDefault, bool bAsyncLoad); // Function KartDrift.MainmenuPageWidget.OnMainmenuActivateTab
	void OnCloseGameStartAlertFromPartyPopup(); // Function KartDrift.MainmenuPageWidget.OnCloseGameStartAlertFromPartyPopup
	void OnClickedGameStartAlertPopupReturnButton(int32_t InIndex); // Function KartDrift.MainmenuPageWidget.OnClickedGameStartAlertPopupReturnButton
	void OnClickedChatButton(int32_t InIndex); // Function KartDrift.MainmenuPageWidget.OnClickedChatButton
	void OnActivateBlankPage(enum class EPageCase PageCase); // Function KartDrift.MainmenuPageWidget.OnActivateBlankPage
	void ForceMoveLicensePage(); // Function KartDrift.MainmenuPageWidget.ForceMoveLicensePage
}; 
 
 


//Class KartDrift.ShadowQuestGameMode Size 824
// Inherited 824 bytes 
class AShadowQuestGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioCollectActors Size 72
// Inherited 72 bytes 
class UScenarioCollectActors : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetItem Size 72
// Inherited 72 bytes 
class UPqCommandSetItem : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetBalloonCable Size 144
// Inherited 64 bytes 
class UBelongingDataAssetBalloonCable : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<USkeletalMesh> Mesh;  // Offset: 64 Size: 40
	struct TSoftClassPtr<UObject> AnimClass;  // Offset: 104 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetLevel Size 72
// Inherited 72 bytes 
class UPqCommandSetLevel : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemRocket Size 1464
// Inherited 856 bytes 
class AItemRocket : public AItem
{

 public: 
	char pad_856[16];  // Offset: 856 Size: 16
	struct USceneComponent* RootSceneComponent;  // Offset: 872 Size: 8
	struct USkeletalMeshComponent* BazookaMeshComponent;  // Offset: 880 Size: 8
	struct USkeletalMeshComponent* RocketMeshComponent;  // Offset: 888 Size: 8
	struct UParticleSystemComponent* TailParticleComponent;  // Offset: 896 Size: 8
	struct TSoftObjectPtr<UCurveFloat> CurveDegree;  // Offset: 904 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveY;  // Offset: 944 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ShootSound;  // Offset: 984 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FlySound;  // Offset: 1024 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> RocketMesh;  // Offset: 1064 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> MissileBeginAttackAsset;  // Offset: 1104 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> MissileShootingAsset;  // Offset: 1144 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BazookaBody;  // Offset: 1184 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> RocketHead;  // Offset: 1224 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Booster;  // Offset: 1264 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1304 Size: 40
	struct TSoftClassPtr<UObject> RedAlertWidgetObj;  // Offset: 1344 Size: 40
	char pad_1384[4];  // Offset: 1384 Size: 4
	float RocketTotalFlyTime;  // Offset: 1388 Size: 4
	float ActionDelay;  // Offset: 1392 Size: 4
	float BazookaLifeTime;  // Offset: 1396 Size: 4
	struct UItemComponent* AuthTarget;  // Offset: 1400 Size: 8
	struct UItemComponent* LocalUser;  // Offset: 1408 Size: 8
	char pad_1416[48];  // Offset: 1416 Size: 48



 // Functions 
 public:
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemRocket.MulticastNoTarget
	void MulticastFireTo(struct UItemComponent* User, struct UItemComponent* Target); // Function KartDrift.ItemRocket.MulticastFireTo
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemRocket.MulticastAffectTo
}; 
 
 


//Class KartDrift.PrAuth Size 152
// Inherited 72 bytes 
class UPrAuth : public UPrPacket
{

 public: 
	struct FString Addr;  // Offset: 72 Size: 16
	struct FString Token;  // Offset: 88 Size: 16
	char pad_104_1 : 7;  // Offset: 104 Size: 1
	bool bNew : 1;  // Offset: 104 Size: 1
	char pad_105[7];  // Offset: 105 Size: 7
	struct FString protocolHash;  // Offset: 112 Size: 16
	struct FString userIp;  // Offset: 128 Size: 16
	char pad_144_1 : 7;  // Offset: 144 Size: 1
	bool bChangeName : 1;  // Offset: 144 Size: 1
	char pad_145[7];  // Offset: 145 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_MailPageWidget Size 800
// Inherited 768 bytes 
class UC_MailPageWidget : public UMailPageWidget
{

 public: 
	struct TArray<struct FMailIdWidgetPair> MailIdWidgetPairs;  // Offset: 768 Size: 16
	char pad_784[16];  // Offset: 784 Size: 16



 // Functions 
 public:
	void OnClickedReceiveKeyIcon(int32_t InIndex); // Function KartDrift.C_MailPageWidget.OnClickedReceiveKeyIcon
	void OnClickedPrevPage(int32_t InIndex); // Function KartDrift.C_MailPageWidget.OnClickedPrevPage
	void OnClickedNextPage(int32_t InIndex); // Function KartDrift.C_MailPageWidget.OnClickedNextPage
}; 
 
 


//Class KartDrift.LicensePauseButtonWidget Size 616
// Inherited 608 bytes 
class ULicensePauseButtonWidget : public UUserWidget
{

 public: 
	struct UButtonTemplate* PauseButton;  // Offset: 608 Size: 8



 // Functions 
 public:
	void OnClickedPauseButton(int32_t Index); // Function KartDrift.LicensePauseButtonWidget.OnClickedPauseButton
}; 
 
 


//Class KartDrift.SendPacket_Start_License Size 72
// Inherited 72 bytes 
class USendPacket_Start_License : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddExp Size 72
// Inherited 72 bytes 
class UPqCommandAddExp : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BoosterChargeBuff Size 56
// Inherited 40 bytes 
class UBoosterChargeBuff : public UKartMovementBuff
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartBodySound Size 136
// Inherited 48 bytes 
class UKartBodySound : public UDataAsset
{

 public: 
	struct UFMODEvent* KartEngineSound;  // Offset: 48 Size: 8
	struct UFMODEvent* KartDriftSound;  // Offset: 56 Size: 8
	struct UFMODEvent* SlipStreamSound;  // Offset: 64 Size: 8
	struct UFMODEvent* DraftingSound;  // Offset: 72 Size: 8
	struct UFMODEvent* ShockSound;  // Offset: 80 Size: 8
	struct UFMODEvent* CrashSound;  // Offset: 88 Size: 8
	struct UFMODEvent* TransformSound;  // Offset: 96 Size: 8
	struct UFMODEvent* UnTransformSound;  // Offset: 104 Size: 8
	struct UFMODEvent* BoostZonePlaySound;  // Offset: 112 Size: 8
	struct UFMODEvent* JumpZonePlaySound;  // Offset: 120 Size: 8
	struct UFMODEvent* DeliveryZoneSound;  // Offset: 128 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddTrophy Size 72
// Inherited 72 bytes 
class UPqCommandAddTrophy : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AuthorizedServer Size 136
// Inherited 40 bytes 
class UAuthorizedServer : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16
	struct UKdAccount* Account;  // Offset: 56 Size: 8
	struct UHttpServerRequester* ServerRequester;  // Offset: 64 Size: 8
	char pad_72[48];  // Offset: 72 Size: 48
	struct TArray<struct FAuthServerPendingRequest> PendingRequests;  // Offset: 120 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceProgressComponent Size 392
// Inherited 176 bytes 
class URaceProgressComponent : public UActorComponent
{

 public: 
	char pad_176[104];  // Offset: 176 Size: 104
	struct ACheckPoint* NearbyGoalCheckPoint;  // Offset: 280 Size: 8
	struct ACheckPoint* RecentCheckPoint;  // Offset: 288 Size: 8
	char pad_296[60];  // Offset: 296 Size: 60
	int32_t FinishRank;  // Offset: 356 Size: 4
	char pad_360[4];  // Offset: 360 Size: 4
	float FinishTime;  // Offset: 364 Size: 4
	char pad_368[12];  // Offset: 368 Size: 12
	float RemainDistance;  // Offset: 380 Size: 4
	struct URaceRankComponent* RaceRankComponent;  // Offset: 384 Size: 8



 // Functions 
 public:
	void TryInitCheckPoint(); // Function KartDrift.RaceProgressComponent.TryInitCheckPoint
	void SetMaxLapCount(int32_t InMaxLapCount); // Function KartDrift.RaceProgressComponent.SetMaxLapCount
	void Server_CheckPoint(struct ACheckPoint* LastCP, struct ACheckPoint* CP); // Function KartDrift.RaceProgressComponent.Server_CheckPoint
	void ClientUpdateData(float InTotalLapTime, float InBestLapTime); // Function KartDrift.RaceProgressComponent.ClientUpdateData
	void ClientLapComplete(int32_t CompletedLapCount, float CurrentLapTime); // Function KartDrift.RaceProgressComponent.ClientLapComplete
}; 
 
 


//Class KartDrift.CouponRewardItemDefEntryObject Size 80
// Inherited 40 bytes 
class UCouponRewardItemDefEntryObject : public UObject
{

 public: 
	struct FKtItem RewardItem;  // Offset: 40 Size: 32
	char pad_72[8];  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetMyStickerBookmarkList Size 96
// Inherited 72 bytes 
class ULrGetMyStickerBookmarkList : public UPrPacket
{

 public: 
	struct TArray<int64_t> stickerStockIds;  // Offset: 72 Size: 16
	int32_t maxStickerCount;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedTeamGameMode Size 824
// Inherited 824 bytes 
class ASpeedTeamGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTravelData Size 272
// Inherited 48 bytes 
class ULicenseTravelData : public UGameInstanceSubsystem
{

 public: 
	char pad_48[224];  // Offset: 48 Size: 224



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetPlatform Size 72
// Inherited 72 bytes 
class UPqCommandSetPlatform : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandSetCountry Size 72
// Inherited 72 bytes 
class UPqCommandSetCountry : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomWidgetComponent Size 1488
// Inherited 1200 bytes 
class UCustomWidgetComponent : public UMeshComponent
{

 public: 
	enum class EWidgetSpace Space;  // Offset: 1192 Size: 1
	enum class EWidgetTimingPolicy TimingPolicy;  // Offset: 1193 Size: 1
	UUserWidget* WidgetClass;  // Offset: 1200 Size: 8
	struct FIntPoint DrawSize;  // Offset: 1208 Size: 8
	char pad_1218_1 : 7;  // Offset: 1218 Size: 1
	bool bManuallyRedraw : 1;  // Offset: 1216 Size: 1
	char pad_1219_1 : 7;  // Offset: 1219 Size: 1
	bool bRedrawRequested : 1;  // Offset: 1217 Size: 1
	float RedrawTime;  // Offset: 1220 Size: 4
	char pad_1224[8];  // Offset: 1224 Size: 8
	struct FIntPoint CurrentDrawSize;  // Offset: 1232 Size: 8
	char pad_1240_1 : 7;  // Offset: 1240 Size: 1
	bool bDrawAtDesiredSize : 1;  // Offset: 1240 Size: 1
	char pad_1241[3];  // Offset: 1241 Size: 3
	struct FVector2D Pivot;  // Offset: 1244 Size: 8
	char pad_1252_1 : 7;  // Offset: 1252 Size: 1
	bool bReceiveHardwareInput : 1;  // Offset: 1252 Size: 1
	char pad_1253_1 : 7;  // Offset: 1253 Size: 1
	bool bWindowFocusable : 1;  // Offset: 1253 Size: 1
	enum class EWindowVisibility WindowVisibility;  // Offset: 1254 Size: 1
	char pad_1255_1 : 7;  // Offset: 1255 Size: 1
	bool bApplyGammaCorrection : 1;  // Offset: 1255 Size: 1
	struct ULocalPlayer* OwnerPlayer;  // Offset: 1256 Size: 8
	struct FLinearColor BackgroundColor;  // Offset: 1264 Size: 16
	struct FLinearColor TintColorAndOpacity;  // Offset: 1280 Size: 16
	float OpacityFromTexture;  // Offset: 1296 Size: 4
	enum class EWidgetBlendMode BlendMode;  // Offset: 1300 Size: 1
	char pad_1301_1 : 7;  // Offset: 1301 Size: 1
	bool bIsTwoSided : 1;  // Offset: 1301 Size: 1
	char pad_1302_1 : 7;  // Offset: 1302 Size: 1
	bool TickWhenOffscreen : 1;  // Offset: 1302 Size: 1
	char pad_1303[1];  // Offset: 1303 Size: 1
	struct UBodySetup* BodySetup;  // Offset: 1304 Size: 8
	struct UMaterialInterface* TranslucentMaterial;  // Offset: 1312 Size: 8
	struct UMaterialInterface* TranslucentMaterial_OneSided;  // Offset: 1320 Size: 8
	struct UMaterialInterface* OpaqueMaterial;  // Offset: 1328 Size: 8
	struct UMaterialInterface* OpaqueMaterial_OneSided;  // Offset: 1336 Size: 8
	struct UMaterialInterface* MaskedMaterial;  // Offset: 1344 Size: 8
	struct UMaterialInterface* MaskedMaterial_OneSided;  // Offset: 1352 Size: 8
	struct UTextureRenderTarget2D* RenderTarget;  // Offset: 1360 Size: 8
	struct UMaterialInstanceDynamic* MaterialInstance;  // Offset: 1368 Size: 8
	char pad_1376_1 : 7;  // Offset: 1376 Size: 1
	bool bAddedToScreen : 1;  // Offset: 1376 Size: 1
	char pad_1377_1 : 7;  // Offset: 1377 Size: 1
	bool bEditTimeUsable : 1;  // Offset: 1377 Size: 1
	char pad_1378[2];  // Offset: 1378 Size: 2
	struct FName SharedLayerName;  // Offset: 1380 Size: 8
	int32_t LayerZOrder;  // Offset: 1388 Size: 4
	enum class EWidgetGeometryMode GeometryMode;  // Offset: 1392 Size: 1
	char pad_1393[3];  // Offset: 1393 Size: 3
	float CylinderArcAngle;  // Offset: 1396 Size: 4
	enum class ETickMode TickMode;  // Offset: 1400 Size: 1
	char pad_1401[39];  // Offset: 1401 Size: 39
	struct UUserWidget* Widget;  // Offset: 1440 Size: 8
	char pad_1448[40];  // Offset: 1448 Size: 40



 // Functions 
 public:
	void SetWindowVisibility(enum class EWindowVisibility InVisibility); // Function KartDrift.CustomWidgetComponent.SetWindowVisibility
	void SetWindowFocusable(bool bInWindowFocusable); // Function KartDrift.CustomWidgetComponent.SetWindowFocusable
	void SetWidgetSpace(enum class EWidgetSpace NewSpace); // Function KartDrift.CustomWidgetComponent.SetWidgetSpace
	void SetWidget(struct UUserWidget* Widget); // Function KartDrift.CustomWidgetComponent.SetWidget
	void SetTwoSided(bool bWantTwoSided); // Function KartDrift.CustomWidgetComponent.SetTwoSided
	void SetTintColorAndOpacity(struct FLinearColor NewTintColorAndOpacity); // Function KartDrift.CustomWidgetComponent.SetTintColorAndOpacity
	void SetTickWhenOffscreen(bool bWantTickWhenOffscreen); // Function KartDrift.CustomWidgetComponent.SetTickWhenOffscreen
	void SetTickMode(enum class ETickMode InTickMode); // Function KartDrift.CustomWidgetComponent.SetTickMode
	void SetRedrawTime(float InRedrawTime); // Function KartDrift.CustomWidgetComponent.SetRedrawTime
	void SetPivot(struct FVector2D& InPivot); // Function KartDrift.CustomWidgetComponent.SetPivot
	void SetOwnerPlayer(struct ULocalPlayer* LocalPlayer); // Function KartDrift.CustomWidgetComponent.SetOwnerPlayer
	void SetManuallyRedraw(bool bUseManualRedraw); // Function KartDrift.CustomWidgetComponent.SetManuallyRedraw
	void SetGeometryMode(enum class EWidgetGeometryMode InGeometryMode); // Function KartDrift.CustomWidgetComponent.SetGeometryMode
	void SetDrawSize(struct FVector2D Size); // Function KartDrift.CustomWidgetComponent.SetDrawSize
	void SetDrawAtDesiredSize(bool bInDrawAtDesiredSize); // Function KartDrift.CustomWidgetComponent.SetDrawAtDesiredSize
	void SetCylinderArcAngle(float InCylinderArcAngle); // Function KartDrift.CustomWidgetComponent.SetCylinderArcAngle
	void SetBackgroundColor(struct FLinearColor NewBackgroundColor); // Function KartDrift.CustomWidgetComponent.SetBackgroundColor
	void RequestRenderUpdate(); // Function KartDrift.CustomWidgetComponent.RequestRenderUpdate
	void RequestRedraw(); // Function KartDrift.CustomWidgetComponent.RequestRedraw
	bool IsWidgetVisible(); // Function KartDrift.CustomWidgetComponent.IsWidgetVisible
	enum class EWindowVisibility GetWindowVisiblility(); // Function KartDrift.CustomWidgetComponent.GetWindowVisiblility
	bool GetWindowFocusable(); // Function KartDrift.CustomWidgetComponent.GetWindowFocusable
	enum class EWidgetSpace GetWidgetSpace(); // Function KartDrift.CustomWidgetComponent.GetWidgetSpace
	struct UUserWidget* GetWidget(); // Function KartDrift.CustomWidgetComponent.GetWidget
	struct UUserWidget* GetUserWidgetObject(); // Function KartDrift.CustomWidgetComponent.GetUserWidgetObject
	bool GetTwoSided(); // Function KartDrift.CustomWidgetComponent.GetTwoSided
	bool GetTickWhenOffscreen(); // Function KartDrift.CustomWidgetComponent.GetTickWhenOffscreen
	struct UTextureRenderTarget2D* GetRenderTarget(); // Function KartDrift.CustomWidgetComponent.GetRenderTarget
	float GetRedrawTime(); // Function KartDrift.CustomWidgetComponent.GetRedrawTime
	struct FVector2D GetPivot(); // Function KartDrift.CustomWidgetComponent.GetPivot
	struct ULocalPlayer* GetOwnerPlayer(); // Function KartDrift.CustomWidgetComponent.GetOwnerPlayer
	struct UMaterialInstanceDynamic* GetMaterialInstance(); // Function KartDrift.CustomWidgetComponent.GetMaterialInstance
	bool GetManuallyRedraw(); // Function KartDrift.CustomWidgetComponent.GetManuallyRedraw
	enum class EWidgetGeometryMode GetGeometryMode(); // Function KartDrift.CustomWidgetComponent.GetGeometryMode
	struct FVector2D GetDrawSize(); // Function KartDrift.CustomWidgetComponent.GetDrawSize
	bool GetDrawAtDesiredSize(); // Function KartDrift.CustomWidgetComponent.GetDrawAtDesiredSize
	float GetCylinderArcAngle(); // Function KartDrift.CustomWidgetComponent.GetCylinderArcAngle
	struct FVector2D GetCurrentDrawSize(); // Function KartDrift.CustomWidgetComponent.GetCurrentDrawSize
}; 
 
 


//Class KartDrift.MajorPersonalResultPlayerWidget Size 1160
// Inherited 608 bytes 
class UMajorPersonalResultPlayerWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UImage* Image_RankBackground;  // Offset: 616 Size: 8
	struct UImage* Image_CenterBackground;  // Offset: 624 Size: 8
	struct UImage* Image_TailBackground;  // Offset: 632 Size: 8
	struct UImage* Image_RetireOverlay;  // Offset: 640 Size: 8
	struct UTextBlock* Text_Rank;  // Offset: 648 Size: 8
	struct UPlatformIconWidget* PlatformIconWidget;  // Offset: 656 Size: 8
	struct UTextBlock* Text_PlayerID;  // Offset: 664 Size: 8
	struct UTextBlock* Text_LapTime;  // Offset: 672 Size: 8
	struct UImage* Image_Clock;  // Offset: 680 Size: 8
	struct UImage* V_BeginnerCareIcon;  // Offset: 688 Size: 8
	struct UWidgetSwitcher* WS_RaceResult;  // Offset: 696 Size: 8
	struct UWidgetAnimation* SlideInFromUp;  // Offset: 704 Size: 8
	struct UWidgetAnimation* SlideInFromDown;  // Offset: 712 Size: 8
	struct TMap<enum class ERaceTeamType, struct FSlateBrush> CenterBackGroundBrushContainer;  // Offset: 720 Size: 80
	struct TMap<enum class ERaceTeamType, struct FSlateBrush> RankBackGroundBrushContainer;  // Offset: 800 Size: 80
	struct TMap<enum class ERaceTeamType, struct FSlateBrush> TailBackGroundBrushContainer;  // Offset: 880 Size: 80
	struct FSlateBrush SelfRankBackGroundBrush;  // Offset: 960 Size: 136
	char pad_1096[64];  // Offset: 1096 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorConnectRuleComponent Size 352
// Inherited 200 bytes 
class UMajorConnectRuleComponent : public UBaseConnectRuleComponent
{

 public: 
	struct TArray<struct APlayerStart*> StartSpotContainer;  // Offset: 200 Size: 16
	struct TMap<struct FString, struct APawn*> PawnContainer;  // Offset: 216 Size: 80
	char pad_296[56];  // Offset: 296 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_EmoticonPageWidget Size 792
// Inherited 768 bytes 
class UC_EmoticonPageWidget : public UEmoticonPageWidget
{

 public: 
	char pad_768[24];  // Offset: 768 Size: 24



 // Functions 
 public:
	void OnEmoticonHovered(int32_t ButtonIndex); // Function KartDrift.C_EmoticonPageWidget.OnEmoticonHovered
	void OnEmoticonFocused(int32_t ButtonIndex); // Function KartDrift.C_EmoticonPageWidget.OnEmoticonFocused
	void OnEmoticonClicked(int32_t ButtonIndex); // Function KartDrift.C_EmoticonPageWidget.OnEmoticonClicked
}; 
 
 


//Class KartDrift.PqCommandAddKartExp Size 72
// Inherited 72 bytes 
class UPqCommandAddKartExp : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AchievementPageWidget Size 792
// Inherited 744 bytes 
class UAchievementPageWidget : public UKdPageWidget
{

 public: 
	struct TWeakObjectPtr<UAchievementSummaryDialog> AchievementSummaryDialog;  // Offset: 744 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> AchievementCardDetailDialog;  // Offset: 752 Size: 8
	char pad_760[32];  // Offset: 760 Size: 32



 // Functions 
 public:
	void OnClickedShowSummaryButton(int32_t InIndex); // Function KartDrift.AchievementPageWidget.OnClickedShowSummaryButton
	void OnClickedSelectButton(int32_t InIndex); // Function KartDrift.AchievementPageWidget.OnClickedSelectButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.AchievementPageWidget.OnClickedBackButton
	void OnClickedAchievementCategoryButton(int32_t InIndex); // Function KartDrift.AchievementPageWidget.OnClickedAchievementCategoryButton
	void OnClickedAchievementCardDetailDialogBackButton(int32_t InIndex); // Function KartDrift.AchievementPageWidget.OnClickedAchievementCardDetailDialogBackButton
	void AchievementSummaryDialogClosed(); // Function KartDrift.AchievementPageWidget.AchievementSummaryDialogClosed
}; 
 
 


//Class KartDrift.PrUnEquipKartSkill Size 104
// Inherited 72 bytes 
class UPrUnEquipKartSkill : public UPrPacket
{

 public: 
	struct FString unEquippedSkillNodeId;  // Offset: 72 Size: 16
	int32_t Exp;  // Offset: 88 Size: 4
	int32_t remainPoint;  // Offset: 92 Size: 4
	char pad_96_1 : 7;  // Offset: 96 Size: 1
	bool bInit : 1;  // Offset: 96 Size: 1
	char pad_97[7];  // Offset: 97 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandPiggy Size 72
// Inherited 72 bytes 
class UPqCommandPiggy : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthNgm Size 152
// Inherited 96 bytes 
class UPqAuthNgm : public UPqAuth
{

 public: 
	struct FString environment;  // Offset: 96 Size: 16
	struct FString nexonPassport;  // Offset: 112 Size: 16
	struct FString nxHwid;  // Offset: 128 Size: 16
	char pad_144_1 : 7;  // Offset: 144 Size: 1
	bool bUseAccountLink : 1;  // Offset: 144 Size: 1
	char pad_145[7];  // Offset: 145 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseReportWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseReportWidget : public URuleObject
{

 public: 
	struct UDialogTemplate* LicenseMissionResultWidget;  // Offset: 72 Size: 8
	struct TSoftClassPtr<UObject> LicenseMissionResultWidgetClass;  // Offset: 80 Size: 40



 // Functions 
 public:
	void OnClickedNextButton(int32_t InIndex); // Function KartDrift.CreateLicenseReportWidget.OnClickedNextButton
	void OnClickedExitButton(int32_t InIndex); // Function KartDrift.CreateLicenseReportWidget.OnClickedExitButton
	void OnClickedChallengeButton(int32_t InIndex); // Function KartDrift.CreateLicenseReportWidget.OnClickedChallengeButton
}; 
 
 


//Class KartDrift.AICondition_DiffRank Size 80
// Inherited 64 bytes 
class UAICondition_DiffRank : public UAIItemUseCondition
{

 public: 
	struct TArray<struct FAIItemUse_DiffRankProbability> Probability;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandPCRoom Size 72
// Inherited 72 bytes 
class UPqCommandPCRoom : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByGameplayControlType Size 688
// Inherited 624 bytes 
class AScenarioTriggerByGameplayControlType : public AScenarioBase
{

 public: 
	struct FScenarioTriggerTarget AutoTriggerContainer;  // Offset: 624 Size: 32
	struct FScenarioTriggerTarget MenualTriggerContainer;  // Offset: 656 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandResetPlayLucci Size 72
// Inherited 72 bytes 
class UPqCommandResetPlayLucci : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqVivoxJoinToken Size 72
// Inherited 56 bytes 
class UPqVivoxJoinToken : public UPqPacket
{

 public: 
	struct FString vivoxChannelName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetAchievementInfo Size 104
// Inherited 72 bytes 
class UPrGetAchievementInfo : public UPrPacket
{

 public: 
	struct TArray<struct FKtAchievementInfo> proceeding;  // Offset: 72 Size: 16
	struct TArray<struct FKtAchievementInfo> proceeded;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddLucci Size 72
// Inherited 72 bytes 
class UPqCommandAddLucci : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddKoin Size 72
// Inherited 72 bytes 
class UPqCommandAddKoin : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUpdateMailReadMarker Size 72
// Inherited 56 bytes 
class UPqUpdateMailReadMarker : public UPqPacket
{

 public: 
	struct TArray<struct FString> mailIds;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackPageWidget Size 816
// Inherited 744 bytes 
class UTimeAttackPageWidget : public UKdPageWidget
{

 public: 
	struct TWeakObjectPtr<UTimeAttackTrackChangeDialog> TrackChangeDialog;  // Offset: 744 Size: 8
	struct TWeakObjectPtr<UTimeAttackSelectRankerDialog> SelectRankerDialog;  // Offset: 752 Size: 8
	char pad_760[56];  // Offset: 760 Size: 56



 // Functions 
 public:
	void TrackChangeDialogOnTrackChanged(struct FString InTrackAlias); // Function KartDrift.TimeAttackPageWidget.TrackChangeDialogOnTrackChanged
	void SelectRankerDialogRankerSelected(); // Function KartDrift.TimeAttackPageWidget.SelectRankerDialogRankerSelected
	void SelectRankerDialogClosed(); // Function KartDrift.TimeAttackPageWidget.SelectRankerDialogClosed
	void OnUpdateRankingInfo(); // Function KartDrift.TimeAttackPageWidget.OnUpdateRankingInfo
	void OnClickedWatchGameReplayButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedWatchGameReplayButton
	void OnClickedTrackChangeButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedTrackChangeButton
	void OnClickedStartTimeAttackButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedStartTimeAttackButton
	void OnClickedStartRankerChallengeButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedStartRankerChallengeButton
	void OnClickedSelectRankerButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedSelectRankerButton
	void OnClickedReportButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedReportButton
	void OnClickedPrevRankingBoardTabButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedPrevRankingBoardTabButton
	void OnClickedPresetButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedPresetButton
	void OnClickedNextRankingBoardTabButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedNextRankingBoardTabButton
	void OnClickedBackButton(int32_t nIndex); // Function KartDrift.TimeAttackPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.AnimNotifyState_TimedMulParticle Size 128
// Inherited 48 bytes 
class UAnimNotifyState_TimedMulParticle : public UAnimNotifyState
{

 public: 
	int32_t ParticleLayer;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4
	struct TArray<struct UParticleSystem*> Additional_PSTemplate;  // Offset: 56 Size: 16
	int32_t DefaultPlayParticle;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct UParticleSystem* PSTemplate;  // Offset: 80 Size: 8
	int32_t MirrorDetailLevel;  // Offset: 88 Size: 4
	struct FName SocketName;  // Offset: 92 Size: 8
	struct FVector LocationOffset;  // Offset: 100 Size: 12
	struct FRotator RotationOffset;  // Offset: 112 Size: 12
	char pad_124_1 : 7;  // Offset: 124 Size: 1
	bool bDestroyAtEnd : 1;  // Offset: 124 Size: 1
	char pad_125_1 : 7;  // Offset: 125 Size: 1
	bool bPlayAtEnd : 1;  // Offset: 125 Size: 1
	char pad_126[2];  // Offset: 126 Size: 2



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FollowCPMovementComponent Size 288
// Inherited 176 bytes 
class UFollowCPMovementComponent : public UActorComponent
{

 public: 
	struct FVector DestLocation;  // Offset: 176 Size: 12
	struct FVector StartLocation;  // Offset: 188 Size: 12
	float Distance;  // Offset: 200 Size: 4
	float Speed;  // Offset: 204 Size: 4
	float Index;  // Offset: 208 Size: 4
	float Offset;  // Offset: 212 Size: 4
	float LerpAlpha;  // Offset: 216 Size: 4
	char pad_220_1 : 7;  // Offset: 220 Size: 1
	bool IsSetting : 1;  // Offset: 220 Size: 1
	char pad_221_1 : 7;  // Offset: 221 Size: 1
	bool bSmoothMovement : 1;  // Offset: 221 Size: 1
	char pad_222[2];  // Offset: 222 Size: 2
	struct ACheckPoint* NextCP;  // Offset: 224 Size: 8
	struct USplineComponent* SplineGuide;  // Offset: 232 Size: 8
	struct FVector TargetDir;  // Offset: 240 Size: 12
	float MinDistance;  // Offset: 252 Size: 4
	float MaxDistance;  // Offset: 256 Size: 4
	float SpeedModifier;  // Offset: 260 Size: 4
	float AvoidModifier;  // Offset: 264 Size: 4
	char pad_268[4];  // Offset: 268 Size: 4
	struct AActor* UserActor;  // Offset: 272 Size: 8
	int32_t ID;  // Offset: 280 Size: 4
	float SpeedModifierByRank;  // Offset: 284 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPiggy Size 56
// Inherited 56 bytes 
class UPqPiggy : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioDescriptMessageWidget Size 792
// Inherited 688 bytes 
class UScenarioDescriptMessageWidget : public UScenarioMessageWidget
{

 public: 
	struct UKdTextBlock* V_TextBlock_Name;  // Offset: 688 Size: 8
	char pad_696[96];  // Offset: 696 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddFreeKoin Size 72
// Inherited 72 bytes 
class UPqCommandAddFreeKoin : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandChangeName Size 72
// Inherited 72 bytes 
class UPqCommandChangeName : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdHUD Size 784
// Inherited 784 bytes 
class AKdHUD : public AHUD
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqDevUploadStringTable Size 168
// Inherited 56 bytes 
class UPqDevUploadStringTable : public UPqPacket
{

 public: 
	int32_t Index;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4
	struct FString Hash;  // Offset: 64 Size: 16
	char pad_80_1 : 7;  // Offset: 80 Size: 1
	bool query : 1;  // Offset: 80 Size: 1
	char pad_81[7];  // Offset: 81 Size: 7
	struct TMap<struct FString, struct FString> Table;  // Offset: 88 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqDevGetStringTable Size 72
// Inherited 56 bytes 
class UPqDevGetStringTable : public UPqPacket
{

 public: 
	struct TArray<struct FString> Keys;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_RacingPassPageWidget Size 952
// Inherited 928 bytes 
class UM_RacingPassPageWidget : public URacingPassPageWidget
{

 public: 
	struct UM_RacingPassRewardListItem* ListViewSelection;  // Offset: 928 Size: 8
	struct UM_RacingPassRewardListItem* MaxTierListItem;  // Offset: 936 Size: 8
	char pad_944[8];  // Offset: 944 Size: 8



 // Functions 
 public:
	void OnSubEntryClicked(int32_t rewardIndex); // Function KartDrift.M_RacingPassPageWidget.OnSubEntryClicked
	void OnClicked_RewardListButton(int32_t rewardIndex); // Function KartDrift.M_RacingPassPageWidget.OnClicked_RewardListButton
	void OnClicked_PurchaseRacingPassComplete(int32_t rewardIndex); // Function KartDrift.M_RacingPassPageWidget.OnClicked_PurchaseRacingPassComplete
	void OnClicked_PurchaseLevel(int32_t rewardIndex); // Function KartDrift.M_RacingPassPageWidget.OnClicked_PurchaseLevel
	void ItemListPopup(int32_t InIndex, struct TArray<struct FString> StockIDList); // Function KartDrift.M_RacingPassPageWidget.ItemListPopup
}; 
 
 


//Class KartDrift.PrDevGetStringTable Size 152
// Inherited 72 bytes 
class UPrDevGetStringTable : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FString> Table;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DeliveryZone Size 592
// Inherited 576 bytes 
class ADeliveryZone : public AKdTriggerBox
{

 public: 
	struct FVector Velocity;  // Offset: 576 Size: 12
	float Multiplier;  // Offset: 588 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyRebindingLibrary Size 40
// Inherited 40 bytes 
class UKeyRebindingLibrary : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
	bool RemoveAxisMapping(struct FName AxisName, bool bGamepadOnly, bool bSaveSetting, bool bSaveConfig); // Function KartDrift.KeyRebindingLibrary.RemoveAxisMapping
	bool RemoveAxisKeyMapping(struct FInputAxisKeyMapping& RemoveKey, bool bSaveSetting); // Function KartDrift.KeyRebindingLibrary.RemoveAxisKeyMapping
	bool RemoveActionMapping(struct FName ActionName, bool bGamepadOnly, bool bSaveSetting, bool bSaveConfig); // Function KartDrift.KeyRebindingLibrary.RemoveActionMapping
	bool RemoveActionKeyMapping(struct FInputActionKeyMapping& RemoveKey, bool bSaveSetting); // Function KartDrift.KeyRebindingLibrary.RemoveActionKeyMapping
	struct TArray<struct FKey> GetAxisKeys(struct FName AxisName, bool bPositive); // Function KartDrift.KeyRebindingLibrary.GetAxisKeys
	struct TArray<struct FKey> GetActionKeys(struct FName ActionName); // Function KartDrift.KeyRebindingLibrary.GetActionKeys
	bool ApplyGamepadPreset(struct TArray<struct FInputActionKeyMapping>& InputAction, struct TArray<struct FInputAxisKeyMapping>& InputAxis, bool bSaveSetting, bool bSaveConfig); // Function KartDrift.KeyRebindingLibrary.ApplyGamepadPreset
	bool AddAxisMapping(struct FInputAxisKeyMapping& NewKeyMapping, bool bSaveSetting, bool bSaveConfig); // Function KartDrift.KeyRebindingLibrary.AddAxisMapping
	bool AddActionMapping(struct FInputActionKeyMapping& NewKeyMapping, bool bSaveSetting, bool bSaveConfig); // Function KartDrift.KeyRebindingLibrary.AddActionMapping
}; 
 
 


//Class KartDrift.PcInventoryUpdated Size 112
// Inherited 48 bytes 
class UPcInventoryUpdated : public UPcPacket
{

 public: 
	struct TArray<struct FKtItemDiff> inventoryDataDiff;  // Offset: 48 Size: 16
	struct TArray<struct FKtItemDiff> inventoryDataDiffSeason;  // Offset: 64 Size: 16
	struct TArray<struct FKtItemDiff> inventoryDataDiffDefaultParts;  // Offset: 80 Size: 16
	struct TArray<struct FKtItemDiff> inventoryDataDiffCash;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseTitle Size 80
// Inherited 80 bytes 
class UTransition_LicenseTitle : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureLightListWidget Size 664
// Inherited 608 bytes 
class UBuildCaptureLightListWidget : public UUserWidget
{

 public: 
	struct UPanelWidget* Panel_BuildCaptureLightListItems;  // Offset: 608 Size: 8
	struct TSoftClassPtr<UObject> BuildCaptureLightListItemClass;  // Offset: 616 Size: 40
	char pad_656[8];  // Offset: 656 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqEmblemItemIdUpdate Size 72
// Inherited 56 bytes 
class UPqEmblemItemIdUpdate : public UPqPacket
{

 public: 
	struct FString ItemId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcEmblemItemIdUpdated Size 64
// Inherited 48 bytes 
class UPcEmblemItemIdUpdated : public UPcPacket
{

 public: 
	struct FString ItemId;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemShield Size 1080
// Inherited 856 bytes 
class AItemShield : public AItem
{

 public: 
	char pad_856[8];  // Offset: 856 Size: 8
	struct UParticleSystemComponent* UseShieldEffectComponent;  // Offset: 864 Size: 8
	struct UParticleSystemComponent* DefenseEffectComponent;  // Offset: 872 Size: 8
	struct UItemComponent* Target;  // Offset: 880 Size: 8
	struct TSoftObjectPtr<UFMODEvent> FiringFx;  // Offset: 888 Size: 40
	struct TSoftObjectPtr<UFMODEvent> UsingFx;  // Offset: 928 Size: 40
	struct TSoftObjectPtr<UParticleSystem> UseShieldEffectPath;  // Offset: 968 Size: 40
	struct TSoftObjectPtr<UParticleSystem> DefenseEffectPath;  // Offset: 1008 Size: 40
	char pad_1048[32];  // Offset: 1048 Size: 32



 // Functions 
 public:
	void MulticastBlocked(); // Function KartDrift.ItemShield.MulticastBlocked
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemShield.MulticastBeginCasting
	void EndAffect(); // Function KartDrift.ItemShield.EndAffect
}; 
 
 


//Class KartDrift.AddDashboard Size 160
// Inherited 72 bytes 
class UAddDashboard : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> DashboardClass;  // Offset: 72 Size: 40
	char pad_112[48];  // Offset: 112 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackSelectRankerDialog Size 888
// Inherited 816 bytes 
class UTimeAttackSelectRankerDialog : public UDialogTemplate
{

 public: 
	char pad_816[72];  // Offset: 816 Size: 72



 // Functions 
 public:
	void OnClickedSelectButton(int32_t InIndex); // Function KartDrift.TimeAttackSelectRankerDialog.OnClickedSelectButton
	void OnClickedPrevTabButton(int32_t InIndex); // Function KartDrift.TimeAttackSelectRankerDialog.OnClickedPrevTabButton
	void OnClickedNextTabButton(int32_t InIndex); // Function KartDrift.TimeAttackSelectRankerDialog.OnClickedNextTabButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.TimeAttackSelectRankerDialog.OnClickedBackButton
}; 
 
 


//Class KartDrift.ShopWidgetLogicComponent Size 704
// Inherited 224 bytes 
class UShopWidgetLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[72];  // Offset: 224 Size: 72
	struct FKtItemPreset EquipItemPreset;  // Offset: 296 Size: 160
	struct TArray<struct FString> EquipItems;  // Offset: 456 Size: 16
	char pad_472[32];  // Offset: 472 Size: 32
	struct FString SelectedCurrency;  // Offset: 504 Size: 16
	struct FString GiftReceiver;  // Offset: 520 Size: 16
	struct FString PurchaseShopStockID;  // Offset: 536 Size: 16
	int32_t PurchaseShopStockIndex;  // Offset: 552 Size: 4
	char pad_556[148];  // Offset: 556 Size: 148



 // Functions 
 public:
	void UpdateShopItemList(struct TArray<struct FKtShopStock>& Items); // Function KartDrift.ShopWidgetLogicComponent.UpdateShopItemList
	void UpdateServerTime(); // Function KartDrift.ShopWidgetLogicComponent.UpdateServerTime
	void UpdateKcoinItemList(struct TArray<struct FKtShopStock>& Items); // Function KartDrift.ShopWidgetLogicComponent.UpdateKcoinItemList
	void UpdateConfirmItemList(struct TArray<struct FKtShopStock>& Items); // Function KartDrift.ShopWidgetLogicComponent.UpdateConfirmItemList
	void UpdateCashItemList(struct TArray<struct FKtShopStock>& Items); // Function KartDrift.ShopWidgetLogicComponent.UpdateCashItemList
	void OnRiderNameChangeReserve(enum class EPrSetRiderNameResult InRiderNameCheckResult, struct FString InNotSupportedLetter); // Function KartDrift.ShopWidgetLogicComponent.OnRiderNameChangeReserve
	void OnRiderNameChangeConfirmError(enum class EPrSetRiderNameResult InRiderNameCheckResult, struct FString InNotSupportedLetter); // Function KartDrift.ShopWidgetLogicComponent.OnRiderNameChangeConfirmError
	void OnCompleteLoadPawn(struct AOutGamePawn* LoadedPawn); // Function KartDrift.ShopWidgetLogicComponent.OnCompleteLoadPawn
}; 
 
 


//Class KartDrift.C_TimeAttackPageWidget Size 832
// Inherited 816 bytes 
class UC_TimeAttackPageWidget : public UTimeAttackPageWidget
{

 public: 
	char pad_816[16];  // Offset: 816 Size: 16



 // Functions 
 public:
	void OnClickedUseShadowButton(int32_t nIndex); // Function KartDrift.C_TimeAttackPageWidget.OnClickedUseShadowButton
	void OnClickedPrevRankingBoardPageButton(int32_t nIndex); // Function KartDrift.C_TimeAttackPageWidget.OnClickedPrevRankingBoardPageButton
	void OnClickedNextRankingBoardPageButton(int32_t nIndex); // Function KartDrift.C_TimeAttackPageWidget.OnClickedNextRankingBoardPageButton
}; 
 
 


//Class KartDrift.PqItemPresetOnUpdate Size 216
// Inherited 56 bytes 
class UPqItemPresetOnUpdate : public UPqPacket
{

 public: 
	struct FKtItemPreset itemPreset;  // Offset: 56 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrItemPresetOnUpdate Size 232
// Inherited 72 bytes 
class UPrItemPresetOnUpdate : public UPrPacket
{

 public: 
	struct FKtItemPreset itemPreset;  // Offset: 72 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemMagnet Size 904
// Inherited 856 bytes 
class AItemMagnet : public AItem
{

 public: 
	char pad_856[8];  // Offset: 856 Size: 8
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 864 Size: 40



 // Functions 
 public:
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemMagnet.MulticastNoTarget
	void MulticastAffectTo(struct UItemComponent* User, struct UItemComponent* Target); // Function KartDrift.ItemMagnet.MulticastAffectTo
}; 
 
 


//Class KartDrift.SpeedSinglePhaseComponent Size 432
// Inherited 432 bytes 
class USpeedSinglePhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcCustomGame Size 352
// Inherited 48 bytes 
class UPcCustomGame : public UPcPacket
{

 public: 
	struct FString SessionId;  // Offset: 48 Size: 16
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool infoValid : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7
	struct FCustomGameInfo Info;  // Offset: 72 Size: 280



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamBooster Size 856
// Inherited 856 bytes 
class AItemTeamBooster : public AItem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqItemPresetSave Size 64
// Inherited 56 bytes 
class UPqItemPresetSave : public UPqPacket
{

 public: 
	int32_t itemPresetIdx;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrItemPresetSave Size 240
// Inherited 72 bytes 
class UPrItemPresetSave : public UPrPacket
{

 public: 
	int32_t itemPresetIdx;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct FKtItemPreset itemPreset;  // Offset: 80 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDescData Size 88
// Inherited 64 bytes 
class ULicenseDescData : public ULicenseContents
{

 public: 
	float PlayTime;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4
	struct TArray<struct FString> DescList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqItemPresetLoad Size 64
// Inherited 56 bytes 
class UPqItemPresetLoad : public UPqPacket
{

 public: 
	int32_t itemPresetIdx;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_Podium Size 88
// Inherited 80 bytes 
class UTransition_Podium : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WqHttpReply Size 88
// Inherited 48 bytes 
class UWqHttpReply : public UKxObject
{

 public: 
	int32_t statusCode;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4
	struct FString ContentType;  // Offset: 56 Size: 16
	struct FString bodyBase64;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateBossWarningWidget Size 120
// Inherited 72 bytes 
class UCreateBossWarningWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> BossWarningWidgetClass;  // Offset: 72 Size: 40
	float TotalTime;  // Offset: 112 Size: 4
	char pad_116[4];  // Offset: 116 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrItemPresetLoad Size 232
// Inherited 72 bytes 
class UPrItemPresetLoad : public UPrPacket
{

 public: 
	struct FKtItemPreset itemPreset;  // Offset: 72 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSendEmoticon Size 88
// Inherited 56 bytes 
class UPqSendEmoticon : public UPqPacket
{

 public: 
	struct FString emoticonType;  // Offset: 56 Size: 16
	struct FString emotionItemId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqItemPresetDelete Size 64
// Inherited 56 bytes 
class UPqItemPresetDelete : public UPqPacket
{

 public: 
	int32_t itemPresetIdx;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CameraWaterSplashComponent Size 200
// Inherited 192 bytes 
class UCameraWaterSplashComponent : public UDriveCameraParticleEffectComponent
{

 public: 
	char pad_192[8];  // Offset: 192 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerConfig Size 120
// Inherited 40 bytes 
class UKdServerConfig : public UObject
{

 public: 
	struct TArray<struct FKdServerAddrConfig> ServerAddrs;  // Offset: 40 Size: 16
	struct FString ServerListUrl;  // Offset: 56 Size: 16
	struct TArray<struct FKdServerListUrlConfig> ServerListUrls;  // Offset: 72 Size: 16
	struct FString PreAuthKey;  // Offset: 88 Size: 16
	struct TArray<struct FString> Rules;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultWidgetComponent Size 256
// Inherited 176 bytes 
class UMajorResultWidgetComponent : public UActorComponent
{

 public: 
	UMajorResultWidget* WidgetClass;  // Offset: 176 Size: 8
	UMajorResultPlayerWidget* PlayerWidgetClass;  // Offset: 184 Size: 8
	UMajorResultTeamPointWidget* CornerWidgetClass;  // Offset: 192 Size: 8
	struct UMajorResultWidget* FinalResultWidget;  // Offset: 200 Size: 8
	char pad_208[48];  // Offset: 208 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIItemUseCondition Size 64
// Inherited 48 bytes 
class UAIItemUseCondition : public UDataAsset
{

 public: 
	struct AActor* Player;  // Offset: 48 Size: 8
	char pad_56[4];  // Offset: 56 Size: 4
	float RemainDistance;  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrItemPresetDelete Size 80
// Inherited 72 bytes 
class UPrItemPresetDelete : public UPrPacket
{

 public: 
	int32_t itemPresetIdx;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcKartBodyParamUpdated Size 64
// Inherited 48 bytes 
class UPcKartBodyParamUpdated : public UPcPacket
{

 public: 
	struct FString bodyParamStr;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLiveryUpdate Size 136
// Inherited 56 bytes 
class UPqLiveryUpdate : public UPqPacket
{

 public: 
	struct FKtLivery livery;  // Offset: 56 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLiveryUpdate Size 312
// Inherited 72 bytes 
class UPrLiveryUpdate : public UPrPacket
{

 public: 
	struct FKtLivery livery;  // Offset: 72 Size: 80
	struct FKtDataStorePayload dataStoreLink;  // Offset: 152 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestTravelData Size 192
// Inherited 48 bytes 
class UShadowQuestTravelData : public UGameInstanceSubsystem
{

 public: 
	struct FShadowQuestInfo Info;  // Offset: 48 Size: 136
	char pad_184[8];  // Offset: 184 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_GrandPrixPageWidget Size 904
// Inherited 896 bytes 
class UC_GrandPrixPageWidget : public UGrandPrixPageWidget
{

 public: 
	char pad_896[8];  // Offset: 896 Size: 8



 // Functions 
 public:
	void OnClickedRewardDialogShowRewardButton(int32_t InIndex); // Function KartDrift.C_GrandPrixPageWidget.OnClickedRewardDialogShowRewardButton
	void OnClickedPrevTabButton(int32_t nIndex); // Function KartDrift.C_GrandPrixPageWidget.OnClickedPrevTabButton
	void OnClickedNextTabButton(int32_t nIndex); // Function KartDrift.C_GrandPrixPageWidget.OnClickedNextTabButton
}; 
 
 


//Class KartDrift.PqLiveryDelete Size 72
// Inherited 56 bytes 
class UPqLiveryDelete : public UPqPacket
{

 public: 
	struct FString liveryId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateRaceRecord Size 72
// Inherited 72 bytes 
class UActivateRaceRecord : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_EventPageWidget Size 1184
// Inherited 1184 bytes 
class UC_EventPageWidget : public UEventPageWidget
{

 public: 



 // Functions 
 public:
	void OnClickedChangeToRightTabButton(int32_t InIndex); // Function KartDrift.C_EventPageWidget.OnClickedChangeToRightTabButton
	void OnClickedChangeToLeftTabButton(int32_t InIndex); // Function KartDrift.C_EventPageWidget.OnClickedChangeToLeftTabButton
}; 
 
 


//Class KartDrift.LicenseGaugeChargeInterface Size 40
// Inherited 40 bytes 
class ULicenseGaugeChargeInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SequenceBaseComponent Size 176
// Inherited 176 bytes 
class USequenceBaseComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseBossLossRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseBossLossRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLiveryStickerUpdate Size 288
// Inherited 72 bytes 
class UPrLiveryStickerUpdate : public UPrPacket
{

 public: 
	struct FKtLiverySticker liverySticker;  // Offset: 72 Size: 56
	struct FKtDataStorePayload dataStoreLink;  // Offset: 128 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTimeAttackGetTracks Size 88
// Inherited 72 bytes 
class UPrTimeAttackGetTracks : public UPrPacket
{

 public: 
	struct TArray<struct FKtTimeAttackTrack> trackList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByCondition Size 656
// Inherited 624 bytes 
class AScenarioTriggerByCondition : public AScenarioBase
{

 public: 
	struct TArray<struct FScenarioCondition> ConditionContainer;  // Offset: 624 Size: 16
	struct TArray<struct FScenarioTriggerTarget> TriggerContainer;  // Offset: 640 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLiveryStickerDelete Size 72
// Inherited 56 bytes 
class UPqLiveryStickerDelete : public UPqPacket
{

 public: 
	struct FString liveryStickerId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandResetQuest Size 72
// Inherited 72 bytes 
class UPqCommandResetQuest : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLiveryStickerDelete Size 88
// Inherited 72 bytes 
class UPrLiveryStickerDelete : public UPrPacket
{

 public: 
	struct FString liveryStickerId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPlayLucciUpdated Size 64
// Inherited 48 bytes 
class UPcPlayLucciUpdated : public UPcPacket
{

 public: 
	struct FKtPlayLucciInfo lucci;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackServerRequester Size 128
// Inherited 40 bytes 
class UTimeAttackServerRequester : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct TMap<struct FString, struct FTimeAttackCache> TimeAttackCacheMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrFindRider Size 192
// Inherited 72 bytes 
class UPrFindRider : public UPrPacket
{

 public: 
	struct FAccountPlatformDataKt accountData;  // Offset: 72 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqVivoxLoginToken Size 56
// Inherited 56 bytes 
class UPqVivoxLoginToken : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCreateParty Size 72
// Inherited 56 bytes 
class UPqCreateParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLicenseClear Size 192
// Inherited 72 bytes 
class UPrLicenseClear : public UPrPacket
{

 public: 
	struct FString licenseGroupId;  // Offset: 72 Size: 16
	struct FString licenseMissionId;  // Offset: 88 Size: 16
	int32_t starCount;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4
	struct FKtLicenseData licenseData;  // Offset: 112 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseGameState Size 1144
// Inherited 1144 bytes 
class ALicenseGameState : public AKdGameState
{

 public: 



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.LicenseGameState.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.PrCreateParty Size 72
// Inherited 72 bytes 
class UPrCreateParty : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqInviteParty Size 72
// Inherited 56 bytes 
class UPqInviteParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAllySpawnComponent Size 480
// Inherited 176 bytes 
class ULicenseAllySpawnComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseAllyActorData* Data;  // Offset: 192 Size: 8
	struct AActor* Pawn;  // Offset: 200 Size: 8
	struct TMap<struct AActor*, int32_t> SpawnedActors;  // Offset: 208 Size: 80
	enum class EItemType LastUseItemType;  // Offset: 288 Size: 1
	char pad_289[3];  // Offset: 289 Size: 3
	float EventLastTime;  // Offset: 292 Size: 4
	char pad_296_1 : 7;  // Offset: 296 Size: 1
	bool bSuccess : 1;  // Offset: 296 Size: 1
	char pad_297_1 : 7;  // Offset: 297 Size: 1
	bool bFail : 1;  // Offset: 297 Size: 1
	char pad_298[6];  // Offset: 298 Size: 6
	struct UCurveFloat* SpawnCurve;  // Offset: 304 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 312 Size: 8
	int32_t Combo;  // Offset: 320 Size: 4
	int32_t Score;  // Offset: 324 Size: 4
	char pad_328[32];  // Offset: 328 Size: 32
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 360 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 400 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 440 Size: 40



 // Functions 
 public:
	void OnAttackSucceedItem(struct APawn* InPawn, enum class EItemType InType); // Function KartDrift.LicenseAllySpawnComponent.OnAttackSucceedItem
	void OnAttackFailedItem(struct APawn* InPawn, enum class EItemType InType); // Function KartDrift.LicenseAllySpawnComponent.OnAttackFailedItem
	void AddInfo(struct FHitInfo& HitInfo); // Function KartDrift.LicenseAllySpawnComponent.AddInfo
}; 
 
 


//Class KartDrift.PrInviteParty Size 96
// Inherited 72 bytes 
class UPrInviteParty : public UPrPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 72 Size: 16
	enum class EPartyJoinFailReason inviteFailReason;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskMobile Size 688
// Inherited 560 bytes 
class UKdServerLoginTaskMobile : public UKdServerLoginTaskOSS
{

 public: 
	char pad_560[128];  // Offset: 560 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AISpeedTeamComponent Size 296
// Inherited 296 bytes 
class UAISpeedTeamComponent : public UAISpeedComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_TimeAttachMesh Size 176
// Inherited 48 bytes 
class UAnimNotifyState_TimeAttachMesh : public UAnimNotifyState
{

 public: 
	struct TArray<struct USkeletalMesh*> AttachingItems;  // Offset: 48 Size: 16
	struct TArray<struct UAnimSequenceBase*> AttachingItemsAnim;  // Offset: 64 Size: 16
	int32_t DefaultAttachIndex;  // Offset: 80 Size: 4
	char pad_84[4];  // Offset: 84 Size: 4
	struct USkeletalMesh* Additional_PrimitiveComponent;  // Offset: 88 Size: 8
	struct UAnimSequenceBase* Additional_Animations;  // Offset: 96 Size: 8
	char pad_104_1 : 7;  // Offset: 104 Size: 1
	bool bLoop : 1;  // Offset: 104 Size: 1
	char pad_105[3];  // Offset: 105 Size: 3
	struct FName SocketName;  // Offset: 108 Size: 8
	struct FVector LocationOffset;  // Offset: 116 Size: 12
	struct FRotator RotationOffset;  // Offset: 128 Size: 12
	char pad_140_1 : 7;  // Offset: 140 Size: 1
	bool bUseCustomDepth : 1;  // Offset: 140 Size: 1
	char pad_141[3];  // Offset: 141 Size: 3
	int32_t CustomDepthStencilValue;  // Offset: 144 Size: 4
	enum class ERendererStencilMask RendererStencilMask;  // Offset: 148 Size: 1
	char pad_149[3];  // Offset: 149 Size: 3
	float AnimTime;  // Offset: 152 Size: 4
	char pad_156[4];  // Offset: 156 Size: 4
	struct TArray<struct FAttachedMeshCurveData> CurveValue;  // Offset: 160 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByMessageHUD Size 648
// Inherited 624 bytes 
class AScenarioTriggerByMessageHUD : public AScenarioBase
{

 public: 
	struct FScenarioMessageHUDWidgetDataGroup DataGroup;  // Offset: 624 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrMyInfo Size 120
// Inherited 72 bytes 
class UPrMyInfo : public UPrPacket
{

 public: 
	struct TArray<struct FString> Tag;  // Offset: 72 Size: 16
	struct TArray<struct FKtRecentActivity> recentActivity;  // Offset: 88 Size: 16
	struct FKtRaceCount racingCount;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAskInviteParty Size 96
// Inherited 56 bytes 
class UPqAskInviteParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	struct FString PartyId;  // Offset: 72 Size: 16
	enum class EPartyInviteAckType ack;  // Offset: 88 Size: 1
	char pad_89[3];  // Offset: 89 Size: 3
	enum class EPartyJoinFailReason Reason;  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAskInviteParty Size 192
// Inherited 48 bytes 
class UPcAskInviteParty : public UPcPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 48 Size: 16
	struct FString PartyId;  // Offset: 64 Size: 16
	struct FString InviteUserName;  // Offset: 80 Size: 16
	struct FKtAccountProfile inviteUserProfile;  // Offset: 96 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAskInviteParty Size 160
// Inherited 72 bytes 
class UPrAskInviteParty : public UPrPacket
{

 public: 
	struct TArray<struct FPartyMemberInfo> members;  // Offset: 72 Size: 16
	struct FPartyInfo PartyInfo;  // Offset: 88 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RemoveLoadingScreenRule Size 72
// Inherited 72 bytes 
class URemoveLoadingScreenRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemAngel Size 984
// Inherited 856 bytes 
class AItemAngel : public AItem
{

 public: 
	char pad_856[8];  // Offset: 856 Size: 8
	struct TSoftObjectPtr<UFMODEvent> DefendedSound;  // Offset: 864 Size: 40
	struct TSoftObjectPtr<UParticleSystem> DefendedEffect;  // Offset: 904 Size: 40
	struct TArray<struct UItemComponent*> AuthVictims;  // Offset: 944 Size: 16
	struct TArray<struct UItemComponent*> LocalVictims;  // Offset: 960 Size: 16
	float LifeSpanTime;  // Offset: 976 Size: 4
	char pad_980[4];  // Offset: 980 Size: 4



 // Functions 
 public:
	void MulticastDefend(struct UItemComponent* InVictim); // Function KartDrift.ItemAngel.MulticastDefend
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemAngel.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemAngel.MulticastAffectTo
}; 
 
 


//Class KartDrift.AccountShadowQuest Size 80
// Inherited 48 bytes 
class UAccountShadowQuest : public UAccountSubsystem
{

 public: 
	struct FRaceSaveGameLatestPtr ReplayFile;  // Offset: 48 Size: 8
	char pad_56[24];  // Offset: 56 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrReportLiveryInfo Size 152
// Inherited 72 bytes 
class UPrReportLiveryInfo : public UPrPacket
{

 public: 
	struct FString riderName;  // Offset: 72 Size: 16
	struct TArray<struct FKtLivery> liveryVector;  // Offset: 88 Size: 16
	struct TArray<struct FString> liverySignedUrlVector;  // Offset: 104 Size: 16
	struct TArray<struct FKtLiverySticker> liveryStickerVector;  // Offset: 120 Size: 16
	struct TArray<struct FString> liveryStickerSignedUrlVector;  // Offset: 136 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableSignificant Size 72
// Inherited 72 bytes 
class UEnableSignificant : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRequestJoinParty Size 96
// Inherited 56 bytes 
class UPqRequestJoinParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	struct FString PartyId;  // Offset: 72 Size: 16
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool isPlatformAction : 1;  // Offset: 88 Size: 1
	char pad_89[7];  // Offset: 89 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetGrandPrixRankBoard Size 88
// Inherited 72 bytes 
class UPrGetGrandPrixRankBoard : public UPrPacket
{

 public: 
	struct TArray<struct FKtRankerInfo> rankerList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCoinData Size 296
// Inherited 64 bytes 
class ULicenseCoinData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	int32_t HitWallLoseCoinNum;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct TSoftObjectPtr<UStaticMesh> CoinMeshClass;  // Offset: 80 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 120 Size: 40
	struct TMap<enum class ELicenseCoinType, struct FLicenseCoinTypeInfo> CoinTypeMap;  // Offset: 160 Size: 80
	struct FString CheckPointName;  // Offset: 240 Size: 16
	char pad_256_1 : 7;  // Offset: 256 Size: 1
	bool bUpdateObjectSpawnSplineData : 1;  // Offset: 256 Size: 1
	char pad_257_1 : 7;  // Offset: 257 Size: 1
	bool bCreateLicenseObjectSpawnSplines : 1;  // Offset: 257 Size: 1
	char pad_258[6];  // Offset: 258 Size: 6
	struct TArray<struct FLicenseCoinActorInfo> SpawnActorDataList;  // Offset: 264 Size: 16
	struct TArray<struct FLicenseObjectSpawnSplineData> ObjectSpawnSplineDataList;  // Offset: 280 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActiveCheckWrongWay Size 72
// Inherited 72 bytes 
class UActiveCheckWrongWay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadStatics Size 40
// Inherited 40 bytes 
class ULoadStatics : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetEventChallengeInfo Size 104
// Inherited 72 bytes 
class UPrGetEventChallengeInfo : public UPrPacket
{

 public: 
	struct TArray<struct FKtEventChallengeInfo> proceeding;  // Offset: 72 Size: 16
	struct TArray<struct FKtEventChallengeInfo> proceeded;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetGrandPrixRankBoard Size 72
// Inherited 56 bytes 
class UPqGetGrandPrixRankBoard : public UPqPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TargetFinderInterface Size 40
// Inherited 40 bytes 
class UTargetFinderInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrDediRequestGameSessionData Size 80
// Inherited 72 bytes 
class UDrDediRequestGameSessionData : public UPrPacket
{

 public: 
	struct UObject* SessionRequest;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcRequestJoinParty Size 136
// Inherited 48 bytes 
class UPcRequestJoinParty : public UPcPacket
{

 public: 
	struct TArray<struct FPartyMemberInfo> members;  // Offset: 48 Size: 16
	struct FPartyInfo PartyInfo;  // Offset: 64 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcRequestAskJoinParty Size 160
// Inherited 48 bytes 
class UPcRequestAskJoinParty : public UPcPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 48 Size: 16
	struct FKtAccountProfile TargetProfile;  // Offset: 64 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRequestAskJoinParty Size 176
// Inherited 56 bytes 
class UPqRequestAskJoinParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	struct FKtAccountProfile TargetProfile;  // Offset: 72 Size: 96
	enum class EPartyInviteAckType ack;  // Offset: 168 Size: 1
	char pad_169[3];  // Offset: 169 Size: 3
	enum class EPartyJoinFailReason Reason;  // Offset: 172 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RocketFirstRankReaction Size 752
// Inherited 752 bytes 
class URocketFirstRankReaction : public URocketReaction
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PeriodExecuteLogicComponent Size 232
// Inherited 224 bytes 
class UPeriodExecuteLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[8];  // Offset: 224 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRequestAskJoinParty Size 88
// Inherited 72 bytes 
class UPrRequestAskJoinParty : public UPrPacket
{

 public: 
	struct TArray<struct FPartyMemberInfo> members;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdAnimationComponent Size 200
// Inherited 176 bytes 
class UKdAnimationComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	AActor* DummyItemClass;  // Offset: 184 Size: 8
	enum class ECharacterMontage PlayingCharacterMontageState;  // Offset: 192 Size: 1
	enum class EPlayingAnimPriority PlayingCharacterAnimPriority;  // Offset: 193 Size: 1
	enum class EKartPlayingMontageState PlayingKartMontageState;  // Offset: 194 Size: 1
	char pad_195[5];  // Offset: 195 Size: 5



 // Functions 
 public:
	void DEV_PlayCharacterMontage(char InState); // Function KartDrift.KdAnimationComponent.DEV_PlayCharacterMontage
}; 
 
 


//Class KartDrift.LicensePageWidget Size 944
// Inherited 744 bytes 
class ULicensePageWidget : public UKdPageWidget
{

 public: 
	char pad_744[16];  // Offset: 744 Size: 16
	struct UListView* MissionListView;  // Offset: 760 Size: 8
	struct UListView* RewardItemListView;  // Offset: 768 Size: 8
	struct UListView* OpenContentsListView;  // Offset: 776 Size: 8
	struct ULicenseMissionListEntry* PrevSelectedMissionObject;  // Offset: 784 Size: 8
	struct UDialogTemplate* LicenseClearPopup;  // Offset: 792 Size: 8
	char pad_800[32];  // Offset: 800 Size: 32
	struct TSoftClassPtr<UObject> PauseDescWidgetClass;  // Offset: 832 Size: 40
	struct TSoftClassPtr<UObject> UseItemEntryWidgetClass;  // Offset: 872 Size: 40
	char pad_912[32];  // Offset: 912 Size: 32



 // Functions 
 public:
	void OnFocusedMission(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnFocusedMission
	void OnCloseItemListPopup(); // Function KartDrift.LicensePageWidget.OnCloseItemListPopup
	void OnClickedShowRewardListButton(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedShowRewardListButton
	void OnClickedShowRewardButton(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedShowRewardButton
	void OnClickedShowMissionInfo(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedShowMissionInfo
	void OnClickedRewardItem(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedRewardItem
	void OnClickedOpenContentItem(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedOpenContentItem
	void OnClickedMissionPlay(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedMissionPlay
	void OnClickedMission(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedMission
	void OnClickedLicenseClearConfirmButton(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedLicenseClearConfirmButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.LicensePageWidget.OnClickedBackButton
	void OnAnimationFinishedInAchievementCompletedPopup(); // Function KartDrift.LicensePageWidget.OnAnimationFinishedInAchievementCompletedPopup
}; 
 
 


//Class KartDrift.PcRequestAskJoinPartyReply Size 72
// Inherited 48 bytes 
class UPcRequestAskJoinPartyReply : public UPcPacket
{

 public: 
	char pad_48_1 : 7;  // Offset: 48 Size: 1
	bool ask : 1;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7
	struct FString PartyId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateVivox Size 72
// Inherited 72 bytes 
class UActivateVivox : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcRequestAskCreateParty Size 168
// Inherited 48 bytes 
class UPcRequestAskCreateParty : public UPcPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 48 Size: 16
	struct FKtAccountProfile TargetProfile;  // Offset: 64 Size: 96
	int32_t recvPackId;  // Offset: 160 Size: 4
	char pad_164_1 : 7;  // Offset: 164 Size: 1
	bool isPlatformAction : 1;  // Offset: 164 Size: 1
	char pad_165[3];  // Offset: 165 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRequestAskCreateParty Size 88
// Inherited 56 bytes 
class UPqRequestAskCreateParty : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	int32_t recvPackId;  // Offset: 72 Size: 4
	enum class EPartyInviteAckType ack;  // Offset: 76 Size: 1
	char pad_77[3];  // Offset: 77 Size: 3
	enum class EPartyJoinFailReason Reason;  // Offset: 80 Size: 4
	char pad_84[4];  // Offset: 84 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPawnSpawner Size 56
// Inherited 40 bytes 
class UKdPawnSpawner : public UObject
{

 public: 
	struct UDelegateBarrierMany* Barrier;  // Offset: 40 Size: 8
	char pad_48[8];  // Offset: 48 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetStockTag Size 72
// Inherited 56 bytes 
class ULqGetStockTag : public UPqPacket
{

 public: 
	struct TArray<int32_t> tagId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRequestAskCreateParty Size 72
// Inherited 72 bytes 
class UPrRequestAskCreateParty : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoginPageWidget Size 1040
// Inherited 744 bytes 
class ULoginPageWidget : public UKdPageWidget
{

 public: 
	struct UKdTextBlock* serverName;  // Offset: 744 Size: 8
	struct UEditableText* IdBox;  // Offset: 752 Size: 8
	struct TWeakObjectPtr<URiderNameChangeDialog> NickNameCreationWidget;  // Offset: 760 Size: 8
	char pad_768[32];  // Offset: 768 Size: 32
	struct UDialogTemplate* CurrentStandbyDialog;  // Offset: 800 Size: 8
	char pad_808[16];  // Offset: 808 Size: 16
	struct TSoftObjectPtr<UMediaPlaylist> PatchMovie;  // Offset: 824 Size: 40
	struct TArray<struct TSoftObjectPtr<UMediaPlaylist>> CinematicSeasonPlayLists;  // Offset: 864 Size: 16
	struct TArray<struct TSoftObjectPtr<UMediaPlaylist>> CinematicMainPlayLists;  // Offset: 880 Size: 16
	struct TSoftObjectPtr<UTexture2D> PatchImage;  // Offset: 896 Size: 40
	struct UDialogTemplate* CurrentPatcherDialog;  // Offset: 936 Size: 8
	struct UPatcherEvent* CurrentPatcherEvent;  // Offset: 944 Size: 8
	struct UDialogTemplate* CurrentPatcherEventDialog;  // Offset: 952 Size: 8
	char pad_960[36];  // Offset: 960 Size: 36
	float GuideAgeAnim_StartTime;  // Offset: 996 Size: 4
	struct UKdServerList* CurrentServerList;  // Offset: 1000 Size: 8
	struct TWeakObjectPtr<UGameplayControlTypeSelectDialog> CurrentGameplayControlTypeSelectDialog;  // Offset: 1008 Size: 8
	struct UDialogTemplate* KeySelectDialog;  // Offset: 1016 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> CinematicSeasonDialog;  // Offset: 1024 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> CinematicMainDialog;  // Offset: 1032 Size: 8



 // Functions 
 public:
	void WaitForLinkToNexonArena(int32_t InIndex); // Function KartDrift.LoginPageWidget.WaitForLinkToNexonArena
	void UpdateLogoutBtnVisibility(); // Function KartDrift.LoginPageWidget.UpdateLogoutBtnVisibility
	void TryLoginToy(); // Function KartDrift.LoginPageWidget.TryLoginToy
	void TryInitializeToy(); // Function KartDrift.LoginPageWidget.TryInitializeToy
	void ShowNickNameCreationWidget(); // Function KartDrift.LoginPageWidget.ShowNickNameCreationWidget
	void ShowNickNameChangeWidget(); // Function KartDrift.LoginPageWidget.ShowNickNameChangeWidget
	void ShowGameplayControlTypeSelectWidget(); // Function KartDrift.LoginPageWidget.ShowGameplayControlTypeSelectWidget
	void ResolvePatchEvent(int32_t InIndex); // Function KartDrift.LoginPageWidget.ResolvePatchEvent
	void RequestRiderNameDuplicateCheck(struct FString InRiderName); // Function KartDrift.LoginPageWidget.RequestRiderNameDuplicateCheck
	void RequestChangeRadierName(struct FString InRiderName, float RemainReserveTime); // Function KartDrift.LoginPageWidget.RequestChangeRadierName
	void PlaySeasonCinematic(); // Function KartDrift.LoginPageWidget.PlaySeasonCinematic
	void PlayMainCinematic(); // Function KartDrift.LoginPageWidget.PlayMainCinematic
	void OpenTermsOfService(int32_t InIndex); // Function KartDrift.LoginPageWidget.OpenTermsOfService
	void OnRiderNameDuplicateCheckResult(); // Function KartDrift.LoginPageWidget.OnRiderNameDuplicateCheckResult
	void OnIdBoxCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LoginPageWidget.OnIdBoxCommitted
	void OnCreateNicknameResult(); // Function KartDrift.LoginPageWidget.OnCreateNicknameResult
	void OnClickServerChangeButton(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnClickServerChangeButton
	void OnClickLoginButton(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnClickLoginButton
	void OnClickedControlKeyConfirm(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnClickedControlKeyConfirm
	void OnClickedCancelStandbyButton(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnClickedCancelStandbyButton
	void OnCinematicSeasonSkipButton(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnCinematicSeasonSkipButton
	void OnCinematicSeasonFinished(); // Function KartDrift.LoginPageWidget.OnCinematicSeasonFinished
	void OnCinematicMainSkipButton(int32_t InIndex); // Function KartDrift.LoginPageWidget.OnCinematicMainSkipButton
	void OnCinematicMainOpened(int32_t InPlaylistIndex); // Function KartDrift.LoginPageWidget.OnCinematicMainOpened
	void OnCinematicMainFinished(); // Function KartDrift.LoginPageWidget.OnCinematicMainFinished
	void LinkToNexonArena(int32_t InIndex); // Function KartDrift.LoginPageWidget.LinkToNexonArena
	void HideGuideAgeBg(); // Function KartDrift.LoginPageWidget.HideGuideAgeBg
	void CreateNewAccount(int32_t InIndex); // Function KartDrift.LoginPageWidget.CreateNewAccount
	void ConnectNexonArenaConfirm(int32_t InIndex); // Function KartDrift.LoginPageWidget.ConnectNexonArenaConfirm
	void ChangeSelectedServer(int32_t _); // Function KartDrift.LoginPageWidget.ChangeSelectedServer
	void BackToShowAccountLinkSelectPopup(int32_t InIndex); // Function KartDrift.LoginPageWidget.BackToShowAccountLinkSelectPopup
}; 
 
 


//Class KartDrift.C_LicensePageWidget Size 960
// Inherited 944 bytes 
class UC_LicensePageWidget : public ULicensePageWidget
{

 public: 
	char pad_944[16];  // Offset: 944 Size: 16



 // Functions 
 public:
	void OnClickedRewardListButton(int32_t InIndex); // Function KartDrift.C_LicensePageWidget.OnClickedRewardListButton
}; 
 
 


//Class KartDrift.ScenarioTriggerByKartSpeed Size 672
// Inherited 624 bytes 
class AScenarioTriggerByKartSpeed : public AScenarioBase
{

 public: 
	float MinSpeed;  // Offset: 624 Size: 4
	float CoolTime;  // Offset: 628 Size: 4
	struct FScenarioTriggerTarget TriggerContainer;  // Offset: 632 Size: 32
	char pad_664[8];  // Offset: 664 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAccountUnlinkAll Size 56
// Inherited 56 bytes 
class UPqAccountUnlinkAll : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartUpgradePageWidget Size 928
// Inherited 744 bytes 
class UKartUpgradePageWidget : public UKdPageWidget
{

 public: 
	char pad_744[88];  // Offset: 744 Size: 88
	struct TArray<struct UParticleSystemComponent*> GearApplyParticlesInPlay;  // Offset: 832 Size: 16
	char pad_848[24];  // Offset: 848 Size: 24
	struct TSoftObjectPtr<UKartUpgradeEffectAsset> UpgradeEffectAsset;  // Offset: 872 Size: 40
	struct TArray<struct UParticleSystemComponent*> UpgradeParticleList;  // Offset: 912 Size: 16



 // Functions 
 public:
	void UpgradeResult_CloseDialog(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.UpgradeResult_CloseDialog
	void UpgradeDialog_OnClickedUpgradBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.UpgradeDialog_OnClickedUpgradBtn
	void UpgradeDialog_CloseDialog(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.UpgradeDialog_CloseDialog
	void ResetGearDialog_OnClickedResetBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.ResetGearDialog_OnClickedResetBtn
	void ResetGearDialog_CloseDialog(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.ResetGearDialog_CloseDialog
	void OnShowKartUpgradeResult(bool bIsSuccess, enum class EKtItemGrade KartGrade); // Function KartDrift.KartUpgradePageWidget.OnShowKartUpgradeResult
	void OnCompleteResetGear(); // Function KartDrift.KartUpgradePageWidget.OnCompleteResetGear
	void OnCompleteApplyGear(); // Function KartDrift.KartUpgradePageWidget.OnCompleteApplyGear
	void OnClickedUpgradeBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedUpgradeBtn
	void OnClickedReturnGearBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedReturnGearBtn
	void OnClickedResetGearBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedResetGearBtn
	void OnClickedGearPlusBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedGearPlusBtn
	void OnClickedGearMinusBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedGearMinusBtn
	void OnClickedBackBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedBackBtn
	void OnClickedApplyGearBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.OnClickedApplyGearBtn
	void ApplyGearDialog_OnClickedApplyBtn(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.ApplyGearDialog_OnClickedApplyBtn
	void ApplyGearDialog_CloseDialog(int32_t InIndex); // Function KartDrift.KartUpgradePageWidget.ApplyGearDialog_CloseDialog
}; 
 
 


//Class KartDrift.PqQuitParty Size 72
// Inherited 56 bytes 
class UPqQuitParty : public UPqPacket
{

 public: 
	struct FString PartyId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUpdateChannelPlayerInfo Size 136
// Inherited 56 bytes 
class UPqUpdateChannelPlayerInfo : public UPqPacket
{

 public: 
	struct TMap<struct FString, struct FString> Update;  // Offset: 56 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseListItemWidget Size 944
// Inherited 608 bytes 
class ULicenseListItemWidget : public UUserWidget
{

 public: 
	struct FSlateBrush Inst_EmblemLogo;  // Offset: 608 Size: 136
	struct FSlateBrush Inst_EmblemLogo_NotGain;  // Offset: 744 Size: 136
	struct FLinearColor Inst_EmblemLineColor1;  // Offset: 880 Size: 16
	struct FLinearColor Inst_EmblemLineColor2;  // Offset: 896 Size: 16
	struct ULicenseCardEmblemWidget* V_Emblem_NotGain;  // Offset: 912 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Bronze;  // Offset: 920 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Silver;  // Offset: 928 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Gold;  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrQuitParty Size 72
// Inherited 72 bytes 
class UPrQuitParty : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HostGameStartRace Size 48
// Inherited 48 bytes 
class UHostGameStartRace : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerController Size 1408
// Inherited 1408 bytes 
class AKdPlayerController : public APlayerController
{

 public: 



 // Functions 
 public:
	void SetServerTickRate(float InTickRate); // Function KartDrift.KdPlayerController.SetServerTickRate
	void Server_SetServerTickRate(float InTickRate); // Function KartDrift.KdPlayerController.Server_SetServerTickRate
	void Client_ReturnToLobbyTimeout(); // Function KartDrift.KdPlayerController.Client_ReturnToLobbyTimeout
	void Client_ReturnToLobbyFastLapTime(); // Function KartDrift.KdPlayerController.Client_ReturnToLobbyFastLapTime
	void Client_ReturnToLobby(); // Function KartDrift.KdPlayerController.Client_ReturnToLobby
}; 
 
 


//Class KartDrift.KdSingleton Size 40
// Inherited 40 bytes 
class UKdSingleton : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPartyBossChange Size 88
// Inherited 56 bytes 
class UPqPartyBossChange : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	struct FString TargetName;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMissionGoalWidget Size 672
// Inherited 608 bytes 
class ULicenseMissionGoalWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_DescText;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Appear;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_Disappear;  // Offset: 624 Size: 8
	char pad_632[40];  // Offset: 632 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqQueryDebugSession Size 112
// Inherited 56 bytes 
class UDqQueryDebugSession : public UPqPacket
{

 public: 
	struct FString Name;  // Offset: 56 Size: 16
	struct FSessionDebugRequest req;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrPartyBossChange Size 72
// Inherited 72 bytes 
class UPrPartyBossChange : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbyPlayerController Size 1432
// Inherited 1408 bytes 
class ADedicatedLobbyPlayerController : public APlayerController
{

 public: 
	struct UDedicatedLobbyWidget* LobbyWidget;  // Offset: 1408 Size: 8
	struct ADedicatedLobbyPawn* LobbyVisualPawn;  // Offset: 1416 Size: 8
	char pad_1424[8];  // Offset: 1424 Size: 8



 // Functions 
 public:
	void Server_AddLog(struct FText InLog); // Function KartDrift.DedicatedLobbyPlayerController.Server_AddLog
	void Server_AddChat(struct FText InChat); // Function KartDrift.DedicatedLobbyPlayerController.Server_AddChat
	void OnReplicatedClientDesc(struct FDedicatedLobbyPlayerDesc InDesc); // Function KartDrift.DedicatedLobbyPlayerController.OnReplicatedClientDesc
	void OnDediWidgetChatCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.DedicatedLobbyPlayerController.OnDediWidgetChatCommitted
}; 
 
 


//Class KartDrift.C_MainmenuPageWidget Size 1144
// Inherited 1064 bytes 
class UC_MainmenuPageWidget : public UMainmenuPageWidget
{

 public: 
	struct TSoftObjectPtr<UPageWidgetAsset> PageWidgetAssetPc;  // Offset: 1064 Size: 40
	struct TSoftObjectPtr<UPageWidgetAsset> PageWidgetAssetConsole;  // Offset: 1104 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqForceLeavePartyMember Size 88
// Inherited 56 bytes 
class UPqForceLeavePartyMember : public UPqPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 56 Size: 16
	struct FString TargetName;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopAllProductList Size 56
// Inherited 56 bytes 
class UPqShopAllProductList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrForceLeavePartyMember Size 72
// Inherited 72 bytes 
class UPrForceLeavePartyMember : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeSelectPageWidget Size 848
// Inherited 744 bytes 
class UModeSelectPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[40];  // Offset: 744 Size: 40
	struct TWeakObjectPtr<UDialogTemplate> MatchingSettingsPopup;  // Offset: 784 Size: 8
	char pad_792[8];  // Offset: 792 Size: 8
	struct UDialogTemplate* ItemGuidePopup;  // Offset: 800 Size: 8
	struct UDialogTemplate* ItemGuideDetailPopup;  // Offset: 808 Size: 8
	struct USpeedGuideDialog* SpeedGuideDialog;  // Offset: 816 Size: 8
	char pad_824[24];  // Offset: 824 Size: 24



 // Functions 
 public:
	void Speed_OnClickedShowSpeedGuide(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.Speed_OnClickedShowSpeedGuide
	void OnUpdateDetailedOption(); // Function KartDrift.ModeSelectPageWidget.OnUpdateDetailedOption
	void OnUpdateButtonEnableState(); // Function KartDrift.ModeSelectPageWidget.OnUpdateButtonEnableState
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.OnClickedBackButton
	void MatchMode_ShowMatchingSettingsPopup(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_ShowMatchingSettingsPopup
	void MatchMode_OnModeUnchecked(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnModeUnchecked
	void MatchMode_OnModeChecked(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnModeChecked
	void MatchMode_OnMatchingSettingsBackButtonClicked(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnMatchingSettingsBackButtonClicked
	void MatchMode_OnClickedShowItemGuideButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnClickedShowItemGuideButton
	void MatchMode_OnClickedPresetButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnClickedPresetButton
	void MatchMode_OnClickedMoveToLicenseButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnClickedMoveToLicenseButton
	void MatchMode_OnClickedMatchStartButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnClickedMatchStartButton
	void MatchMode_OnClickedChatButton(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.MatchMode_OnClickedChatButton
	void License_OnClickedShowReward(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.License_OnClickedShowReward
	void License_OnClickedEnterLicense(int32_t InIndex); // Function KartDrift.ModeSelectPageWidget.License_OnClickedEnterLicense
	void ItemGuidePopup_OnClickedShowDetailButton(int32_t Index); // Function KartDrift.ModeSelectPageWidget.ItemGuidePopup_OnClickedShowDetailButton
	void ItemGuidePopup_OnClickedCloseButton(int32_t Index); // Function KartDrift.ModeSelectPageWidget.ItemGuidePopup_OnClickedCloseButton
	void ItemGuideDetailPopup_OnItemSelectionChanged(struct UObject* SelectedItem); // Function KartDrift.ModeSelectPageWidget.ItemGuideDetailPopup_OnItemSelectionChanged
	void ItemGuideDetailPopup_OnClickedCloseButton(int32_t Index); // Function KartDrift.ModeSelectPageWidget.ItemGuideDetailPopup_OnClickedCloseButton
	void EnterKeyDialog_OnTextChanged(struct FText& Text); // Function KartDrift.ModeSelectPageWidget.EnterKeyDialog_OnTextChanged
	void EnterKeyDialog_OnClickedEnterKey(int32_t Index); // Function KartDrift.ModeSelectPageWidget.EnterKeyDialog_OnClickedEnterKey
	void EnterKeyDialog_OnClickedCancelKey(int32_t Index); // Function KartDrift.ModeSelectPageWidget.EnterKeyDialog_OnClickedCancelKey
}; 
 
 


//Class KartDrift.FirstPersonFollowCameraCalculator Size 112
// Inherited 40 bytes 
class UFirstPersonFollowCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPartyMatchQueueChange Size 72
// Inherited 56 bytes 
class UPqPartyMatchQueueChange : public UPqPacket
{

 public: 
	struct FMatchQueueList MatchQueueList;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqInviteMeToParty Size 88
// Inherited 56 bytes 
class UPqInviteMeToParty : public UPqPacket
{

 public: 
	struct FString targetInviterAccountId;  // Offset: 56 Size: 16
	struct FString reqUid;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_TimeAttackSelectRankerDialog Size 904
// Inherited 888 bytes 
class UC_TimeAttackSelectRankerDialog : public UTimeAttackSelectRankerDialog
{

 public: 
	char pad_888[16];  // Offset: 888 Size: 16



 // Functions 
 public:
	void OnClickedPrevPageButton(int32_t InIndex); // Function KartDrift.C_TimeAttackSelectRankerDialog.OnClickedPrevPageButton
	void OnClickedNextPageButton(int32_t InIndex); // Function KartDrift.C_TimeAttackSelectRankerDialog.OnClickedNextPageButton
	void OnClickedGamerCardButton(int32_t InIndex); // Function KartDrift.C_TimeAttackSelectRankerDialog.OnClickedGamerCardButton
}; 
 
 


//Class KartDrift.C_LiveryReportViewerPageWidget Size 808
// Inherited 808 bytes 
class UC_LiveryReportViewerPageWidget : public ULiveryReportViewerPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcInviteToParty Size 96
// Inherited 48 bytes 
class UPcInviteToParty : public UPcPacket
{

 public: 
	struct FString TargetAccountId;  // Offset: 48 Size: 16
	struct FKtAsyncRequestId arid;  // Offset: 64 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EffectControllerComponent Size 320
// Inherited 176 bytes 
class UEffectControllerComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct TSoftObjectPtr<UForceFeedbackCrashLevelDataAsset> ForceFeedbackDataAssetPtr;  // Offset: 200 Size: 40
	struct UForceFeedbackCrashLevelDataAsset* ForceFeedbackCrashLevelDataAsset;  // Offset: 240 Size: 8
	char pad_248[72];  // Offset: 248 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayReadyPageWidget Size 800
// Inherited 744 bytes 
class UReplayReadyPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[16];  // Offset: 744 Size: 16
	struct FString CurrentPlayingMediaAlias;  // Offset: 760 Size: 16
	char pad_776[24];  // Offset: 776 Size: 24



 // Functions 
 public:
	void OnClickedPresetButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.OnClickedPresetButton
	void OnClickedGameReplayButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.OnClickedGameReplayButton
	void OnClickedGamePlayButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.OnClickedGamePlayButton
	void OnClickedChangeInfoButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.OnClickedChangeInfoButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.OnClickedBackButton
	void InfoModifyDialog_OnTitleEditBoxTextChanged(struct FText& Text); // Function KartDrift.ReplayReadyPageWidget.InfoModifyDialog_OnTitleEditBoxTextChanged
	void InfoModifyDialog_OnDescriptionEditBoxTextChanged(struct FText& Text); // Function KartDrift.ReplayReadyPageWidget.InfoModifyDialog_OnDescriptionEditBoxTextChanged
	void InfoModifyDialog_OnClickedConfirmButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.InfoModifyDialog_OnClickedConfirmButton
	void InfoModifyDialog_OnClickedBackButton(int32_t InIndex); // Function KartDrift.ReplayReadyPageWidget.InfoModifyDialog_OnClickedBackButton
}; 
 
 


//Class KartDrift.PqPartySetPlatformSession Size 80
// Inherited 56 bytes 
class UPqPartySetPlatformSession : public UPqPacket
{

 public: 
	struct FString sessionUri;  // Offset: 56 Size: 16
	enum class EKtAccountPlatform platform;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GrandPrixTierIconWidget Size 784
// Inherited 608 bytes 
class UGrandPrixTierIconWidget : public UUserWidget
{

 public: 
	struct UKdImage* TierImage;  // Offset: 608 Size: 8
	enum class EKtGrandPrixSubTier subTier;  // Offset: 616 Size: 1
	enum class EKtGrandPrixMainTier mainTier;  // Offset: 617 Size: 1
	char pad_618[6];  // Offset: 618 Size: 6
	struct TMap<enum class EKtGrandPrixSubTier, struct TSoftObjectPtr<UTexture2D>> SubTierIconContainer;  // Offset: 624 Size: 80
	struct TMap<enum class EKtGrandPrixMainTier, struct TSoftObjectPtr<UTexture2D>> MainTierIconContainer;  // Offset: 704 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddAndRemoveDashboard Size 80
// Inherited 72 bytes 
class UAddAndRemoveDashboard : public URuleObject
{

 public: 
	struct UAddDashboard* AddDashboard;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LobbyPageWidget Size 1072
// Inherited 744 bytes 
class ULobbyPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[24];  // Offset: 744 Size: 24
	struct TWeakObjectPtr<UDialogTemplate> LobbyPopup;  // Offset: 768 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> ShortcutMenuPopup;  // Offset: 776 Size: 8
	char pad_784[16];  // Offset: 784 Size: 16
	UUserWidget* NameTagWidgetClass;  // Offset: 800 Size: 8
	UUserWidget* EmoticonBalloonWidgetClass;  // Offset: 808 Size: 8
	char pad_816[248];  // Offset: 816 Size: 248
	float PawnRotationSpeed;  // Offset: 1064 Size: 4
	char pad_1068[4];  // Offset: 1068 Size: 4



 // Functions 
 public:
	void UpdateRiderInfo(); // Function KartDrift.LobbyPageWidget.UpdateRiderInfo
	void SetEnableReadyAndCancel(bool bEnable); // Function KartDrift.LobbyPageWidget.SetEnableReadyAndCancel
	void OnVoiceChatOnOffButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnVoiceChatOnOffButtonClicked
	void OnUpdateWaitMaintenanceTimer(); // Function KartDrift.LobbyPageWidget.OnUpdateWaitMaintenanceTimer
	void OnUpdateVoiceChatOnOffButton(); // Function KartDrift.LobbyPageWidget.OnUpdateVoiceChatOnOffButton
	void OnUpdateStartButton(); // Function KartDrift.LobbyPageWidget.OnUpdateStartButton
	void OnUpdateSeasonUI(); // Function KartDrift.LobbyPageWidget.OnUpdateSeasonUI
	void OnUpdateSeasonAlarm(bool IsNewSeasonOpen); // Function KartDrift.LobbyPageWidget.OnUpdateSeasonAlarm
	void OnUpdateRiderInfo(enum class EUserLevelUpdatedType InType, int32_t InLevel); // Function KartDrift.LobbyPageWidget.OnUpdateRiderInfo
	void OnUpdateQuickMatchButton(); // Function KartDrift.LobbyPageWidget.OnUpdateQuickMatchButton
	void OnUpdateMatchingTimer(); // Function KartDrift.LobbyPageWidget.OnUpdateMatchingTimer
	void OnUpdateLucci(int32_t lucci); // Function KartDrift.LobbyPageWidget.OnUpdateLucci
	void OnUpdateLobbyPawnNameTag(); // Function KartDrift.LobbyPageWidget.OnUpdateLobbyPawnNameTag
	void OnUpdateKcoin(int32_t Kcoin); // Function KartDrift.LobbyPageWidget.OnUpdateKcoin
	void OnUpdateEmoticonWidget(struct FString accountId, enum class EOutGamePawnType LobbyPawnType, struct FString EmoticonItemId); // Function KartDrift.LobbyPageWidget.OnUpdateEmoticonWidget
	void OnUpdateDeviceInfoPanel(); // Function KartDrift.LobbyPageWidget.OnUpdateDeviceInfoPanel
	void OnSwitchDefaultOverlay(); // Function KartDrift.LobbyPageWidget.OnSwitchDefaultOverlay
	void OnStaffButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnStaffButtonClicked
	void OnSocialButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnSocialButtonClicked
	void OnShowStaffCreditsDialog(); // Function KartDrift.LobbyPageWidget.OnShowStaffCreditsDialog
	void OnShowShortcutMenuButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnShowShortcutMenuButtonClicked
	void OnShowPopupGrandPrixCaution(); // Function KartDrift.LobbyPageWidget.OnShowPopupGrandPrixCaution
	void OnShowLobbyPopup(); // Function KartDrift.LobbyPageWidget.OnShowLobbyPopup
	void OnShowLatencyPopup(); // Function KartDrift.LobbyPageWidget.OnShowLatencyPopup
	void OnShowCommonMenuButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnShowCommonMenuButtonClicked
	void OnShortcutMenuCloseButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnShortcutMenuCloseButtonClicked
	void OnShortcutButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnShortcutButtonClicked
	void OnRemoveEmoticonWidget(struct AOutGamePawn* OutGamePawn, bool bVisible); // Function KartDrift.LobbyPageWidget.OnRemoveEmoticonWidget
	void OnQuitButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnQuitButtonClicked
	void OnQuickMatchingButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnQuickMatchingButtonClicked
	void OnPlayerVoiceChatStatus(int32_t InPlayerIndex, int32_t InVoiceStatus); // Function KartDrift.LobbyPageWidget.OnPlayerVoiceChatStatus
	void OnMissionStatUpdated(); // Function KartDrift.LobbyPageWidget.OnMissionStatUpdated
	void OnMicOnOffButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnMicOnOffButtonClicked
	void OnLucciButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnLucciButtonClicked
	void OnKcoinButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnKcoinButtonClicked
	void OnFinishedStartTrophyAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedStartTrophyAnim
	void OnFinishedStartGiftBoxAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedStartGiftBoxAnim
	void OnFinishedPremiumEndTrophyAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedPremiumEndTrophyAnim
	void OnFinishedPremiumCompleteAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedPremiumCompleteAnim
	void OnFinishedNormalEndTrophyAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedNormalEndTrophyAnim
	void OnFinishedNormalCompleteAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedNormalCompleteAnim
	void OnFinishedMatchingComopleteAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedMatchingComopleteAnim
	void OnFinishedEventCompleteAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedEventCompleteAnim
	void OnFinishedChangePremiumChallengeAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedChangePremiumChallengeAnim
	void OnFinishedChangeNormalChallengeAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedChangeNormalChallengeAnim
	void OnFinishedChangeEventChallengeAnim(); // Function KartDrift.LobbyPageWidget.OnFinishedChangeEventChallengeAnim
	void OnEnableReadyAndCancel(); // Function KartDrift.LobbyPageWidget.OnEnableReadyAndCancel
	void OnEmoticonButtonClicked(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnEmoticonButtonClicked
	void OnClickedStartOrCancelButton(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedStartOrCancelButton
	void OnClickedPreviousTab(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedPreviousTab
	void OnClickedNextTab(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedNextTab
	void OnClickedLiveryReportVewerButton(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedLiveryReportVewerButton
	void OnClickedLicenseNoticePopupMoveLicense(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedLicenseNoticePopupMoveLicense
	void OnClickedConfirmButtonInLoginEventPopup(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedConfirmButtonInLoginEventPopup
	void OnClickedConfirmButtonInitalRewardPopup(); // Function KartDrift.LobbyPageWidget.OnClickedConfirmButtonInitalRewardPopup
	void OnClickedConfirmButtonInAttendaceEventPopup(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedConfirmButtonInAttendaceEventPopup
	void OnClickedChallengeToggleButton(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedChallengeToggleButton
	void OnClickedChallengeButton(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedChallengeButton
	void OnClickedBackgroundButtonInAchievementCompletedPopup(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedBackgroundButtonInAchievementCompletedPopup
	void OnClickedBackButtonInGrandPrixFinalResultPopup(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedBackButtonInGrandPrixFinalResultPopup
	void OnClickedBackButtonInAttendaceEventPopup(int32_t InIndex); // Function KartDrift.LobbyPageWidget.OnClickedBackButtonInAttendaceEventPopup
	void OnCharacterOnOffKart(bool bGetOnKart); // Function KartDrift.LobbyPageWidget.OnCharacterOnOffKart
	void OnChangeChallengeList(); // Function KartDrift.LobbyPageWidget.OnChangeChallengeList
	void OnChallengeListScrollableChanged(bool bScrollable); // Function KartDrift.LobbyPageWidget.OnChallengeListScrollableChanged
	void OnAnimationFinishedInAchievementCompletedPopup(); // Function KartDrift.LobbyPageWidget.OnAnimationFinishedInAchievementCompletedPopup
	void CloseLobbyPopup(int32_t ButtonIndex); // Function KartDrift.LobbyPageWidget.CloseLobbyPopup
}; 
 
 


//Class KartDrift.PcBreakParty Size 56
// Inherited 48 bytes 
class UPcBreakParty : public UPcPacket
{

 public: 
	char pad_48_1 : 7;  // Offset: 48 Size: 1
	bool bTimeOut : 1;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LootBoxPawn Size 1256
// Inherited 1256 bytes 
class ALootBoxPawn : public AOutGamePawn
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRiderNameChangeConfirm Size 56
// Inherited 56 bytes 
class UPqRiderNameChangeConfirm : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrPiggy Size 232
// Inherited 72 bytes 
class UPrPiggy : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FKtPiggy> piggy;  // Offset: 72 Size: 80
	struct TMap<struct FString, struct FKtPiggyState> piggyState;  // Offset: 152 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPartyChange Size 480
// Inherited 48 bytes 
class UPcPartyChange : public UPcPacket
{

 public: 
	struct FString accountId;  // Offset: 48 Size: 16
	struct FString riderName;  // Offset: 64 Size: 16
	struct FKtAccountProfile Profile;  // Offset: 80 Size: 96
	int32_t joinId;  // Offset: 176 Size: 4
	int32_t State;  // Offset: 180 Size: 4
	char pad_184_1 : 7;  // Offset: 184 Size: 1
	bool partyBoss : 1;  // Offset: 184 Size: 1
	char pad_185[7];  // Offset: 185 Size: 7
	struct FString PartyId;  // Offset: 192 Size: 16
	struct FString vivoxChannelName;  // Offset: 208 Size: 16
	struct FString vivoxJoinToken;  // Offset: 224 Size: 16
	struct FString vivoxTranscriptionToken;  // Offset: 240 Size: 16
	char pad_256_1 : 7;  // Offset: 256 Size: 1
	bool ready : 1;  // Offset: 256 Size: 1
	char pad_257[7];  // Offset: 257 Size: 7
	struct FKtItemPreview itemPreview;  // Offset: 264 Size: 168
	struct FString clientStage;  // Offset: 432 Size: 16
	struct FString clientStageParam;  // Offset: 448 Size: 16
	struct FString liverySignedUrl;  // Offset: 464 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PresetLogicComponent Size 328
// Inherited 224 bytes 
class UPresetLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[32];  // Offset: 224 Size: 32
	struct TArray<struct TWeakObjectPtr<AOutGamePawn>> SpawnedItemPresetPawns;  // Offset: 256 Size: 16
	char pad_272[56];  // Offset: 272 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPartyInviteRefused Size 104
// Inherited 48 bytes 
class UPcPartyInviteRefused : public UPcPacket
{

 public: 
	struct FString accountId;  // Offset: 48 Size: 16
	struct FString riderName;  // Offset: 64 Size: 16
	struct FString PartyId;  // Offset: 80 Size: 16
	char pad_96_1 : 7;  // Offset: 96 Size: 1
	bool isJoinFailed : 1;  // Offset: 96 Size: 1
	char pad_97[3];  // Offset: 97 Size: 3
	enum class EPartyJoinFailReason failReason;  // Offset: 100 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCouponUse Size 80
// Inherited 56 bytes 
class UPqCouponUse : public UPqPacket
{

 public: 
	struct FString couponId;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool useForce : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartSkillLogicComponent Size 464
// Inherited 224 bytes 
class UKartSkillLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[240];  // Offset: 224 Size: 240



 // Functions 
 public:
	void OnUpdateKartSkillTree(); // Function KartDrift.KartSkillLogicComponent.OnUpdateKartSkillTree
	void OnUpdateKartSkillParam(); // Function KartDrift.KartSkillLogicComponent.OnUpdateKartSkillParam
	void OnUpdateKartSkillNode(int32_t InIndex, bool bSucceed); // Function KartDrift.KartSkillLogicComponent.OnUpdateKartSkillNode
	void OnUpdateKartExp(struct FString KartID, int32_t UpdatedExp); // Function KartDrift.KartSkillLogicComponent.OnUpdateKartExp
	void OnUpdateKartBodyParam(); // Function KartDrift.KartSkillLogicComponent.OnUpdateKartBodyParam
	void OnKartSkillFailed(enum class EPrKartSkillResult InResultCode); // Function KartDrift.KartSkillLogicComponent.OnKartSkillFailed
	void OnFinishedPageEntryAnimation(); // Function KartDrift.KartSkillLogicComponent.OnFinishedPageEntryAnimation
	void OnClosedInsufficientKoinWarningDialog(int32_t InIndex); // Function KartDrift.KartSkillLogicComponent.OnClosedInsufficientKoinWarningDialog
	void OnActivatePageWidget(bool bActivate); // Function KartDrift.KartSkillLogicComponent.OnActivatePageWidget
}; 
 
 


//Class KartDrift.SpectatorComponent Size 320
// Inherited 176 bytes 
class USpectatorComponent : public UActorComponent
{

 public: 
	char pad_176[128];  // Offset: 176 Size: 128
	struct TArray<struct AKdPawn*> RaceRankList;  // Offset: 304 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForcePlayBGMRule Size 72
// Inherited 72 bytes 
class UForcePlayBGMRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.JumpZone Size 592
// Inherited 576 bytes 
class AJumpZone : public AKdTriggerBox
{

 public: 
	float UpPower;  // Offset: 576 Size: 4
	float FrontPower;  // Offset: 580 Size: 4
	float Multiplier;  // Offset: 584 Size: 4
	char pad_588[4];  // Offset: 588 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPartyJoinFail Size 88
// Inherited 48 bytes 
class UPcPartyJoinFail : public UPcPacket
{

 public: 
	enum class EPartyJoinFailReason failReason;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4
	struct FString bossAccountId;  // Offset: 56 Size: 16
	struct FString bossRiderName;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SequencerEquipData Size 352
// Inherited 48 bytes 
class USequencerEquipData : public UDataAsset
{

 public: 
	char pad_48_1 : 7;  // Offset: 48 Size: 1
	bool bUseDummy : 1;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	struct FLinearColor DummyColor;  // Offset: 52 Size: 16
	char pad_68[4];  // Offset: 68 Size: 4
	struct FKartDesc KartDesc;  // Offset: 72 Size: 184
	struct FCharacterDesc CharacterDesc;  // Offset: 256 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqReadyGame Size 64
// Inherited 56 bytes 
class UPqReadyGame : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool ready : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAwsLatencyInfo Size 72
// Inherited 56 bytes 
class UPqAwsLatencyInfo : public UPqPacket
{

 public: 
	struct TArray<struct FAwsLatencyInfo> awsLatencyInfoList;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqQueryAccountMultiplayState Size 72
// Inherited 56 bytes 
class UPqQueryAccountMultiplayState : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetBack Size 184
// Inherited 144 bytes 
class UBelongingDataAssetBack : public UBelongingDataAssetKartParts
{

 public: 
	struct TSoftObjectPtr<UParticleSystem> TransformBooster;  // Offset: 144 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrUserInfo Size 384
// Inherited 72 bytes 
class UPrUserInfo : public UPrPacket
{

 public: 
	struct FKtUserInfoView Info;  // Offset: 72 Size: 304
	char pad_376_1 : 7;  // Offset: 376 Size: 1
	bool login : 1;  // Offset: 376 Size: 1
	char pad_377[7];  // Offset: 377 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrQueryAccountMultiplayState Size 104
// Inherited 72 bytes 
class UPrQueryAccountMultiplayState : public UPrPacket
{

 public: 
	struct FString PartyId;  // Offset: 72 Size: 16
	struct FString customGameId;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPhysicalMaterial Size 176
// Inherited 128 bytes 
class UKdPhysicalMaterial : public UPhysicalMaterial
{

 public: 
	struct UParticleSystem* LeftParticle;  // Offset: 128 Size: 8
	struct UParticleSystem* RightParticle;  // Offset: 136 Size: 8
	struct UParticleSystem* CenterParticle;  // Offset: 144 Size: 8
	struct UFMODEvent* Sound;  // Offset: 152 Size: 8
	struct FName ForceFeedbackName;  // Offset: 160 Size: 8
	enum class EDriveMode TrackSurfaceType;  // Offset: 168 Size: 1
	char pad_169[3];  // Offset: 169 Size: 3
	float AdditionalDragForce_PM;  // Offset: 172 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdWidgetLibrary Size 40
// Inherited 40 bytes 
class UKdWidgetLibrary : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemGimmickInterface Size 40
// Inherited 40 bytes 
class UItemGimmickInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqNGSReply Size 72
// Inherited 56 bytes 
class UPqNGSReply : public UPqPacket
{

 public: 
	struct FString Data;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcRaceResult Size 136
// Inherited 48 bytes 
class UPcRaceResult : public UPcPacket
{

 public: 
	struct FString gameId;  // Offset: 48 Size: 16
	struct FRaceGameResult Result;  // Offset: 64 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseTimerWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseTimerWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseTimerWidgetClass;  // Offset: 72 Size: 40
	float TotalTime;  // Offset: 112 Size: 4
	char pad_116[4];  // Offset: 116 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandUpdateQuest Size 72
// Inherited 72 bytes 
class UPqCommandUpdateQuest : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitializeTimeAttackPauseMenu Size 112
// Inherited 72 bytes 
class UInitializeTimeAttackPauseMenu : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> PauseMenuWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AchievementSummaryDialog Size 864
// Inherited 816 bytes 
class UAchievementSummaryDialog : public UDialogTemplate
{

 public: 
	char pad_816[48];  // Offset: 816 Size: 48



 // Functions 
 public:
	void OnClickedSummaryTypeButton(int32_t InIndex); // Function KartDrift.AchievementSummaryDialog.OnClickedSummaryTypeButton
	void OnClickedSelectButton(int32_t InIndex); // Function KartDrift.AchievementSummaryDialog.OnClickedSelectButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.AchievementSummaryDialog.OnClickedBackButton
	void OnAchievementClickedSummaryTypeButton(int32_t InIndex); // Function KartDrift.AchievementSummaryDialog.OnAchievementClickedSummaryTypeButton
}; 
 
 


//Class KartDrift.PqTimeAttackUpdate Size 112
// Inherited 56 bytes 
class UPqTimeAttackUpdate : public UPqPacket
{

 public: 
	struct FKtTimeAttack timeAttack;  // Offset: 56 Size: 40
	enum class ETimeAttackStatus status;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4
	struct FDateTime StartTime;  // Offset: 104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionStartRace Size 48
// Inherited 48 bytes 
class UKtSessionStartRace : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseIceBallQuestWidgetInst Size 632
// Inherited 608 bytes 
class ULicenseIceBallQuestWidgetInst : public UUserWidget
{

 public: 
	struct UKdTextBlock* TxtNumberClear;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Idle;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_Destroy;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SoundControllerComponent Size 200
// Inherited 176 bytes 
class USoundControllerComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandResetAchievement Size 72
// Inherited 72 bytes 
class UPqCommandResetAchievement : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDataAssetLoadRule Size 120
// Inherited 72 bytes 
class ULicenseDataAssetLoadRule : public URuleObject
{

 public: 
	char pad_72[8];  // Offset: 72 Size: 8
	struct ULicenseDataAsset* LicenseDataAsset;  // Offset: 80 Size: 8
	struct TArray<struct ULicenseContents*> LicenseContents;  // Offset: 88 Size: 16
	char pad_104[16];  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultPlayerWidget Size 1152
// Inherited 608 bytes 
class UMajorResultPlayerWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* V_CenterBGSwitcher;  // Offset: 608 Size: 8
	struct UWidgetSwitcher* V_RankBGSwitcher;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* V_TailBGSwitcher;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_Rank;  // Offset: 632 Size: 8
	struct UPlatformIconWidget* V_PlatformIconWidget;  // Offset: 640 Size: 8
	struct UKdTextBlock* V_PlayerID;  // Offset: 648 Size: 8
	struct UImage* V_BeginnerCareIcon;  // Offset: 656 Size: 8
	struct UKdTextBlock* V_LevelCharacter;  // Offset: 664 Size: 8
	struct UWidgetSwitcher* V_ExpSwitcher;  // Offset: 672 Size: 8
	struct UKdTextBlock* V_CharacterLevelUpInfo;  // Offset: 680 Size: 8
	struct UKdTextBlock* V_RpAdd;  // Offset: 688 Size: 8
	struct UKdTextBlock* V_LapTime;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_LapTimeDiff;  // Offset: 704 Size: 8
	struct UImage* V_Clock;  // Offset: 712 Size: 8
	struct UKdTextBlock* V_KartLevel;  // Offset: 720 Size: 8
	struct UKdTextBlock* V_KartName;  // Offset: 728 Size: 8
	struct UKdImage* V_KartGradeBg;  // Offset: 736 Size: 8
	struct UKdTextBlock* V_KartGrade;  // Offset: 744 Size: 8
	struct UKdTextBlock* V_KartLevelUpInfo;  // Offset: 752 Size: 8
	struct UKdTextBlock* V_TeamPoint;  // Offset: 760 Size: 8
	struct UMajorResultProgressWidget* V_MajorResultProgressWidget_Player;  // Offset: 768 Size: 8
	struct UMajorResultProgressWidget* V_MajorResultProgressWidget_Kart;  // Offset: 776 Size: 8
	struct UWidgetSwitcher* V_LucciSwitcher;  // Offset: 784 Size: 8
	struct UKdTextBlock* V_Lucci;  // Offset: 792 Size: 8
	struct UWidget* V_GrandPrixSB;  // Offset: 800 Size: 8
	struct UWidget* V_GrandPrixHB;  // Offset: 808 Size: 8
	struct UGrandPrixTierIconWidget* V_GrandPrixTierIcon;  // Offset: 816 Size: 8
	struct UWidgetSwitcher* V_GppSwitcher;  // Offset: 824 Size: 8
	struct UMajorResultProgressWidget* V_MajorResultProgressWidget_GrandPrix;  // Offset: 832 Size: 8
	struct UMajorResultProgressWidget* V_MajorResultProgressWidget_GrandPrix_Subtract;  // Offset: 840 Size: 8
	struct UKdTextBlock* V_AddGpp;  // Offset: 848 Size: 8
	struct UKdTextBlock* V_SubtractGpp;  // Offset: 856 Size: 8
	struct TMap<enum class ERaceTeamType, int32_t> BackGroundIndex;  // Offset: 864 Size: 80
	struct TMap<enum class ERaceTeamType, struct FLinearColor> TeamColor;  // Offset: 944 Size: 80
	struct UImage* V_RankBackground;  // Offset: 1024 Size: 8
	struct UImage* V_Background;  // Offset: 1032 Size: 8
	struct UImage* V_TailBackground;  // Offset: 1040 Size: 8
	char pad_1048[104];  // Offset: 1048 Size: 104



 // Functions 
 public:
	void OnExpLevelUpSwitchTick(); // Function KartDrift.MajorResultPlayerWidget.OnExpLevelUpSwitchTick
}; 
 
 


//Class KartDrift.M_LobbyPageWidget Size 1080
// Inherited 1072 bytes 
class UM_LobbyPageWidget : public ULobbyPageWidget
{

 public: 
	char pad_1072[8];  // Offset: 1072 Size: 8



 // Functions 
 public:
	void ShowMyKcoinPopup(int32_t InIndex); // Function KartDrift.M_LobbyPageWidget.ShowMyKcoinPopup
	void OnCloseMyKcoinPopup(int32_t InIndex); // Function KartDrift.M_LobbyPageWidget.OnCloseMyKcoinPopup
}; 
 
 


//Class KartDrift.PqDevGetLiveParam Size 56
// Inherited 56 bytes 
class UPqDevGetLiveParam : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrDevGetLiveParam Size 88
// Inherited 72 bytes 
class UPrDevGetLiveParam : public UPrPacket
{

 public: 
	struct FString Value;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetTrophy Size 56
// Inherited 56 bytes 
class UPqGetTrophy : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_ProfileEditPageWidget Size 832
// Inherited 832 bytes 
class UC_ProfileEditPageWidget : public UProfileEditPageWidget
{

 public: 



 // Functions 
 public:
	void OnClickedTagTab(int32_t InIndex); // Function KartDrift.C_ProfileEditPageWidget.OnClickedTagTab
	void OnClickedEmblemTab(int32_t InIndex); // Function KartDrift.C_ProfileEditPageWidget.OnClickedEmblemTab
}; 
 
 


//Class KartDrift.PrGetTrophy Size 80
// Inherited 72 bytes 
class UPrGetTrophy : public UPrPacket
{

 public: 
	int32_t accumTrophy;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivatePauseMenu Size 72
// Inherited 72 bytes 
class UActivatePauseMenu : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayBGMRule Size 72
// Inherited 72 bytes 
class UPlayBGMRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPurchaseTier Size 64
// Inherited 56 bytes 
class UPqPurchaseTier : public UPqPacket
{

 public: 
	int32_t tierCount;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthComplete Size 56
// Inherited 56 bytes 
class UPqAuthComplete : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionFinishRace Size 144
// Inherited 48 bytes 
class UKtSessionFinishRace : public UKxObject
{

 public: 
	struct TArray<struct FKtSessionRaceResultPlayer> players;  // Offset: 48 Size: 16
	struct TArray<struct FKtSessionRaceResultTeam> teams;  // Offset: 64 Size: 16
	struct FKtSessionRaceResultCommon common;  // Offset: 80 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrPurchaseTier Size 80
// Inherited 72 bytes 
class UPrPurchaseTier : public UPrPacket
{

 public: 
	int32_t PurchaseStatus;  // Offset: 72 Size: 4
	int32_t accumTrophy;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopWalletPageUrlNxA Size 88
// Inherited 72 bytes 
class UPrShopWalletPageUrlNxA : public UPrPacket
{

 public: 
	struct FString URL;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlaySinglePodiumSequence Size 72
// Inherited 72 bytes 
class UPlaySinglePodiumSequence : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetSeasonPass Size 56
// Inherited 56 bytes 
class UPqGetSeasonPass : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqMyInfo Size 56
// Inherited 56 bytes 
class UPqMyInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrReportLiverySticker Size 112
// Inherited 72 bytes 
class UPrReportLiverySticker : public UPrPacket
{

 public: 
	struct FString npsn;  // Offset: 72 Size: 16
	struct FString liveryStickerId;  // Offset: 88 Size: 16
	enum class EKtLiveryState State;  // Offset: 104 Size: 1
	char pad_105[7];  // Offset: 105 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetSeasonPass Size 80
// Inherited 72 bytes 
class UPrGetSeasonPass : public UPrPacket
{

 public: 
	int32_t seasonPass;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRiderNameChangeReserve Size 88
// Inherited 72 bytes 
class UPrRiderNameChangeReserve : public UPrPacket
{

 public: 
	struct FString NotSupportedLetter;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPurchaseSeasonPass Size 56
// Inherited 56 bytes 
class UPqPurchaseSeasonPass : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_BeginRace_ByTimer Size 88
// Inherited 80 bytes 
class UTransition_BeginRace_ByTimer : public URaceGameTransition
{

 public: 
	float TotalTime;  // Offset: 80 Size: 4
	char pad_84[4];  // Offset: 84 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcLevelUpdated Size 56
// Inherited 48 bytes 
class UPcLevelUpdated : public UPcPacket
{

 public: 
	int32_t Level;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FuncLib_Table Size 40
// Inherited 40 bytes 
class UFuncLib_Table : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSkeletalMeshActor Size 680
// Inherited 680 bytes 
class AKdSkeletalMeshActor : public ASkeletalMeshActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGameSessionPlayer Size 72
// Inherited 40 bytes 
class UKdGameSessionPlayer : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16
	struct TArray<struct UObject*> Prop;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedGuideDialog Size 944
// Inherited 816 bytes 
class USpeedGuideDialog : public UDialogTemplate
{

 public: 
	struct TArray<struct FText> TipTexts;  // Offset: 816 Size: 16
	struct TArray<float> TipTextStartSeconds;  // Offset: 832 Size: 16
	struct TArray<float> TipTextEndSeconds;  // Offset: 848 Size: 16
	struct TArray<struct FName> TipStartAnims;  // Offset: 864 Size: 16
	struct FName TipEndAnim;  // Offset: 880 Size: 8
	struct FName OpenedAnim;  // Offset: 888 Size: 8
	struct FName EndReachedAnim;  // Offset: 896 Size: 8
	float EndReachedAnimOffset;  // Offset: 904 Size: 4
	float TotalMediaTime;  // Offset: 908 Size: 4
	char pad_912_1 : 7;  // Offset: 912 Size: 1
	bool bMustWatchVideoItTheEnd : 1;  // Offset: 912 Size: 1
	char pad_913[31];  // Offset: 913 Size: 31



 // Functions 
 public:
	void OnClickedSpeedGuideConfirm(int32_t InIndex); // Function KartDrift.SpeedGuideDialog.OnClickedSpeedGuideConfirm
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.SpeedGuideDialog.OnClickedBackButton
}; 
 
 


//Class KartDrift.PcTierUpdated Size 88
// Inherited 48 bytes 
class UPcTierUpdated : public UPcPacket
{

 public: 
	struct FKtSeasonInfo seasonInfo;  // Offset: 48 Size: 32
	int32_t fromTier;  // Offset: 80 Size: 4
	int32_t toTier;  // Offset: 84 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAccountUnlink Size 56
// Inherited 56 bytes 
class UPqAccountUnlink : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SmsDebug Size 320
// Inherited 56 bytes 
class USmsDebug : public USmsProvider
{

 public: 
	char pad_56[32];  // Offset: 56 Size: 32
	struct UHttpServerRequester* SessionApiServer;  // Offset: 88 Size: 8
	char pad_96[104];  // Offset: 96 Size: 104
	struct TMap<struct FString, struct UObject*> SmsPlayers;  // Offset: 200 Size: 80
	char pad_280[16];  // Offset: 280 Size: 16
	struct UObject* GameSessionRequest;  // Offset: 296 Size: 8
	char pad_304[16];  // Offset: 304 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackDataHelper Size 40
// Inherited 40 bytes 
class UTimeAttackDataHelper : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcPermissionUpdate Size 56
// Inherited 48 bytes 
class UPcPermissionUpdate : public UPcPacket
{

 public: 
	struct FKtPermissionData permission;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountUnlink Size 80
// Inherited 72 bytes 
class UPrAccountUnlink : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bSucceed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseTutorialEndRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseTutorialEndRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LootBoxPageWidget Size 880
// Inherited 744 bytes 
class ULootBoxPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[136];  // Offset: 744 Size: 136



 // Functions 
 public:
	void OnStopOrCompleteContinualOpen(); // Function KartDrift.LootBoxPageWidget.OnStopOrCompleteContinualOpen
	void OnStageDefaultIn(); // Function KartDrift.LootBoxPageWidget.OnStageDefaultIn
	void OnSingleOpenResultIn(); // Function KartDrift.LootBoxPageWidget.OnSingleOpenResultIn
	void OnReqeustOpen(); // Function KartDrift.LootBoxPageWidget.OnReqeustOpen
	void OnRefreshLootBoxMainWidget(); // Function KartDrift.LootBoxPageWidget.OnRefreshLootBoxMainWidget
	void OnPreviousBox(); // Function KartDrift.LootBoxPageWidget.OnPreviousBox
	void OnOpenFailed(); // Function KartDrift.LootBoxPageWidget.OnOpenFailed
	void OnNextBox(); // Function KartDrift.LootBoxPageWidget.OnNextBox
	void OnDetailViewButtonClicked(int32_t Btn_Index); // Function KartDrift.LootBoxPageWidget.OnDetailViewButtonClicked
	void OnDetailButtonFocused(int32_t Btn_Index); // Function KartDrift.LootBoxPageWidget.OnDetailButtonFocused
	void OnContinualResultIn(); // Function KartDrift.LootBoxPageWidget.OnContinualResultIn
}; 
 
 


//Class KartDrift.AnimNotifyState_GetOffTheKart Size 64
// Inherited 48 bytes 
class UAnimNotifyState_GetOffTheKart : public UAnimNotifyState
{

 public: 
	enum class EInterpolationType InterpolationType;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	float Exponential;  // Offset: 52 Size: 4
	char pad_56[8];  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountUnlinkAll Size 72
// Inherited 72 bytes 
class UPrAccountUnlinkAll : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DeliveryBuff Size 64
// Inherited 40 bytes 
class UDeliveryBuff : public UKartMovementBuff
{

 public: 
	char pad_40[24];  // Offset: 40 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceTimeComponent Size 280
// Inherited 176 bytes 
class URaceTimeComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct FMulticastInlineDelegate OnBeginRaceTimeChanged;  // Offset: 192 Size: 16
	char pad_208[72];  // Offset: 208 Size: 72



 // Functions 
 public:
	float GetBeginRaceTime(); // Function KartDrift.RaceTimeComponent.GetBeginRaceTime
	float GetBeginGameTime(); // Function KartDrift.RaceTimeComponent.GetBeginGameTime
}; 
 
 


//Class KartDrift.PqAcquireMail Size 72
// Inherited 56 bytes 
class UPqAcquireMail : public UPqPacket
{

 public: 
	struct FString mailId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcNGSRequest Size 64
// Inherited 48 bytes 
class UPcNGSRequest : public UPcPacket
{

 public: 
	struct FString Data;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_BeginRace_TimeAttack_Restart Size 80
// Inherited 80 bytes 
class UTransition_BeginRace_TimeAttack_Restart : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAcceptCustomGameInvitation Size 184
// Inherited 48 bytes 
class UPcAcceptCustomGameInvitation : public UPcPacket
{

 public: 
	struct FString accountId;  // Offset: 48 Size: 16
	struct FKtAccountProfile Profile;  // Offset: 64 Size: 96
	struct FString InviterAccountId;  // Offset: 160 Size: 16
	enum class ECustomGameInvitationResult Result;  // Offset: 176 Size: 1
	char pad_177[7];  // Offset: 177 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetAccountPlatformDataKtByAccountId Size 152
// Inherited 72 bytes 
class UPrGetAccountPlatformDataKtByAccountId : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FAccountPlatformDataKt> accountPlatformDataKtMap;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomGamePageWidget Size 944
// Inherited 744 bytes 
class UCustomGamePageWidget : public UKdPageWidget
{

 public: 
	char pad_744[16];  // Offset: 744 Size: 16
	struct TWeakObjectPtr<UDialogTemplate> UserInfoPopup;  // Offset: 760 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> TrackChangeDialog;  // Offset: 768 Size: 8
	char pad_776[32];  // Offset: 776 Size: 32
	struct TWeakObjectPtr<UDialogTemplate> ModeChangeDialog;  // Offset: 808 Size: 8
	char pad_816[120];  // Offset: 816 Size: 120
	struct UFMODEvent* MatchingCompleteSound;  // Offset: 936 Size: 8



 // Functions 
 public:
	void OnVoiceChatOnOffButtonClicked(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnVoiceChatOnOffButtonClicked
	void OnShowCustomGameToastPopup(struct FText InTitleText, struct FText InContentText); // Function KartDrift.CustomGamePageWidget.OnShowCustomGameToastPopup
	void OnPlayerVoiceChatState(int32_t InCustomMemberIndex, int32_t InVoiceChatStatus); // Function KartDrift.CustomGamePageWidget.OnPlayerVoiceChatState
	void OnOpenSocialDialog(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnOpenSocialDialog
	void OnMoveToLicenseButtonClicked(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnMoveToLicenseButtonClicked
	void OnMicOnOffButtonClicked(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnMicOnOffButtonClicked
	void OnMainPageOpenedForcefully(); // Function KartDrift.CustomGamePageWidget.OnMainPageOpenedForcefully
	void OnFocusedUserInfo(int32_t UserSlotIndex); // Function KartDrift.CustomGamePageWidget.OnFocusedUserInfo
	void OnEmoticonButtonClicked(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnEmoticonButtonClicked
	void OnCustomGameUpdated(); // Function KartDrift.CustomGamePageWidget.OnCustomGameUpdated
	void OnClickedUserInfo(int32_t UserSlotIndex); // Function KartDrift.CustomGamePageWidget.OnClickedUserInfo
	void OnClickedLicenseMoveButtonInTrackChangeDialog(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedLicenseMoveButtonInTrackChangeDialog
	void OnClickedLicenseMoveButtonInModeChangeDialog(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedLicenseMoveButtonInModeChangeDialog
	void OnClickedCustomGameStartButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedCustomGameStartButton
	void OnClickedConfirmButtonUserInfoPopup(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedConfirmButtonUserInfoPopup
	void OnClickedChatButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedChatButton
	void OnClickedChangeTrackButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedChangeTrackButton
	void OnClickedChangePresetButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedChangePresetButton
	void OnClickedChangeModeButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedChangeModeButton
	void OnClickedBannedUserInviteButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedBannedUserInviteButton
	void OnClickedBackButtonInTrackChangeDialog(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedBackButtonInTrackChangeDialog
	void OnClickedBackButtonInModeChangeDialog(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedBackButtonInModeChangeDialog
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.CustomGamePageWidget.OnClickedBackButton
	void OnBannedUserInvited(); // Function KartDrift.CustomGamePageWidget.OnBannedUserInvited
	void MoveToLicenseFromTrackDialog(int32_t RequiredLicenseTypeIndex); // Function KartDrift.CustomGamePageWidget.MoveToLicenseFromTrackDialog
}; 
 
 


//Class KartDrift.PqGetAccountPlatformDataKtByXuid Size 72
// Inherited 56 bytes 
class UPqGetAccountPlatformDataKtByXuid : public UPqPacket
{

 public: 
	struct TArray<struct FString> xuidVector;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetAccountPlatformDataKtByXuid Size 152
// Inherited 72 bytes 
class UPrGetAccountPlatformDataKtByXuid : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FAccountPlatformDataKt> accountPlatformDataKtMap;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SingleModeLoadingImagePool Size 128
// Inherited 40 bytes 
class USingleModeLoadingImagePool : public UObject
{

 public: 
	char pad_40[88];  // Offset: 40 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WidgetLogicComponent Size 224
// Inherited 176 bytes 
class UWidgetLogicComponent : public UActorComponent
{

 public: 
	struct UKdPageWidget* PageWidget;  // Offset: 176 Size: 8
	char pad_184[16];  // Offset: 184 Size: 16
	struct TArray<struct UKeyIconWidget*> KeyIconWidgetList;  // Offset: 200 Size: 16
	char pad_216[8];  // Offset: 216 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShopNgm Size 200
// Inherited 200 bytes 
class UAccountShopNgm : public UAccountShopPlatform
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetAccountPlatformDataKtByPsnAccountId Size 72
// Inherited 56 bytes 
class UPqGetAccountPlatformDataKtByPsnAccountId : public UPqPacket
{

 public: 
	struct TArray<struct FString> psnAccountIdVector;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingAdvertisingWidget Size 648
// Inherited 608 bytes 
class ULoadingAdvertisingWidget : public UUserWidget
{

 public: 
	struct UImage* Image_Advertising;  // Offset: 608 Size: 8
	struct UTextBlock* TextBlock_Title;  // Offset: 616 Size: 8
	struct UTextBlock* TextBlock_Event;  // Offset: 624 Size: 8
	struct UTextBlock* TextBlock_ExpireDate;  // Offset: 632 Size: 8
	struct UTextBlock* TextBlock_Desc;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetAccountPlatformDataKtByPsnAccountId Size 152
// Inherited 72 bytes 
class UPrGetAccountPlatformDataKtByPsnAccountId : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FAccountPlatformDataKt> accountPlatformDataKtMap;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetLootBoxInfo Size 88
// Inherited 72 bytes 
class UPrGetLootBoxInfo : public UPrPacket
{

 public: 
	struct TArray<struct FKtLootBoxInfo> lootBoxInfoVector;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_MailPageWidget Size 776
// Inherited 768 bytes 
class UM_MailPageWidget : public UMailPageWidget
{

 public: 
	char pad_768[8];  // Offset: 768 Size: 8



 // Functions 
 public:
	void OnClickedDeleteButton(int32_t InIndex); // Function KartDrift.M_MailPageWidget.OnClickedDeleteButton
	void Mail_OnClickedShowCommunity(int32_t InIndex); // Function KartDrift.M_MailPageWidget.Mail_OnClickedShowCommunity
}; 
 
 


//Class KartDrift.BelongingDataAssetSkidMark Size 144
// Inherited 64 bytes 
class UBelongingDataAssetSkidMark : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<UMaterialInstance> SkidMarkMaterial;  // Offset: 64 Size: 40
	struct TSoftObjectPtr<UParticleSystem> SkidSmokeParticle;  // Offset: 104 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_LicensePageWidget Size 960
// Inherited 944 bytes 
class UM_LicensePageWidget : public ULicensePageWidget
{

 public: 
	char pad_944[16];  // Offset: 944 Size: 16



 // Functions 
 public:
	void OnClickedRewardListButton(int32_t InIndex); // Function KartDrift.M_LicensePageWidget.OnClickedRewardListButton
}; 
 
 


//Class KartDrift.HideUICheatComponent Size 176
// Inherited 176 bytes 
class UHideUICheatComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqConsoleBlockList Size 96
// Inherited 56 bytes 
class UPqConsoleBlockList : public UPqPacket
{

 public: 
	enum class EKtAccountPlatform platform;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7
	struct TArray<struct FString> addedIdList;  // Offset: 64 Size: 16
	struct TArray<struct FString> removedIdList;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGfsTicket Size 56
// Inherited 56 bytes 
class UPqGfsTicket : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGfsTicket Size 168
// Inherited 72 bytes 
class UPrGfsTicket : public UPrPacket
{

 public: 
	struct FString gfsServerUrl;  // Offset: 72 Size: 16
	struct FString tokenType;  // Offset: 88 Size: 16
	struct FString gfsTicket;  // Offset: 104 Size: 16
	struct FString productId;  // Offset: 120 Size: 16
	struct FString PlatformType;  // Offset: 136 Size: 16
	struct FString platformNickname;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePhaseComponent Size 432
// Inherited 432 bytes 
class ULicensePhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTimeAttackStart Size 96
// Inherited 72 bytes 
class UPrTimeAttackStart : public UPrPacket
{

 public: 
	struct FString trackId;  // Offset: 72 Size: 16
	struct FDateTime StartTime;  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdLevelSequencePlayer Size 1576
// Inherited 1536 bytes 
class UKdLevelSequencePlayer : public ULevelSequencePlayer
{

 public: 
	float BlendTime;  // Offset: 1536 Size: 4
	char pad_1540[4];  // Offset: 1540 Size: 4
	enum class EMovieSceneBuiltInEasing BlendType;  // Offset: 1544 Size: 1
	char pad_1545[31];  // Offset: 1545 Size: 31



 // Functions 
 public:
	void OnSequenceFinished(); // Function KartDrift.KdLevelSequencePlayer.OnSequenceFinished
}; 
 
 


//Class KartDrift.PrTimeAttackUpdate Size 296
// Inherited 72 bytes 
class UPrTimeAttackUpdate : public UPrPacket
{

 public: 
	struct FKtTimeAttack timeAttack;  // Offset: 72 Size: 40
	char pad_112_1 : 7;  // Offset: 112 Size: 1
	bool isUpdated : 1;  // Offset: 112 Size: 1
	char pad_113[7];  // Offset: 113 Size: 7
	struct FKtDataStorePayload dataStoreLink;  // Offset: 120 Size: 160
	struct FPlayLucciReward lucci;  // Offset: 280 Size: 12
	char pad_292[4];  // Offset: 292 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlatformEventsComponent Size 368
// Inherited 176 bytes 
class UKdPlatformEventsComponent : public UActorComponent
{

 public: 
	char pad_176[192];  // Offset: 176 Size: 192



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayRetireBGM Size 72
// Inherited 72 bytes 
class UPlayRetireBGM : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTimeAttackRegistReplay Size 72
// Inherited 56 bytes 
class UPqTimeAttackRegistReplay : public UPqPacket
{

 public: 
	struct FString timeAttackUniqueId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_GoItemBullet Size 96
// Inherited 48 bytes 
class UAnimNotifyState_GoItemBullet : public UAnimNotifyState
{

 public: 
	AActor* PreviewActorClass;  // Offset: 48 Size: 8
	struct FName SocketName;  // Offset: 56 Size: 8
	struct FVector LocationOffset;  // Offset: 64 Size: 12
	struct FRotator RotationOffset;  // Offset: 76 Size: 12
	float AnimTime;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTimeAttackRegistReplay Size 56
// Inherited 56 bytes 
class UPrTimeAttackRegistReplay : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetFront Size 144
// Inherited 144 bytes 
class UBelongingDataAssetFront : public UBelongingDataAssetKartParts
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDistanceWidget Size 632
// Inherited 608 bytes 
class ULicenseDistanceWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* WS_DistanceBG;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_DistanceText;  // Offset: 616 Size: 8
	float Distance;  // Offset: 624 Size: 4
	float Threshold;  // Offset: 628 Size: 4



 // Functions 
 public:
	void UpdateDistanceAndThreshold(float InDistance, float InThreshold); // Function KartDrift.LicenseDistanceWidget.UpdateDistanceAndThreshold
}; 
 
 


//Class KartDrift.WidgetPtrLifetimeOwner Size 128
// Inherited 40 bytes 
class UWidgetPtrLifetimeOwner : public UObject
{

 public: 
	struct TMap<int32_t, struct UUserWidget*> Widgets;  // Offset: 40 Size: 80
	char pad_120[8];  // Offset: 120 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableAllPawns Size 72
// Inherited 72 bytes 
class UDisableAllPawns : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MineReaction Size 752
// Inherited 752 bytes 
class UMineReaction : public URocketReaction
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTimeAttackGetRecords Size 56
// Inherited 56 bytes 
class UPqTimeAttackGetRecords : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTimeAttackGetRecords Size 152
// Inherited 72 bytes 
class UPrTimeAttackGetRecords : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FKtTimeAttackRecord> Records;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTimeAttackGetRankers Size 72
// Inherited 56 bytes 
class UPqTimeAttackGetRankers : public UPqPacket
{

 public: 
	struct FString trackId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShopItemListEntryObject Size 72
// Inherited 40 bytes 
class UShopItemListEntryObject : public UObject
{

 public: 
	struct FString ShopItemIDFirst;  // Offset: 40 Size: 16
	struct FString ShopItemIDSecond;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandResetEvent Size 72
// Inherited 72 bytes 
class UPqCommandResetEvent : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropIdentityAccount Size 312
// Inherited 216 bytes 
class UKdPlayerPropIdentityAccount : public UKdPlayerPropIdentity
{

 public: 
	struct FKtAccountProfile Profile;  // Offset: 216 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTimeAttackGetRankers Size 160
// Inherited 72 bytes 
class UPrTimeAttackGetRankers : public UPrPacket
{

 public: 
	struct FString trackId;  // Offset: 72 Size: 16
	int32_t myRank;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct TArray<struct FKtTimeAttackRecord> myRecord;  // Offset: 96 Size: 16
	struct TArray<struct FKtTimeAttackRanker> totalRank;  // Offset: 112 Size: 16
	struct TArray<struct FKtTimeAttackRanker> platformRank;  // Offset: 128 Size: 16
	struct TArray<struct FKtTimeAttackRanker> countryRank;  // Offset: 144 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifyRaceResult Size 88
// Inherited 72 bytes 
class UNotifyRaceResult : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseWaterBombEventSequence Size 104
// Inherited 64 bytes 
class ULicenseWaterBombEventSequence : public ULicenseContents
{

 public: 
	struct TSoftObjectPtr<ULevelSequence> EventSequence;  // Offset: 64 Size: 40



 // Functions 
 public:
	void OnWaterBombEvent(enum class EItemType UsedItemType, int32_t UsedItemId, struct TSoftObjectPtr<ULevelSequence> DummySequence, float DummyTime, struct FTransform SpawnTransform, struct AActor* InTargetActor); // Function KartDrift.LicenseWaterBombEventSequence.OnWaterBombEvent
}; 
 
 


//Class KartDrift.PqSetCrossPlayStatus Size 64
// Inherited 56 bytes 
class UPqSetCrossPlayStatus : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool status : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcSetCrossPlayStatus Size 56
// Inherited 48 bytes 
class UPcSetCrossPlayStatus : public UPcPacket
{

 public: 
	char pad_48_1 : 7;  // Offset: 48 Size: 1
	bool status : 1;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifyCountdown Size 104
// Inherited 72 bytes 
class UNotifyCountdown : public URuleObject
{

 public: 
	char pad_72[32];  // Offset: 72 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLicenseStart Size 104
// Inherited 56 bytes 
class UPqLicenseStart : public UPqPacket
{

 public: 
	struct FString licenseGroupId;  // Offset: 56 Size: 16
	struct FString licenseMissionId;  // Offset: 72 Size: 16
	struct FString trackId;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GrandPrixLogicComponent Size 272
// Inherited 224 bytes 
class UGrandPrixLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[48];  // Offset: 224 Size: 48



 // Functions 
 public:
	void OnUpdateGrandPrixRankBoard(); // Function KartDrift.GrandPrixLogicComponent.OnUpdateGrandPrixRankBoard
	void OnUpdateGrandPrixDetailRecord(); // Function KartDrift.GrandPrixLogicComponent.OnUpdateGrandPrixDetailRecord
}; 
 
 


//Class KartDrift.KtSessionMember Size 128
// Inherited 72 bytes 
class UKtSessionMember : public UKdGameSessionPlayer
{

 public: 
	char pad_72[56];  // Offset: 72 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrLicenseStart Size 112
// Inherited 72 bytes 
class UPrLicenseStart : public UPrPacket
{

 public: 
	struct FString licenseGroupId;  // Offset: 72 Size: 16
	struct FString licenseMissionId;  // Offset: 88 Size: 16
	struct FDateTime StartTime;  // Offset: 104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrSignedUrl Size 152
// Inherited 72 bytes 
class UPrSignedUrl : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FString> signedUrl;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcLicense Size 128
// Inherited 48 bytes 
class UPcLicense : public UPcPacket
{

 public: 
	struct FKtLicenseData licenseData;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BoosterChargeZone Size 584
// Inherited 576 bytes 
class ABoosterChargeZone : public AKdTriggerBox
{

 public: 
	float ChargePerSecond;  // Offset: 576 Size: 4
	char pad_580[4];  // Offset: 580 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandLicenseClear Size 72
// Inherited 72 bytes 
class UPqCommandLicenseClear : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTutorialRecord Size 88
// Inherited 56 bytes 
class UPqTutorialRecord : public UPqPacket
{

 public: 
	struct FKtTutorialRecord tutorialRecord;  // Offset: 56 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchDriftButton Size 720
// Inherited 696 bytes 
class UTouchDriftButton : public UTouchInputButton
{

 public: 
	enum class EDriftButtonKind DriftButtonKind;  // Offset: 696 Size: 1
	char pad_697[7];  // Offset: 697 Size: 7
	struct UNamedSlot* V_KeyGuideSlot;  // Offset: 704 Size: 8
	char pad_712[8];  // Offset: 712 Size: 8



 // Functions 
 public:
	void OnStartBoosterStateChanged(bool bInIsEnabled); // Function KartDrift.TouchDriftButton.OnStartBoosterStateChanged
	void OnEndRaceCountdown(float EndTime); // Function KartDrift.TouchDriftButton.OnEndRaceCountdown
	void OnBeginRaceCountdown(float BeginTime); // Function KartDrift.TouchDriftButton.OnBeginRaceCountdown
}; 
 
 


//Class KartDrift.ScenarioPageWidget Size 1184
// Inherited 744 bytes 
class UScenarioPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[8];  // Offset: 744 Size: 8
	struct UWidget* V_DummyConsumeFocus;  // Offset: 752 Size: 8
	struct UScenarioPortraitMessageWidget* V_ScenarioPortraitMessage;  // Offset: 760 Size: 8
	struct UScenarioDescriptMessageWidget* V_ScenarioDescriptMessage;  // Offset: 768 Size: 8
	struct UScenarioTitleWidget* V_ScenarioTitle;  // Offset: 776 Size: 8
	struct UButtonTemplate* V_ScenarioMessageNextButton;  // Offset: 784 Size: 8
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 792 Size: 8
	struct UScenarioParseInstance* PortraitParseInstance;  // Offset: 800 Size: 8
	struct UScenarioParseInstance* DescriptParseInstance;  // Offset: 808 Size: 8
	char pad_816[368];  // Offset: 816 Size: 368



 // Functions 
 public:
	void OnMessageNextButtonClicked(int32_t InIndex); // Function KartDrift.ScenarioPageWidget.OnMessageNextButtonClicked
}; 
 
 


//Class KartDrift.ScenarioTravel Size 672
// Inherited 624 bytes 
class AScenarioTravel : public AScenarioBase
{

 public: 
	struct FString ModeName;  // Offset: 624 Size: 16
	struct FString LevelName;  // Offset: 640 Size: 16
	struct FString OptionString;  // Offset: 656 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseDistanceWidget Size 112
// Inherited 72 bytes 
class UCreateLicenseDistanceWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseDistanceWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LevelTrackBase Size 576
// Inherited 544 bytes 
class ALevelTrackBase : public AActor
{

 public: 
	struct USceneComponent* RootSceneComponent;  // Offset: 544 Size: 8
	struct UArrowComponent* ArrowComponent;  // Offset: 552 Size: 8
	struct UBillboardComponent* BillboardComponent;  // Offset: 560 Size: 8
	struct UTextRenderComponent* TextRenderComponent;  // Offset: 568 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMatchStatus Size 96
// Inherited 48 bytes 
class UPcMatchStatus : public UPcPacket
{

 public: 
	struct FString mmTicket;  // Offset: 48 Size: 16
	int32_t status;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4
	struct FString desc;  // Offset: 72 Size: 16
	struct UObject* subobj;  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqTutorialComplete Size 64
// Inherited 56 bytes 
class UPqTutorialComplete : public UPqPacket
{

 public: 
	struct FKtTutorialData tutorialData;  // Offset: 56 Size: 2
	char pad_58[6];  // Offset: 58 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryEditCameraActor Size 3200
// Inherited 2880 bytes 
class ALiveryEditCameraActor : public ARotatableCameraActor
{

 public: 
	char pad_2880_1 : 7;  // Offset: 2880 Size: 1
	bool bUseCameraUpdate : 1;  // Offset: 2880 Size: 1
	enum class EPawnCameraType LiveryCameraType;  // Offset: 2881 Size: 1
	char pad_2882[22];  // Offset: 2882 Size: 22
	enum class EEditValueType PreviewCameraValueType;  // Offset: 2904 Size: 1
	char pad_2905[3];  // Offset: 2905 Size: 3
	struct FEditValue CameraValues[6];  // Offset: 2908 Size: 144
	struct FEditValue BeforeCameraValues[6];  // Offset: 3052 Size: 144
	char pad_3196[4];  // Offset: 3196 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIItemTeamComponent Size 312
// Inherited 296 bytes 
class UAIItemTeamComponent : public UAIItemComponent
{

 public: 
	struct TArray<struct AKdPawn*> TeamPawnListCache;  // Offset: 296 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediNxLogInMatchEndRideResult Size 352
// Inherited 248 bytes 
class UDqDediNxLogInMatchEndRideResult : public UDqDediNxLogInMatchEnd
{

 public: 
	struct FString protohash;  // Offset: 248 Size: 16
	struct FString recorddata;  // Offset: 264 Size: 16
	struct FString recorditemarray;  // Offset: 280 Size: 16
	int32_t matchspeedavg;  // Offset: 296 Size: 4
	char pad_300[4];  // Offset: 300 Size: 4
	struct FString RecordUserCollisionInfo;  // Offset: 304 Size: 16
	struct FString boosterstats;  // Offset: 320 Size: 16
	int32_t recordtotalboostcnt;  // Offset: 336 Size: 4
	int32_t recordtotalboosttime;  // Offset: 340 Size: 4
	int32_t RecordUserCollision;  // Offset: 344 Size: 4
	char pad_348[4];  // Offset: 348 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrTutorialComplete Size 80
// Inherited 72 bytes 
class UPrTutorialComplete : public UPrPacket
{

 public: 
	struct FKtTutorialData tutorialData;  // Offset: 72 Size: 2
	char pad_74[6];  // Offset: 74 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcLoginEvent Size 64
// Inherited 48 bytes 
class UPcLoginEvent : public UPcPacket
{

 public: 
	struct TArray<struct FLoginEventRawData> loginEventData;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAttendanceEvent Size 72
// Inherited 48 bytes 
class UPcAttendanceEvent : public UPcPacket
{

 public: 
	struct FString EventID;  // Offset: 48 Size: 16
	int32_t invokedNumber;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAsset Size 64
// Inherited 48 bytes 
class UBelongingDataAsset : public UPrimaryDataAsset
{

 public: 
	char pad_48[8];  // Offset: 48 Size: 8
	struct FName PrimaryItemID;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftAngleLimitGate Size 648
// Inherited 544 bytes 
class ADriftAngleLimitGate : public AActor
{

 public: 
	float DriftLimitAngle;  // Offset: 544 Size: 4
	float DriftLimitAngleAddtional;  // Offset: 548 Size: 4
	float DriftLimitAngleReverse;  // Offset: 552 Size: 4
	float DriftLimitAngleReverseAddtional;  // Offset: 556 Size: 4
	char pad_560_1 : 7;  // Offset: 560 Size: 1
	bool bHideGuide : 1;  // Offset: 560 Size: 1
	char pad_561_1 : 7;  // Offset: 561 Size: 1
	bool bUseHeightLimit : 1;  // Offset: 561 Size: 1
	char pad_562[2];  // Offset: 562 Size: 2
	struct FVector2D HeightLimit;  // Offset: 564 Size: 8
	char pad_572[4];  // Offset: 572 Size: 4
	struct USceneComponent* SceneComponent;  // Offset: 576 Size: 8
	struct FVector LeftPosition;  // Offset: 584 Size: 12
	struct FVector RightPosition;  // Offset: 596 Size: 12
	char pad_608[4];  // Offset: 608 Size: 4
	float Width;  // Offset: 612 Size: 4
	float LeftMin;  // Offset: 616 Size: 4
	float LeftMax;  // Offset: 620 Size: 4
	float RightMin;  // Offset: 624 Size: 4
	float RightMax;  // Offset: 628 Size: 4
	int32_t GateIndex;  // Offset: 632 Size: 4
	char pad_636[4];  // Offset: 636 Size: 4
	struct ADriftGuide* TaregtDriftGuide;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTimerWidget Size 648
// Inherited 608 bytes 
class ULicenseTimerWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_LapTime;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_LapTime_Warning;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* WS_Time;  // Offset: 624 Size: 8
	char pad_632[8];  // Offset: 632 Size: 8
	struct ULicenseTimerComponent* LicenseTimerComponent;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FrontSwingCameraCalculator Size 256
// Inherited 40 bytes 
class UFrontSwingCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[216];  // Offset: 40 Size: 216



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AchievementLogicComponent Size 248
// Inherited 224 bytes 
class UAchievementLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[24];  // Offset: 224 Size: 24



 // Functions 
 public:
	void OnUpdateAchievementInfo(); // Function KartDrift.AchievementLogicComponent.OnUpdateAchievementInfo
}; 
 
 


//Class KartDrift.AccountPlatformAchievement Size 64
// Inherited 48 bytes 
class UAccountPlatformAchievement : public UAccountSubsystem
{

 public: 
	char pad_48[16];  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemThunderbolt Size 1104
// Inherited 856 bytes 
class AItemThunderbolt : public AItem
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 856 Size: 40
	struct TSoftObjectPtr<UFMODEvent> PreAffectSound;  // Offset: 896 Size: 40
	struct TSoftObjectPtr<UFMODEvent> AffectSound;  // Offset: 936 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Thunderbolt_Affect;  // Offset: 976 Size: 40
	struct TSoftClassPtr<UObject> Thunderbolt_Bullet;  // Offset: 1016 Size: 40
	struct TArray<struct UParticleSystemComponent*> ThunderboltEffects;  // Offset: 1056 Size: 16
	char pad_1072[16];  // Offset: 1072 Size: 16
	struct TArray<struct AActor*> FrontEnemies;  // Offset: 1088 Size: 16



 // Functions 
 public:
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemThunderbolt.MulticastNoTarget
	void MulticastBeginCasting(struct UItemComponent* User, struct TArray<struct UItemComponent*> Enemies); // Function KartDrift.ItemThunderbolt.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemThunderbolt.MulticastAffectTo
}; 
 
 


//Class KartDrift.PqAttendanceEventInfo Size 56
// Inherited 56 bytes 
class UPqAttendanceEventInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioWidgetComponent Size 192
// Inherited 176 bytes 
class UScenarioWidgetComponent : public UActorComponent
{

 public: 
	struct TArray<struct UScenarioWidgetBase*> WidgetContainer;  // Offset: 176 Size: 16



 // Functions 
 public:
	void OnFinishedDelegate(struct UScenarioWidgetBase* InWidget); // Function KartDrift.ScenarioWidgetComponent.OnFinishedDelegate
}; 
 
 


//Class KartDrift.KdPostInitializer Size 48
// Inherited 48 bytes 
class UKdPostInitializer : public UGameInstanceSubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAttendanceEventInfo Size 88
// Inherited 72 bytes 
class UPrAttendanceEventInfo : public UPrPacket
{

 public: 
	struct TArray<struct FKtAttendanceEventInfo> Data;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqConfirmAttendanceEvent Size 80
// Inherited 56 bytes 
class UPqConfirmAttendanceEvent : public UPqPacket
{

 public: 
	struct FString EventID;  // Offset: 56 Size: 16
	int32_t eventNumber;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountLinkSelect Size 112
// Inherited 72 bytes 
class UPrAccountLinkSelect : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bGuest : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	struct FString linkUrl;  // Offset: 80 Size: 16
	struct TArray<struct FString> linkUrlAllowedDomains;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AlertWidget Size 640
// Inherited 608 bytes 
class UAlertWidget : public UUserWidget
{

 public: 
	struct UImage* ImageAlert1;  // Offset: 608 Size: 8
	struct UImage* ImageAlert2;  // Offset: 616 Size: 8
	char pad_624[16];  // Offset: 624 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackTrackDefEntryObject Size 400
// Inherited 40 bytes 
class UTimeAttackTrackDefEntryObject : public UObject
{

 public: 
	struct FKtClientTrackDef TrackDef;  // Offset: 40 Size: 352
	char pad_392[8];  // Offset: 392 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetMyStickerPenaltyState Size 128
// Inherited 72 bytes 
class ULrGetMyStickerPenaltyState : public UPrPacket
{

 public: 
	int32_t totalSlotCount;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct TArray<int32_t> blockedSlots;  // Offset: 80 Size: 16
	struct FNullableDateTime uploadAfter;  // Offset: 96 Size: 16
	struct FNullableDateTime reportAfter;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestGameState Size 1152
// Inherited 1152 bytes 
class AShadowQuestGameState : public ATimeAttackGameState
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartUpgradeEffectAsset Size 192
// Inherited 48 bytes 
class UKartUpgradeEffectAsset : public UDataAsset
{

 public: 
	struct TArray<struct FKartUpgradeFxParticleInfo> UpgradeParticleList;  // Offset: 48 Size: 16
	struct TArray<struct FKartUpgradeFxMaterialInfo> UpgradeMatFxList;  // Offset: 64 Size: 16
	struct TSoftObjectPtr<UMaterialParameterCollection> ParameterCollection;  // Offset: 80 Size: 40
	struct TArray<struct FKartUpgradeFxGradeColorInfo> UpgradeColorParamList;  // Offset: 120 Size: 16
	struct UFMODEvent* UpgradeFxSound;  // Offset: 136 Size: 8
	struct TArray<struct FKartUpgradeFxParticleInfo> GearApplyParticleList;  // Offset: 144 Size: 16
	struct TArray<struct FKartUpgradeFxMaterialInfo> GearApplyMatFxList;  // Offset: 160 Size: 16
	struct UFMODEvent* GearApplyFxSound;  // Offset: 176 Size: 8
	float PlayDuration;  // Offset: 184 Size: 4
	char pad_188[4];  // Offset: 188 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcSetPremium Size 56
// Inherited 48 bytes 
class UPcSetPremium : public UPcPacket
{

 public: 
	enum class EKtPremium premium;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrConfirmAttendanceEvent Size 128
// Inherited 72 bytes 
class UPrConfirmAttendanceEvent : public UPrPacket
{

 public: 
	struct FKtAttendanceEventInfo Data;  // Offset: 72 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAchievementNoti Size 64
// Inherited 48 bytes 
class UPcAchievementNoti : public UPcPacket
{

 public: 
	struct FString achievementId;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartMovementReplication Size 832
// Inherited 176 bytes 
class UKartMovementReplication : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct FReplicatedKartState ReplicatedStates;  // Offset: 200 Size: 16
	char pad_216[36];  // Offset: 216 Size: 36
	struct FPhysicSpec Spec;  // Offset: 252 Size: 200
	char pad_452[172];  // Offset: 452 Size: 172
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bStuck : 1;  // Offset: 624 Size: 1
	char pad_625_1 : 7;  // Offset: 625 Size: 1
	bool bForcing : 1;  // Offset: 625 Size: 1
	char pad_626[6];  // Offset: 626 Size: 6
	char pad_632_1 : 7;  // Offset: 632 Size: 1
	bool bKartCollisionEnable : 1;  // Offset: 632 Size: 1
	char pad_633[11];  // Offset: 633 Size: 11
	char pad_644_1 : 7;  // Offset: 644 Size: 1
	bool bSlip : 1;  // Offset: 644 Size: 1
	char pad_645_1 : 7;  // Offset: 645 Size: 1
	bool bHitThunderbolt : 1;  // Offset: 645 Size: 1
	char pad_646[6];  // Offset: 646 Size: 6
	float ItemDragFactor;  // Offset: 652 Size: 4
	char pad_656[4];  // Offset: 656 Size: 4
	float WheelAxisOffset;  // Offset: 660 Size: 4
	float SuspensionOffset;  // Offset: 664 Size: 4
	char pad_668[12];  // Offset: 668 Size: 12
	struct ALowLatencyActor* LowLatencyActor;  // Offset: 680 Size: 8
	char pad_688[16];  // Offset: 688 Size: 16
	struct FKartRepMovement KartRepMovement;  // Offset: 704 Size: 64
	char pad_768[8];  // Offset: 768 Size: 8
	struct UMovementRecordComponent* Recorder;  // Offset: 776 Size: 8
	char pad_784[48];  // Offset: 784 Size: 48



 // Functions 
 public:
	void ServerSetKartRepMovement(struct FKartRepMovement InKartRepMovement); // Function KartDrift.KartMovementReplication.ServerSetKartRepMovement
	void ServerSetClientEvents(bool HitKart, bool HitWall); // Function KartDrift.KartMovementReplication.ServerSetClientEvents
	void ServerListenInputLog(struct TArray<struct FInputLog> Logs, int32_t BeginIndex); // Function KartDrift.KartMovementReplication.ServerListenInputLog
	void ServerListenAutoDrive(bool InAutoDrive); // Function KartDrift.KartMovementReplication.ServerListenAutoDrive
	void ServerCallUpdateState(struct FReplicatedKartState InState); // Function KartDrift.KartMovementReplication.ServerCallUpdateState
	void OnRep_Spec(); // Function KartDrift.KartMovementReplication.OnRep_Spec
	void OnRep_bKartCollisionEnable(); // Function KartDrift.KartMovementReplication.OnRep_bKartCollisionEnable
	void OnRep_bForcing(); // Function KartDrift.KartMovementReplication.OnRep_bForcing
	void OnComponentHitEvent(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.KartMovementReplication.OnComponentHitEvent
	void EnableCollision(); // Function KartDrift.KartMovementReplication.EnableCollision
	void DisableCollision(); // Function KartDrift.KartMovementReplication.DisableCollision
	void Client_Impulse(struct FVector NormalImpulse, struct AActor* OtherActor, float OnHitTimeStamp); // Function KartDrift.KartMovementReplication.Client_Impulse
}; 
 
 


//Class KartDrift.ThunderboltReaction Size 704
// Inherited 528 bytes 
class UThunderboltReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UParticleSystem> Thunderbolt_Affect;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ThunderboltSound;  // Offset: 576 Size: 40
	struct TSoftClassPtr<UObject> ThunderboltHitShakeAsset;  // Offset: 616 Size: 40
	char pad_656[8];  // Offset: 656 Size: 8
	struct UItemComponent* Victim;  // Offset: 664 Size: 8
	struct UKdLevelSequencePlayer* HitSequencePlayer;  // Offset: 672 Size: 8
	struct UParticleSystemComponent* ThunderboltEffectComponent;  // Offset: 680 Size: 8
	char pad_688[16];  // Offset: 688 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUpdatePlatformStore Size 56
// Inherited 56 bytes 
class UPqUpdatePlatformStore : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryServerRequester Size 208
// Inherited 40 bytes 
class ULiveryServerRequester : public UObject
{

 public: 
	struct UHttpRequester* HttpRequester;  // Offset: 40 Size: 8
	struct TMap<struct FString, struct FLiveryCache> LiveryCacheMap;  // Offset: 48 Size: 80
	struct TMap<struct FString, struct FLiveryStickerCache> StickerCacheMap;  // Offset: 128 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcChangeDynDataList Size 64
// Inherited 48 bytes 
class UPcChangeDynDataList : public UPcPacket
{

 public: 
	struct TArray<struct FString> changeList;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetAllADTEventReward Size 56
// Inherited 56 bytes 
class UPqGetAllADTEventReward : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioIncBoostGauge Size 632
// Inherited 624 bytes 
class AScenarioIncBoostGauge : public AScenarioBase
{

 public: 
	float IncValue;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BarricadeReaction Size 608
// Inherited 528 bytes 
class UBarricadeReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftClassPtr<UObject> BarricadeHitShakeAsset;  // Offset: 536 Size: 40
	char pad_576[8];  // Offset: 576 Size: 8
	struct UKdLevelSequencePlayer* HitSequencePlayer;  // Offset: 584 Size: 8
	char pad_592[16];  // Offset: 592 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetVDTEventReward Size 64
// Inherited 56 bytes 
class UPqGetVDTEventReward : public UPqPacket
{

 public: 
	int32_t rewardIndex;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SetDashboardText Size 72
// Inherited 72 bytes 
class USetDashboardText : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ChattingPageWidget Size 760
// Inherited 744 bytes 
class UChattingPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* TTSChatDialog;  // Offset: 744 Size: 8
	char pad_752[8];  // Offset: 752 Size: 8



 // Functions 
 public:
	void OpenTTSChatDialog(); // Function KartDrift.ChattingPageWidget.OpenTTSChatDialog
	void OnTTSTextChanged(struct FText& Text); // Function KartDrift.ChattingPageWidget.OnTTSTextChanged
	void OnSubmitChat(int32_t InIndex); // Function KartDrift.ChattingPageWidget.OnSubmitChat
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ChattingPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.AnimEventUserWidget Size 656
// Inherited 608 bytes 
class UAnimEventUserWidget : public UUserWidget
{

 public: 
	char pad_608[48];  // Offset: 608 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetADTEventData Size 56
// Inherited 56 bytes 
class UPqGetADTEventData : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAcquireMail Size 96
// Inherited 72 bytes 
class UPrAcquireMail : public UPrPacket
{

 public: 
	struct TArray<struct FKtStockItem> Items;  // Offset: 72 Size: 16
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool duplicated : 1;  // Offset: 88 Size: 1
	char pad_89[7];  // Offset: 89 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetSide Size 144
// Inherited 144 bytes 
class UBelongingDataAssetSide : public UBelongingDataAssetKartParts
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcADTEventData Size 88
// Inherited 48 bytes 
class UPcADTEventData : public UPcPacket
{

 public: 
	struct FString EventID;  // Offset: 48 Size: 16
	int32_t durationTime;  // Offset: 64 Size: 4
	int32_t currentStep;  // Offset: 68 Size: 4
	struct TArray<char> RewardedSteps;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BananaReaction Size 704
// Inherited 528 bytes 
class UBananaReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UParticleSystem> TrapParticle;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<UFMODEvent> TrappedSoundAsset;  // Offset: 576 Size: 40
	struct TSoftObjectPtr<ULevelSequence> HitSequenceAsset;  // Offset: 616 Size: 40
	char pad_656[16];  // Offset: 656 Size: 16
	struct UParticleSystemComponent* TrapEffectComponent;  // Offset: 672 Size: 8
	struct UKdLevelSequencePlayer* HitSequencePlayer;  // Offset: 680 Size: 8
	struct UItemComponent* Victim;  // Offset: 688 Size: 8
	char pad_696[8];  // Offset: 696 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetVDTEventData Size 56
// Inherited 56 bytes 
class UPqGetVDTEventData : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcVDTEventData Size 104
// Inherited 48 bytes 
class UPcVDTEventData : public UPcPacket
{

 public: 
	struct FString EventID;  // Offset: 48 Size: 16
	struct TArray<int32_t> RewardedCount;  // Offset: 64 Size: 16
	struct TArray<int32_t> RewardedIndex;  // Offset: 80 Size: 16
	char pad_96_1 : 7;  // Offset: 96 Size: 1
	bool hasSubEvent : 1;  // Offset: 96 Size: 1
	enum class EKtADTEventType SubEventType;  // Offset: 97 Size: 1
	char pad_98[2];  // Offset: 98 Size: 2
	int32_t subEventDurationTime;  // Offset: 100 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SVGToolsMeshComponent Size 1248
// Inherited 1200 bytes 
class USVGToolsMeshComponent : public UMeshComponent
{

 public: 
	struct USVGToolsMesh* pMesh;  // Offset: 1192 Size: 8
	struct TArray<struct UMaterialInterface*> pMaterial;  // Offset: 1200 Size: 16
	struct FString MeshSVGFile;  // Offset: 1216 Size: 16
	char pad_1240[8];  // Offset: 1240 Size: 8



 // Functions 
 public:
	bool SetMesh(struct USVGToolsMesh* Mesh, bool bCopyMaterial); // Function KartDrift.SVGToolsMeshComponent.SetMesh
	struct USVGToolsMesh* GetMesh(); // Function KartDrift.SVGToolsMeshComponent.GetMesh
}; 
 
 


//Class KartDrift.SQAccountConfigStorage Size 40
// Inherited 40 bytes 
class USQAccountConfigStorage : public UShadowQuestConfigStorage
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDynamicItemCubeData Size 112
// Inherited 64 bytes 
class ULicenseDynamicItemCubeData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<float> DistanceList;  // Offset: 72 Size: 16
	struct TArray<enum class EItemType> ItemTypeList;  // Offset: 88 Size: 16
	int32_t CubeCount;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMessageData Size 64
// Inherited 64 bytes 
class ULicenseMessageData : public ULicenseContents
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetLootBoxInfo Size 56
// Inherited 56 bytes 
class UPqGetLootBoxInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FuncLib_Game Size 40
// Inherited 40 bytes 
class UFuncLib_Game : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LapTimeWidget Size 632
// Inherited 608 bytes 
class ULapTimeWidget : public UUserWidget
{

 public: 
	struct UTextBlock* lapTime;  // Offset: 608 Size: 8
	struct UTextBlock* TotalTime;  // Offset: 616 Size: 8
	struct UTextBlock* bestTime;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqOpenLootBox Size 88
// Inherited 56 bytes 
class UPqOpenLootBox : public UPqPacket
{

 public: 
	struct FString Category;  // Offset: 56 Size: 16
	struct FString lootBoxItemId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_AnimState Size 72
// Inherited 48 bytes 
class UAnimNotifyState_AnimState : public UAnimNotifyState
{

 public: 
	int32_t MaterialIndex;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4
	struct TArray<struct FOverlayMaterialCurveData> CurveValue;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RemoveAllLevelAutoDriveLoadingWidget Size 112
// Inherited 72 bytes 
class URemoveAllLevelAutoDriveLoadingWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> WidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdReplayPlayerController Size 1408
// Inherited 1408 bytes 
class AKdReplayPlayerController : public AKdPlayerController
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddRetireToPersonalResult Size 72
// Inherited 72 bytes 
class UAddRetireToPersonalResult : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrOpenLootBox Size 88
// Inherited 72 bytes 
class UPrOpenLootBox : public UPrPacket
{

 public: 
	struct TArray<struct FKtStockItem> lootItemVector;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdItemFilter Size 40
// Inherited 40 bytes 
class UKdItemFilter : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_BeginRace_TimeAttack Size 88
// Inherited 80 bytes 
class UTransition_BeginRace_TimeAttack : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_BeginRace Size 80
// Inherited 80 bytes 
class UTransition_BeginRace : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseGameMode Size 824
// Inherited 824 bytes 
class ALicenseGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LanguageEntryObject Size 56
// Inherited 40 bytes 
class ULanguageEntryObject : public UObject
{

 public: 
	struct FString LanguageName;  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrVivoxLoginToken Size 88
// Inherited 72 bytes 
class UPrVivoxLoginToken : public UPrPacket
{

 public: 
	struct FString loginToken;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeGameState Size 40
// Inherited 40 bytes 
class UModeGameState : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqVivoxTranscriptionToken Size 72
// Inherited 56 bytes 
class UPqVivoxTranscriptionToken : public UPqPacket
{

 public: 
	struct FString vivoxChannelName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamPawn Size 944
// Inherited 936 bytes 
class AItemTeamPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void Multicast_Logout(); // Function KartDrift.ItemTeamPawn.Multicast_Logout
}; 
 
 


//Class KartDrift.ItemWaterbomb Size 1360
// Inherited 856 bytes 
class AItemWaterbomb : public AItem
{

 public: 
	struct USphereComponent* OverlapComponent;  // Offset: 856 Size: 8
	struct UParticleSystemComponent* ExplodeEffectComponent;  // Offset: 864 Size: 8
	struct UParticleSystemComponent* UseEffectComponent;  // Offset: 872 Size: 8
	struct USkeletalMeshComponent* WaterbombMeshComponent;  // Offset: 880 Size: 8
	struct TSoftObjectPtr<USkeletalMesh> WaterbombMesh;  // Offset: 888 Size: 40
	struct TSoftObjectPtr<UParticleSystem> WaterBombParticle;  // Offset: 928 Size: 40
	struct TSoftObjectPtr<UParticleSystem> UseEffectAsset;  // Offset: 968 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ShootSound;  // Offset: 1008 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ExplodeSound;  // Offset: 1048 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveAxisZAsset;  // Offset: 1088 Size: 40
	struct TSoftObjectPtr<UCurveFloat> ScaleCurveAsset;  // Offset: 1128 Size: 40
	struct TSoftClassPtr<UObject> Dummy_Bullet;  // Offset: 1168 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1208 Size: 40
	char pad_1248[8];  // Offset: 1248 Size: 8
	struct UCurveFloat* AffectCurve;  // Offset: 1256 Size: 8
	struct UCurveFloat* ScaleCurve;  // Offset: 1264 Size: 8
	char pad_1272[64];  // Offset: 1272 Size: 64
	struct UItemComponent* LocalUser;  // Offset: 1336 Size: 8
	struct TArray<struct AActor*> AffectActor;  // Offset: 1344 Size: 16



 // Functions 
 public:
	void MulticastBeginOverlap(); // Function KartDrift.ItemWaterbomb.MulticastBeginOverlap
	void MulticastBeginCasting(struct UItemComponent* User, struct FVector InDestination); // Function KartDrift.ItemWaterbomb.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemWaterbomb.MulticastAffectTo
	void ClientBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemWaterbomb.ClientBeginOverlap
}; 
 
 


//Class KartDrift.PrVivoxTranscriptionToken Size 88
// Inherited 72 bytes 
class UPrVivoxTranscriptionToken : public UPrPacket
{

 public: 
	struct FString vivoxTranscriptionToken;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrackGuideData Size 128
// Inherited 64 bytes 
class ULicenseTrackGuideData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct FString StartCheckPointName;  // Offset: 72 Size: 16
	float GradationTime;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct TArray<struct FLicenseSpeedColorInfo> LicenseSpeedColorList;  // Offset: 96 Size: 16
	struct TArray<struct FLicenseTrackSpeedInfo> LicenseTrackSpeedDataList;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcUpdateChannelPlayerInfo Size 144
// Inherited 48 bytes 
class UPcUpdateChannelPlayerInfo : public UPcPacket
{

 public: 
	struct FString Channel;  // Offset: 48 Size: 16
	struct TMap<struct FString, struct FString> Update;  // Offset: 64 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqChangeBeginnerSetting Size 64
// Inherited 56 bytes 
class UPqChangeBeginnerSetting : public UPqPacket
{

 public: 
	int32_t Flag;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DediServerSubsystem Size 80
// Inherited 48 bytes 
class UDediServerSubsystem : public UGameInstanceSubsystem
{

 public: 
	struct USmsProvider* SmsProvider;  // Offset: 48 Size: 8
	struct UKtSessionRequestBody* LastSessionRequest;  // Offset: 56 Size: 8
	struct TArray<struct UObject*> PendingRequests;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqKartGearSet Size 152
// Inherited 56 bytes 
class UPqKartGearSet : public UPqPacket
{

 public: 
	struct FString kartItemId;  // Offset: 56 Size: 16
	struct TMap<struct FString, int32_t> gearSettings;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemIcebomb Size 1360
// Inherited 856 bytes 
class AItemIcebomb : public AItem
{

 public: 
	struct USphereComponent* OverlapComponent;  // Offset: 856 Size: 8
	struct UParticleSystemComponent* ExplodeEffectComponent;  // Offset: 864 Size: 8
	struct UParticleSystemComponent* UseEffectComponent;  // Offset: 872 Size: 8
	struct USkeletalMeshComponent* IcebombMeshComponent;  // Offset: 880 Size: 8
	struct TSoftObjectPtr<USkeletalMesh> IcebombMesh;  // Offset: 888 Size: 40
	struct TSoftObjectPtr<UParticleSystem> IcebombParticle;  // Offset: 928 Size: 40
	struct TSoftObjectPtr<UParticleSystem> UseEffectAsset;  // Offset: 968 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ShootSound;  // Offset: 1008 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ExplodeSound;  // Offset: 1048 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveAxisZAsset;  // Offset: 1088 Size: 40
	struct TSoftObjectPtr<UCurveFloat> ScaleCurveAsset;  // Offset: 1128 Size: 40
	struct TSoftClassPtr<UObject> IcebombDecal;  // Offset: 1168 Size: 40
	struct TSoftClassPtr<UObject> Dummy_Bullet;  // Offset: 1208 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1248 Size: 40
	char pad_1288[8];  // Offset: 1288 Size: 8
	struct UCurveFloat* AffectCurve;  // Offset: 1296 Size: 8
	struct UCurveFloat* ScaleCurve;  // Offset: 1304 Size: 8
	char pad_1312[48];  // Offset: 1312 Size: 48



 // Functions 
 public:
	void MulticastBeginOverlap(); // Function KartDrift.ItemIcebomb.MulticastBeginOverlap
	void MulticastBeginCasting(struct UItemComponent* User, struct FVector InDestination); // Function KartDrift.ItemIcebomb.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemIcebomb.MulticastAffectTo
	void ClientBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemIcebomb.ClientBeginOverlap
}; 
 
 


//Class KartDrift.DelegateBarrier Size 136
// Inherited 40 bytes 
class UDelegateBarrier : public UObject
{

 public: 
	char pad_40[96];  // Offset: 40 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrKartGearSet Size 176
// Inherited 72 bytes 
class UPrKartGearSet : public UPrPacket
{

 public: 
	struct FString kartItemId;  // Offset: 72 Size: 16
	int32_t remainGears;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct TMap<struct FString, int32_t> gearSettings;  // Offset: 96 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorPodiumSequencePoint Size 904
// Inherited 576 bytes 
class AMajorPodiumSequencePoint : public ALevelSequenceTrack
{

 public: 
	char pad_576[32];  // Offset: 576 Size: 32
	struct TSet<struct UObject*> PreCacheAssetContainer;  // Offset: 608 Size: 80
	char pad_688[16];  // Offset: 688 Size: 16
	struct TMap<enum class EMajorPodiumSequenceType, struct TSoftObjectPtr<ULevelSequence>> AssetContainer;  // Offset: 704 Size: 80
	struct FString PodiumKartPrefix;  // Offset: 784 Size: 16
	struct FString PodiumCharacterPrefix;  // Offset: 800 Size: 16
	struct FString LoserCharacterPrefix;  // Offset: 816 Size: 16
	struct AMajorPodiumMediaWall* MediaWall;  // Offset: 832 Size: 8
	struct TArray<struct AKdSequenceKart*> SequenceKartContainer;  // Offset: 840 Size: 16
	struct TArray<struct AKdSequenceCharacter*> PodiumSequenceCharacterContainer;  // Offset: 856 Size: 16
	struct TArray<struct UPodiumRiderNameTagComponent*> SequenceCharacterNameTagContainer;  // Offset: 872 Size: 16
	struct TArray<struct AKdSequenceCharacter*> LoseSequenceCharacterContainer;  // Offset: 888 Size: 16



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.MajorPodiumSequencePoint.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.PqKartGearReset Size 72
// Inherited 56 bytes 
class UPqKartGearReset : public UPqPacket
{

 public: 
	struct FString kartItemId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CouponLogicComponent Size 264
// Inherited 224 bytes 
class UCouponLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[40];  // Offset: 224 Size: 40



 // Functions 
 public:
	void OnPrCouponUse(int32_t Result, int32_t InErrorCode, struct TArray<struct FKtItem>& Items, struct TArray<struct FString>& Duplicates); // Function KartDrift.CouponLogicComponent.OnPrCouponUse
}; 
 
 


//Class KartDrift.CreateLicenseMissionTitleWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseMissionTitleWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseSpeedLimitClass;  // Offset: 72 Size: 40
	struct UUserWidget* SpeedLimit;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryReportViewerPageWidget Size 808
// Inherited 744 bytes 
class ULiveryReportViewerPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[64];  // Offset: 744 Size: 64



 // Functions 
 public:
	void OnRowItemClickedButton(int32_t InIndex, struct UObject* ItemObj); // Function KartDrift.LiveryReportViewerPageWidget.OnRowItemClickedButton
	struct UWidget* OnNavigationListView(enum class EUINavigation UINavigation); // Function KartDrift.LiveryReportViewerPageWidget.OnNavigationListView
	struct UWidget* OnNavigationEditableText(enum class EUINavigation UINavigation); // Function KartDrift.LiveryReportViewerPageWidget.OnNavigationEditableText
	void OnClickedConfirm_StickerRestriction(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClickedConfirm_StickerRestriction
	void OnClickedConfirm_LiveryRestriction(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClickedConfirm_LiveryRestriction
	void OnClickedConfirm_Delete(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClickedConfirm_Delete
	void OnClicked_ScreenShot(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_ScreenShot
	void OnClicked_Restriction(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_Restriction
	void OnClicked_ReportTab(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_ReportTab
	void OnClicked_Delete(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_Delete
	void OnClicked_Confirm(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_Confirm
	void OnClicked_Back(int32_t InIndex); // Function KartDrift.LiveryReportViewerPageWidget.OnClicked_Back
}; 
 
 


//Class KartDrift.ScenarioMessageWidget Size 688
// Inherited 608 bytes 
class UScenarioMessageWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimationGraph* AnimationGraph;  // Offset: 608 Size: 8
	struct UScrollBox* Message_ScrollBox;  // Offset: 616 Size: 8
	UScenarioMessageElementWidget* ScrollElementClass;  // Offset: 624 Size: 8
	struct UScenarioMessageElementWidget* CurrentElementWidget;  // Offset: 632 Size: 8
	char pad_640[16];  // Offset: 640 Size: 16
	struct UScenarioParseInstance* ParseInstance;  // Offset: 656 Size: 8
	char pad_664[24];  // Offset: 664 Size: 24



 // Functions 
 public:
	void OnParseText(struct FString InText, bool InIsStyleCode, bool InIsCarriageReturn); // Function KartDrift.ScenarioMessageWidget.OnParseText
	void OnFinishedAppearAnimation(); // Function KartDrift.ScenarioMessageWidget.OnFinishedAppearAnimation
}; 
 
 


//Class KartDrift.JobStatus Size 48
// Inherited 40 bytes 
class UJobStatus : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthLive Size 184
// Inherited 96 bytes 
class UPqAuthLive : public UPqAuth
{

 public: 
	char pad_96_1 : 7;  // Offset: 96 Size: 1
	bool bUseAccountLink : 1;  // Offset: 96 Size: 1
	char pad_97[7];  // Offset: 97 Size: 7
	struct FString gamerTag;  // Offset: 104 Size: 16
	struct FString Token;  // Offset: 120 Size: 16
	struct FString osVer;  // Offset: 136 Size: 16
	struct FString DeviceType;  // Offset: 152 Size: 16
	struct FString DeviceID;  // Offset: 168 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrKartGearReset Size 96
// Inherited 72 bytes 
class UPrKartGearReset : public UPrPacket
{

 public: 
	struct FString kartItemId;  // Offset: 72 Size: 16
	int32_t remainGears;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdAccountCheat Size 192
// Inherited 48 bytes 
class UKdAccountCheat : public UGameInstanceSubsystem
{

 public: 
	char pad_48[56];  // Offset: 48 Size: 56
	struct UWebSocketServerConnection* DevServerConnection;  // Offset: 104 Size: 8
	char pad_112[80];  // Offset: 112 Size: 80



 // Functions 
 public:
	void SendKtCommand(struct FString Cmd); // Function KartDrift.KdAccountCheat.SendKtCommand
	void Dev_Websocket(struct FString URL); // Function KartDrift.KdAccountCheat.Dev_Websocket
	void Dev_VDTEventReward(int32_t Index); // Function KartDrift.KdAccountCheat.Dev_VDTEventReward
	void Dev_UnlinkAll(); // Function KartDrift.KdAccountCheat.Dev_UnlinkAll
	void Dev_Unlink(); // Function KartDrift.KdAccountCheat.Dev_Unlink
	void Dev_TutorialComplete(bool bCompleted, enum class EKtGameplayControlType GameplayControlType); // Function KartDrift.KdAccountCheat.Dev_TutorialComplete
	void Dev_Store(); // Function KartDrift.KdAccountCheat.Dev_Store
	void Dev_SteamPurchaseCancel(struct FString orderId); // Function KartDrift.KdAccountCheat.Dev_SteamPurchaseCancel
	void Dev_SteamPurchase(struct FString Category, struct FString stockId); // Function KartDrift.KdAccountCheat.Dev_SteamPurchase
	void Dev_ShowPopupAccountLink(); // Function KartDrift.KdAccountCheat.Dev_ShowPopupAccountLink
	void Dev_ShowConfirmDialog(struct FString Message, struct FString Title); // Function KartDrift.KdAccountCheat.Dev_ShowConfirmDialog
	void Dev_SetTestPlatformType(enum class EKtPlatform machinePlatform, enum class EKtAccountPlatform AccountPlatform); // Function KartDrift.KdAccountCheat.Dev_SetTestPlatformType
	void Dev_PutToTitleStorage(); // Function KartDrift.KdAccountCheat.Dev_PutToTitleStorage
	void Dev_PurchaseTier(int32_t tierCount); // Function KartDrift.KdAccountCheat.Dev_PurchaseTier
	void Dev_PurchaseSeasonPass(); // Function KartDrift.KdAccountCheat.Dev_PurchaseSeasonPass
	void Dev_Purchase(struct FString stockId, struct FString currency); // Function KartDrift.KdAccountCheat.Dev_Purchase
	void Dev_PrintInvenItem(struct FString ItemIdPattern); // Function KartDrift.KdAccountCheat.Dev_PrintInvenItem
	void Dev_Ping(); // Function KartDrift.KdAccountCheat.Dev_Ping
	void Dev_Party(struct FString TargetAccountId); // Function KartDrift.KdAccountCheat.Dev_Party
	void Dev_NxAWalletPage(); // Function KartDrift.KdAccountCheat.Dev_NxAWalletPage
	void Dev_NxAPurchase(struct FString Category, struct FString stockId, bool bDirect); // Function KartDrift.KdAccountCheat.Dev_NxAPurchase
	void Dev_NxAPickup(struct FString transactionId); // Function KartDrift.KdAccountCheat.Dev_NxAPickup
	void Dev_NxABalance(); // Function KartDrift.KdAccountCheat.Dev_NxABalance
	void Dev_LootBox_UpdateLootBoxItemModel(); // Function KartDrift.KdAccountCheat.Dev_LootBox_UpdateLootBoxItemModel
	void Dev_LootBox_ShowMainWidget(); // Function KartDrift.KdAccountCheat.Dev_LootBox_ShowMainWidget
	void Dev_LootBox_SetTestLootItem(struct FString ItemIdWithCount); // Function KartDrift.KdAccountCheat.Dev_LootBox_SetTestLootItem
	void Dev_LootBox_SetTestData(); // Function KartDrift.KdAccountCheat.Dev_LootBox_SetTestData
	void Dev_LootBox_SetContinualResultType(enum class EKtItemType ItemType1st, enum class EKtItemType ItemType2nd, enum class EKtItemType ItemType3rd, enum class EKtItemType ItemType4th, enum class EKtItemType ItemType5th); // Function KartDrift.KdAccountCheat.Dev_LootBox_SetContinualResultType
	void Dev_LootBox_SetContinualResultItem(struct FString ItemIdWithCount1st, struct FString ItemIdWithCount2nd, struct FString ItemIdWithCount3rd, struct FString ItemIdWithCount4th, struct FString ItemIdWithCount5th); // Function KartDrift.KdAccountCheat.Dev_LootBox_SetContinualResultItem
	void Dev_LootBox_PlayPreviousLootBoxMontage(); // Function KartDrift.KdAccountCheat.Dev_LootBox_PlayPreviousLootBoxMontage
	void Dev_LootBox_PlayNextLootBoxMontage(); // Function KartDrift.KdAccountCheat.Dev_LootBox_PlayNextLootBoxMontage
	void Dev_LootBox_PlayConsumeLootBoxMontage(); // Function KartDrift.KdAccountCheat.Dev_LootBox_PlayConsumeLootBoxMontage
	void Dev_LiveSendInviteFriend(struct FString xuid); // Function KartDrift.KdAccountCheat.Dev_LiveSendInviteFriend
	void Dev_ListAllEvent(struct FString seasonId); // Function KartDrift.KdAccountCheat.Dev_ListAllEvent
	void Dev_LicenseClear(struct FString InLicenseGroupId, struct FString InLicenseMissionId, int32_t InStarCount); // Function KartDrift.KdAccountCheat.Dev_LicenseClear
	void Dev_LaunchURL(struct FString InURL); // Function KartDrift.KdAccountCheat.Dev_LaunchURL
	void Dev_KrPcRefund(int32_t Index); // Function KartDrift.KdAccountCheat.Dev_KrPcRefund
	void Dev_KrPcPurchase(struct FString Category, struct FString stockId); // Function KartDrift.KdAccountCheat.Dev_KrPcPurchase
	void Dev_KrPcPickup(int32_t Index); // Function KartDrift.KdAccountCheat.Dev_KrPcPickup
	void Dev_KrPcInventoryList(); // Function KartDrift.KdAccountCheat.Dev_KrPcInventoryList
	void Dev_KrPcChargeUrl(); // Function KartDrift.KdAccountCheat.Dev_KrPcChargeUrl
	void Dev_KrPcBalance(); // Function KartDrift.KdAccountCheat.Dev_KrPcBalance
	void Dev_Join(struct FString GameName); // Function KartDrift.KdAccountCheat.Dev_Join
	void Dev_InviteParty(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_InviteParty
	void Dev_Http(struct FString verb, struct FString URL, struct FString Header, struct FString Body); // Function KartDrift.KdAccountCheat.Dev_Http
	void Dev_Gift(struct FString ReceiverNpsn, struct FString stockId, struct FString currency); // Function KartDrift.KdAccountCheat.Dev_Gift
	void Dev_GfsSetPresence(struct FString newStatus); // Function KartDrift.KdAccountCheat.Dev_GfsSetPresence
	void Dev_GfsRemoveFriend(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_GfsRemoveFriend
	void Dev_GfsMakeFriendRequest(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_GfsMakeFriendRequest
	void Dev_GfsGetUsersByPlatformNickname(struct FString nickName); // Function KartDrift.KdAccountCheat.Dev_GfsGetUsersByPlatformNickname
	void Dev_GfsGetSentFriendRequest(); // Function KartDrift.KdAccountCheat.Dev_GfsGetSentFriendRequest
	void Dev_GfsGetReceivedFriendRequest(); // Function KartDrift.KdAccountCheat.Dev_GfsGetReceivedFriendRequest
	void Dev_GfsGetFriendList(); // Function KartDrift.KdAccountCheat.Dev_GfsGetFriendList
	void Dev_GfsDeclineFriendRequest(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_GfsDeclineFriendRequest
	void Dev_GfsCancelFriendRequest(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_GfsCancelFriendRequest
	void Dev_GfsAcceptFriendRequest(struct FString accountId); // Function KartDrift.KdAccountCheat.Dev_GfsAcceptFriendRequest
	void Dev_GetTrophy(); // Function KartDrift.KdAccountCheat.Dev_GetTrophy
	void Dev_GetSeasonPass(); // Function KartDrift.KdAccountCheat.Dev_GetSeasonPass
	void Dev_GetLiveParam(); // Function KartDrift.KdAccountCheat.Dev_GetLiveParam
	void Dev_GetFromTitleStorage(struct FString TargetXuid); // Function KartDrift.KdAccountCheat.Dev_GetFromTitleStorage
	void Dev_GetAchievementInfo(); // Function KartDrift.KdAccountCheat.Dev_GetAchievementInfo
	void Dev_GamerCard(struct FString userID); // Function KartDrift.KdAccountCheat.Dev_GamerCard
	void Dev_DelLivery(int32_t ID); // Function KartDrift.KdAccountCheat.Dev_DelLivery
	void Dev_Close(); // Function KartDrift.KdAccountCheat.Dev_Close
	void Dev_APIGateway_Up(); // Function KartDrift.KdAccountCheat.Dev_APIGateway_Up
	void Dev_APIGateway_Down(); // Function KartDrift.KdAccountCheat.Dev_APIGateway_Down
	void Dev_ADTEventReward(int32_t step); // Function KartDrift.KdAccountCheat.Dev_ADTEventReward
}; 
 
 


//Class KartDrift.KdListEntryButton Size 1008
// Inherited 1000 bytes 
class UKdListEntryButton : public UButtonTemplate
{

 public: 
	char pad_1000[8];  // Offset: 1000 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrEquipKartSkill Size 96
// Inherited 72 bytes 
class UPrEquipKartSkill : public UPrPacket
{

 public: 
	struct FString equippedSkillNodeId;  // Offset: 72 Size: 16
	int32_t remainPoint;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUnEquipKartSkill Size 80
// Inherited 56 bytes 
class UPqUnEquipKartSkill : public UPqPacket
{

 public: 
	struct FString skillNodeId;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bUseKoin : 1;  // Offset: 72 Size: 1
	char pad_73_1 : 7;  // Offset: 73 Size: 1
	bool bInit : 1;  // Offset: 73 Size: 1
	char pad_74[6];  // Offset: 74 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitPawnList Size 72
// Inherited 72 bytes 
class UInitPawnList : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqKartSkillInfo Size 56
// Inherited 56 bytes 
class UPqKartSkillInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CameraFocusLineComponent Size 200
// Inherited 192 bytes 
class UCameraFocusLineComponent : public UDriveCameraParticleEffectComponent
{

 public: 
	char pad_192[8];  // Offset: 192 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseFinishWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseFinishWidget : public URuleObject
{

 public: 
	struct UDialogTemplate* LicenseFinishWidget;  // Offset: 72 Size: 8
	struct TSoftClassPtr<UObject> LicenseFinishWidgetClass;  // Offset: 80 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMissionResultWidgetInst Size 640
// Inherited 608 bytes 
class ULicenseMissionResultWidgetInst : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* WS_AchievementIconCount;  // Offset: 608 Size: 8
	struct UWidgetSwitcher* WS_ClearSwitcher;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_NotClearText;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_ClearText;  // Offset: 632 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyMultiParticleInterface Size 40
// Inherited 40 bytes 
class UAnimNotifyMultiParticleInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrKartSkillInfo Size 104
// Inherited 72 bytes 
class UPrKartSkillInfo : public UPrPacket
{

 public: 
	struct TArray<struct FString> equipSkillNodeIds;  // Offset: 72 Size: 16
	int32_t Level;  // Offset: 88 Size: 4
	int32_t Exp;  // Offset: 92 Size: 4
	int32_t Point;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskBotNgm Size 472
// Inherited 440 bytes 
class UKdServerLoginTaskBotNgm : public UKdServerLoginTask
{

 public: 
	char pad_440[32];  // Offset: 440 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcChangeKartExp Size 72
// Inherited 48 bytes 
class UPcChangeKartExp : public UPcPacket
{

 public: 
	struct FString kartItemId;  // Offset: 48 Size: 16
	int32_t Exp;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DragForceZone Size 584
// Inherited 576 bytes 
class ADragForceZone : public AKdTriggerBox
{

 public: 
	float DragForceMultiplier;  // Offset: 576 Size: 4
	char pad_580[4];  // Offset: 580 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseItemCounter Size 624
// Inherited 608 bytes 
class ULicenseItemCounter : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_ItemCase;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_ItemCounterText;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetGnmMeta Size 88
// Inherited 72 bytes 
class UPrGetGnmMeta : public UPrPacket
{

 public: 
	struct FString Data;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcChangeAccountProfile Size 144
// Inherited 48 bytes 
class UPcChangeAccountProfile : public UPcPacket
{

 public: 
	struct FKtAccountProfile Profile;  // Offset: 48 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SmsDrift Size 192
// Inherited 56 bytes 
class USmsDrift : public USmsProvider
{

 public: 
	char pad_56[32];  // Offset: 56 Size: 32
	struct TMap<struct FString, struct UObject*> SmsPlayers;  // Offset: 88 Size: 80
	char pad_168[24];  // Offset: 168 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseItemCubeComponent Size 224
// Inherited 176 bytes 
class ULicenseItemCubeComponent : public UActorComponent
{

 public: 
	struct AKdPawn* Pawn;  // Offset: 176 Size: 8
	struct ULicenseItemCubeData* Data;  // Offset: 184 Size: 8
	struct TArray<struct FLicenseItemCubeDesc> ItemCubeList;  // Offset: 192 Size: 16
	struct TArray<struct FLicenseItemCubeDesc> HiddenCubeList;  // Offset: 208 Size: 16



 // Functions 
 public:
	enum class EItemType AuthNewItem(struct AGoItem_Cube* InCube); // Function KartDrift.LicenseItemCubeComponent.AuthNewItem
}; 
 
 


//Class KartDrift.PrShopInventoryPickupKrPc Size 88
// Inherited 72 bytes 
class UPrShopInventoryPickupKrPc : public UPrPacket
{

 public: 
	struct TArray<int32_t> pickupIndex;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RacingPassPageWidget Size 928
// Inherited 744 bytes 
class URacingPassPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[144];  // Offset: 744 Size: 144
	struct TArray<struct UObject*> ListAnimObjectsRacingPass;  // Offset: 888 Size: 16
	struct TArray<struct UObject*> ListAnimObjectsLevel;  // Offset: 904 Size: 16
	struct TWeakObjectPtr<UDialogTemplate> BuyPremiumPassNoticeDialog;  // Offset: 920 Size: 8



 // Functions 
 public:
	void ShowNotSalePeriodPopup(); // Function KartDrift.RacingPassPageWidget.ShowNotSalePeriodPopup
	void ShowNotEnoughBalancePopup(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.ShowNotEnoughBalancePopup
	void RacingPass_OnClickedPurchaseRacingPassButton(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedPurchaseRacingPassButton
	void RacingPass_OnClickedPurchaseLevelButton(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedPurchaseLevelButton
	void RacingPass_OnClickedKeyIconStudio(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedKeyIconStudio
	void RacingPass_OnClickedKeyIconShowItemList(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedKeyIconShowItemList
	void RacingPass_OnClickedKeyIconRacingPass(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedKeyIconRacingPass
	void RacingPass_OnClickedKeyIconChallenge(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedKeyIconChallenge
	void RacingPass_OnClickedBackButton(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.RacingPass_OnClickedBackButton
	void PurchaseRacingPassDialog_OnClickedPremiumPassBundle(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseRacingPassDialog_OnClickedPremiumPassBundle
	void PurchaseRacingPassDialog_OnClickedPremiumPass(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseRacingPassDialog_OnClickedPremiumPass
	void PurchaseRacingPassDialog_OnClickedBack(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseRacingPassDialog_OnClickedBack
	void PurchaseLevelDialog_OnClickedShowReward(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseLevelDialog_OnClickedShowReward
	void PurchaseLevelDialog_OnClickedMaxLevel(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseLevelDialog_OnClickedMaxLevel
	void PurchaseLevelDialog_OnClickedIncrease(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseLevelDialog_OnClickedIncrease
	void PurchaseLevelDialog_OnClickedDecrease(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseLevelDialog_OnClickedDecrease
	void PurchaseLevelDialog_OnClickedBack(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseLevelDialog_OnClickedBack
	void PurchaseConfirmDialog_OnClickedShowKcoinPriceDetail(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseConfirmDialog_OnClickedShowKcoinPriceDetail
	void PurchaseConfirmDialog_OnClickedBack(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.PurchaseConfirmDialog_OnClickedBack
	void PurchaseConfirmDialog_InitPriceKcoinDetail(struct FString ShopStockItemID, struct UUserWidget* KcoinPreviewWidget); // Function KartDrift.RacingPassPageWidget.PurchaseConfirmDialog_InitPriceKcoinDetail
	void OnUpdate_UserLevelWidget(); // Function KartDrift.RacingPassPageWidget.OnUpdate_UserLevelWidget
	void OnUpdate_SeasonWidget(); // Function KartDrift.RacingPassPageWidget.OnUpdate_SeasonWidget
	void OnUpdate_SeasonTimeText(struct FText TimeText); // Function KartDrift.RacingPassPageWidget.OnUpdate_SeasonTimeText
	void OnUpdate_SeasonPassWidget(); // Function KartDrift.RacingPassPageWidget.OnUpdate_SeasonPassWidget
	void OnUpdate_SeasonInventoryWidget(); // Function KartDrift.RacingPassPageWidget.OnUpdate_SeasonInventoryWidget
	void OnUpdate_PurchaseButtonVisibility(); // Function KartDrift.RacingPassPageWidget.OnUpdate_PurchaseButtonVisibility
	void OnUncheckedStateAgree(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.OnUncheckedStateAgree
	void OnShowPopup_PurchaseTrophy(); // Function KartDrift.RacingPassPageWidget.OnShowPopup_PurchaseTrophy
	void OnShowPopup_PurchaseComplete(); // Function KartDrift.RacingPassPageWidget.OnShowPopup_PurchaseComplete
	void OnFinishedPremiumPassSequence(); // Function KartDrift.RacingPassPageWidget.OnFinishedPremiumPassSequence
	void OnFinishedEnterAnim(); // Function KartDrift.RacingPassPageWidget.OnFinishedEnterAnim
	void OnClosed_RacingPassPurchaseCompletePopup(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.OnClosed_RacingPassPurchaseCompletePopup
	void OnClickedConfirmPurchase(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.OnClickedConfirmPurchase
	void OnCheckedStateAgree(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.OnCheckedStateAgree
	void OnChanged_SeasonWidget(); // Function KartDrift.RacingPassPageWidget.OnChanged_SeasonWidget
	void OnActivateRacingPass(); // Function KartDrift.RacingPassPageWidget.OnActivateRacingPass
	void OnActivateChallenge(); // Function KartDrift.RacingPassPageWidget.OnActivateChallenge
	void CloseShopPurchaseConfirmDialog(int32_t InIndex); // Function KartDrift.RacingPassPageWidget.CloseShopPurchaseConfirmDialog
}; 
 
 


//Class KartDrift.FixedCameraCalculator Size 248
// Inherited 40 bytes 
class UFixedCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[208];  // Offset: 40 Size: 208



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSingleAiPawn Size 944
// Inherited 936 bytes 
class AItemSingleAiPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcSendEmoticon Size 112
// Inherited 48 bytes 
class UPcSendEmoticon : public UPcPacket
{

 public: 
	struct FString userID;  // Offset: 48 Size: 16
	struct FString emoticonType;  // Offset: 64 Size: 16
	struct FString emoticonID;  // Offset: 80 Size: 16
	struct FString emotionItemId;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseSequenceSkipWidget Size 128
// Inherited 72 bytes 
class UCreateLicenseSequenceSkipWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseSeqeunceSkipWidgetClass;  // Offset: 72 Size: 40
	struct UDialogTemplate* SkipWidget;  // Offset: 112 Size: 8
	int32_t PlayCount;  // Offset: 120 Size: 4
	char pad_124[4];  // Offset: 124 Size: 4



 // Functions 
 public:
	void SkipSequence(int32_t InIndex); // Function KartDrift.CreateLicenseSequenceSkipWidget.SkipSequence
}; 
 
 


//Class KartDrift.C_RacingPassPageWidget Size 928
// Inherited 928 bytes 
class UC_RacingPassPageWidget : public URacingPassPageWidget
{

 public: 



 // Functions 
 public:
	void OnUnfocusedRacingPassRewardItem(int32_t InIndex); // Function KartDrift.C_RacingPassPageWidget.OnUnfocusedRacingPassRewardItem
	void OnFocusedRacingPassRewardItem(int32_t InIndex); // Function KartDrift.C_RacingPassPageWidget.OnFocusedRacingPassRewardItem
	void OnClickedRacingPassRewardItem(int32_t InIndex); // Function KartDrift.C_RacingPassPageWidget.OnClickedRacingPassRewardItem
	void FocusRacingPassRewardItem(int32_t InIndex, bool bForceLoadPawn); // Function KartDrift.C_RacingPassPageWidget.FocusRacingPassRewardItem
}; 
 
 


//Class KartDrift.LicenseCoinInterface Size 40
// Inherited 40 bytes 
class ULicenseCoinInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSetCustomProperty Size 88
// Inherited 56 bytes 
class UPqSetCustomProperty : public UPqPacket
{

 public: 
	struct FString Name;  // Offset: 56 Size: 16
	struct FString valueJsonString;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcSetCustomProperties Size 128
// Inherited 48 bytes 
class UPcSetCustomProperties : public UPcPacket
{

 public: 
	struct TMap<struct FString, struct FString> Properties;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetReportCount Size 56
// Inherited 56 bytes 
class UPqGetReportCount : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrCheckString Size 96
// Inherited 72 bytes 
class UPrCheckString : public UPrPacket
{

 public: 
	struct FString Text;  // Offset: 72 Size: 16
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool checkResult : 1;  // Offset: 88 Size: 1
	char pad_89[7];  // Offset: 89 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetReportCount Size 80
// Inherited 72 bytes 
class UPrGetReportCount : public UPrPacket
{

 public: 
	int32_t reportCount;  // Offset: 72 Size: 4
	int32_t maxReportCount;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableKartForcing Size 72
// Inherited 72 bytes 
class UDisableKartForcing : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetRecentPlayers Size 56
// Inherited 56 bytes 
class UPqGetRecentPlayers : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyPresetConfig Size 112
// Inherited 40 bytes 
class UKeyPresetConfig : public UObject
{

 public: 
	enum class EKeyPreset ActivePreset;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4
	struct FKeyPresetOverrides TraditionalPresetOverrides;  // Offset: 48 Size: 32
	struct FKeyPresetOverrides WASDPresetOverrides;  // Offset: 80 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetRecentPlayers Size 88
// Inherited 72 bytes 
class UPrGetRecentPlayers : public UPrPacket
{

 public: 
	struct TArray<struct FKtRecentGame> recentGames;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDataAsset Size 616
// Inherited 48 bytes 
class ULicenseDataAsset : public UDataAsset
{

 public: 
	struct FText TargetName;  // Offset: 48 Size: 24
	struct FKartDesc KartDesc;  // Offset: 72 Size: 184
	struct FCharacterDesc CharacterDesc;  // Offset: 256 Size: 96
	struct TSoftObjectPtr<UWorld> TrackLevel;  // Offset: 352 Size: 40
	struct TSoftObjectPtr<UWorld> TrackSubLevel;  // Offset: 392 Size: 40
	struct FString TrackName;  // Offset: 432 Size: 16
	int32_t LapCount;  // Offset: 448 Size: 4
	struct FLicenseBaseUI LicenseBaseUI;  // Offset: 452 Size: 7
	struct FLicenseSequenceUI LicenseSequenceUI;  // Offset: 459 Size: 3
	char pad_462[2];  // Offset: 462 Size: 2
	struct TArray<struct ULicenseContents*> LicenseContents;  // Offset: 464 Size: 16
	struct TSoftObjectPtr<ULevelSequence> StartSequenceTrackOverride;  // Offset: 480 Size: 40
	struct TSoftObjectPtr<ULevelSequence> FinishSequenceOverride;  // Offset: 520 Size: 40
	struct ULicenseStarCondition* Condition;  // Offset: 560 Size: 8
	struct TSoftClassPtr<UObject> WinningRule;  // Offset: 568 Size: 40
	char pad_608_1 : 7;  // Offset: 608 Size: 1
	bool bOverrideWorldOrigin : 1;  // Offset: 608 Size: 1
	char pad_609_1 : 7;  // Offset: 609 Size: 1
	bool bAllowAssist : 1;  // Offset: 609 Size: 1
	char pad_610_1 : 7;  // Offset: 610 Size: 1
	bool bDisableAutoDrive : 1;  // Offset: 610 Size: 1
	char pad_611_1 : 7;  // Offset: 611 Size: 1
	bool bDisableAutoDriftBoost : 1;  // Offset: 611 Size: 1
	char pad_612[4];  // Offset: 612 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AngelReaction Size 880
// Inherited 528 bytes 
class UAngelReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct USkeletalMeshComponent* MeshSkeletalComponent;  // Offset: 536 Size: 8
	struct UParticleSystemComponent* StartEffectComponent;  // Offset: 544 Size: 8
	struct UParticleSystemComponent* ActivateEffectComponent;  // Offset: 552 Size: 8
	struct TSoftObjectPtr<UFMODEvent> AffectSound;  // Offset: 560 Size: 40
	struct TSoftObjectPtr<UParticleSystem> StartEffect;  // Offset: 600 Size: 40
	struct TSoftObjectPtr<UParticleSystem> EndEffect;  // Offset: 640 Size: 40
	struct TSoftObjectPtr<UParticleSystem> UseEffect;  // Offset: 680 Size: 40
	struct TSoftObjectPtr<UParticleSystem> DefendedEffect;  // Offset: 720 Size: 40
	struct TSoftObjectPtr<UAnimMontage> AngelMontage;  // Offset: 760 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> AngelMesh;  // Offset: 800 Size: 40
	struct UItemComponent* LocalVictim;  // Offset: 840 Size: 8
	struct UAnimMontage* Montage;  // Offset: 848 Size: 8
	char pad_856[24];  // Offset: 856 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchKeyGuideInstWidget Size 624
// Inherited 608 bytes 
class UTouchKeyGuideInstWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* v_TextBlock;  // Offset: 608 Size: 8
	struct UWidgetAnimation* AlertAnimation;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetRecommandFriends Size 88
// Inherited 72 bytes 
class UPrGetRecommandFriends : public UPrPacket
{

 public: 
	struct TArray<struct FKtRecommandFriend> friends;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountParty Size 688
// Inherited 48 bytes 
class UAccountParty : public UAccountSubsystem
{

 public: 
	char pad_48[176];  // Offset: 48 Size: 176
	struct TMap<struct FString, struct FPartyMemberInfo> PartyMembers;  // Offset: 224 Size: 80
	struct FPartyInfo PartyInfo;  // Offset: 304 Size: 72
	struct FString PartyId;  // Offset: 376 Size: 16
	char pad_392_1 : 7;  // Offset: 392 Size: 1
	bool partyBoss : 1;  // Offset: 392 Size: 1
	char pad_393[295];  // Offset: 393 Size: 295



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetGnmMeta Size 72
// Inherited 56 bytes 
class UPqGetGnmMeta : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftGaugeWidget Size 608
// Inherited 608 bytes 
class UDriftGaugeWidget : public UUserWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedTeamAiPawn Size 944
// Inherited 936 bytes 
class ASpeedTeamAiPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCheckString Size 72
// Inherited 56 bytes 
class UPqCheckString : public UPqPacket
{

 public: 
	struct FString Text;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetAchievementInfo Size 56
// Inherited 56 bytes 
class UPqGetAchievementInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSpawnTrafficConeData Size 240
// Inherited 64 bytes 
class ULicenseSpawnTrafficConeData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bHitLoseRule : 1;  // Offset: 72 Size: 1
	char pad_73[3];  // Offset: 73 Size: 3
	int32_t HitScore;  // Offset: 76 Size: 4
	int32_t TrafficConeMess;  // Offset: 80 Size: 4
	char pad_84[4];  // Offset: 84 Size: 4
	struct TSoftObjectPtr<UStaticMesh> TrafficConeMeshClass;  // Offset: 88 Size: 40
	struct FString CheckPointName;  // Offset: 128 Size: 16
	char pad_144_1 : 7;  // Offset: 144 Size: 1
	bool bUpdateObjectSpawnSplineData : 1;  // Offset: 144 Size: 1
	char pad_145_1 : 7;  // Offset: 145 Size: 1
	bool bCreateLicenseObjectSpawnSplines : 1;  // Offset: 145 Size: 1
	char pad_146[6];  // Offset: 146 Size: 6
	struct TArray<struct FTransform> LicenseSpawnTransformList;  // Offset: 152 Size: 16
	struct TArray<struct FLicenseObjectSpawnSplineData> ObjectSpawnSplineDataList;  // Offset: 168 Size: 16
	struct TSoftObjectPtr<UFMODEvent> SoundEvent;  // Offset: 184 Size: 40
	struct TArray<struct ALicenseTrafficCone*> TrafficConeList;  // Offset: 224 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameLiftKdGameSession Size 1088
// Inherited 568 bytes 
class AGameLiftKdGameSession : public AKdGameSession
{

 public: 
	char pad_568[48];  // Offset: 568 Size: 48
	struct TMap<struct FString, struct FString> SmsPlayerSessionId2PlayerId;  // Offset: 616 Size: 80
	struct UKtSessionRequestBody* SessionRequest;  // Offset: 696 Size: 8
	char pad_704[16];  // Offset: 704 Size: 16
	struct TMap<struct FString, struct UKtSessionPlayer*> players;  // Offset: 720 Size: 80
	struct TMap<struct FString, struct UKtSessionObserver*> observers;  // Offset: 800 Size: 80
	char pad_880[88];  // Offset: 880 Size: 88
	struct USessionApiServer* SessionApiServer;  // Offset: 968 Size: 8
	char pad_976[24];  // Offset: 976 Size: 24
	struct USmsProvider* Sms;  // Offset: 1000 Size: 8
	char pad_1008[80];  // Offset: 1008 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAchievementGlobalAnnounce Size 64
// Inherited 48 bytes 
class UPcAchievementGlobalAnnounce : public UPcPacket
{

 public: 
	struct FString achievementId;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartEventComponent Size 1208
// Inherited 176 bytes 
class UKartEventComponent : public UActorComponent
{

 public: 
	char pad_176[784];  // Offset: 176 Size: 784
	struct UMaterialParameterCollection* CachedCollection;  // Offset: 960 Size: 8
	struct AExponentialHeightFog* Fog;  // Offset: 968 Size: 8
	struct FCPFogData WorldFogData;  // Offset: 976 Size: 104
	struct FCPFogData FogData;  // Offset: 1080 Size: 104
	float Duration;  // Offset: 1184 Size: 4
	float BlendProgress;  // Offset: 1188 Size: 4
	float BlendPeriod;  // Offset: 1192 Size: 4
	float BlendInTime;  // Offset: 1196 Size: 4
	float BlendOutTime;  // Offset: 1200 Size: 4
	char pad_1204[4];  // Offset: 1204 Size: 4



 // Functions 
 public:
	void OnCrash(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.KartEventComponent.OnCrash
}; 
 
 


//Class KartDrift.BelongingStatics Size 40
// Inherited 40 bytes 
class UBelongingStatics : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetEventChallengeInfo Size 56
// Inherited 56 bytes 
class UPqGetEventChallengeInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAllyActorData Size 96
// Inherited 64 bytes 
class ULicenseAllyActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FLicenseAllyActorInfo> LicenseSpawnActorDataList;  // Offset: 64 Size: 16
	float Offset;  // Offset: 80 Size: 4
	float Score;  // Offset: 84 Size: 4
	float Scale;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WrongWayWidget Size 632
// Inherited 608 bytes 
class UWrongWayWidget : public UUserWidget
{

 public: 
	struct UFMODEvent* WrongWaySound;  // Offset: 608 Size: 8
	char pad_616[8];  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_Wrongway;  // Offset: 624 Size: 8



 // Functions 
 public:
	void OnWrongWay(bool bWrongWay); // Function KartDrift.WrongWayWidget.OnWrongWay
}; 
 
 


//Class KartDrift.PqRemoveNews Size 72
// Inherited 56 bytes 
class UPqRemoveNews : public UPqPacket
{

 public: 
	struct FString ID;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUserInfo Size 72
// Inherited 56 bytes 
class UPqUserInfo : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcNews Size 80
// Inherited 48 bytes 
class UPcNews : public UPcPacket
{

 public: 
	struct TArray<struct FString> inserted;  // Offset: 48 Size: 16
	struct TArray<struct FString> removed;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseManager Size 544
// Inherited 544 bytes 
class ALicenseManager : public AActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestSetKartRaceOver Size 72
// Inherited 72 bytes 
class UShadowQuestSetKartRaceOver : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDrivePhaseComponent Size 488
// Inherited 432 bytes 
class UAllLevelAutoDrivePhaseComponent : public USpeedSinglePhaseComponent
{

 public: 
	char pad_432[56];  // Offset: 432 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FMODSkeletalMeshActor Size 688
// Inherited 680 bytes 
class AFMODSkeletalMeshActor : public AKdSkeletalMeshActor
{

 public: 
	struct UFMODNotifyComponent* FMODNotifyComponent;  // Offset: 680 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdHelper Size 40
// Inherited 40 bytes 
class UKdHelper : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
	struct UKdGameInstance* GetKdInstance(struct UObject* WorldContextObject); // Function KartDrift.KdHelper.GetKdInstance
	struct UKdService* GetInst(struct UObject* WorldContextObject); // Function KartDrift.KdHelper.GetInst
}; 
 
 


//Class KartDrift.PlatformSessionProperty Size 96
// Inherited 40 bytes 
class UPlatformSessionProperty : public UObject
{

 public: 
	enum class EPlatformSessionType Type;  // Offset: 40 Size: 1
	char pad_41[7];  // Offset: 41 Size: 7
	struct FString accountId;  // Offset: 48 Size: 16
	struct FString PartyId;  // Offset: 64 Size: 16
	struct FString csId;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WqReply Size 80
// Inherited 56 bytes 
class UWqReply : public UPqPacket
{

 public: 
	struct FString ID;  // Offset: 56 Size: 16
	struct UObject* Reply;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSignedUrl Size 88
// Inherited 56 bytes 
class UPqSignedUrl : public UPqPacket
{

 public: 
	struct FString contents;  // Offset: 56 Size: 16
	struct TArray<struct FString> UniqueId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqReportLiveryInfo Size 72
// Inherited 56 bytes 
class UPqReportLiveryInfo : public UPqPacket
{

 public: 
	struct FString npsn;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SystemPopupLogicComponent Size 256
// Inherited 224 bytes 
class USystemPopupLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[24];  // Offset: 224 Size: 24
	struct UKdServicePopup* ServicePopup;  // Offset: 248 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NormalChallengePageWidget Size 744
// Inherited 744 bytes 
class UNormalChallengePageWidget : public UKdPageWidget
{

 public: 



 // Functions 
 public:
	void OnUpdate_ShortCutButtonVisibility(bool bVisibility); // Function KartDrift.NormalChallengePageWidget.OnUpdate_ShortCutButtonVisibility
	void OnUpdate_QuestUI(bool bInit); // Function KartDrift.NormalChallengePageWidget.OnUpdate_QuestUI
	void OnRewardListButtonClicked(int32_t ButtonIndex); // Function KartDrift.NormalChallengePageWidget.OnRewardListButtonClicked
	void OnClickedShortCut(int32_t nIndex); // Function KartDrift.NormalChallengePageWidget.OnClickedShortCut
	void NormalChallenge_OnClickedBackButton(int32_t InIndex); // Function KartDrift.NormalChallengePageWidget.NormalChallenge_OnClickedBackButton
	void ListAllEventByCheat(struct FString seasonId); // Function KartDrift.NormalChallengePageWidget.ListAllEventByCheat
}; 
 
 


//Class KartDrift.ShopPageWidget Size 1160
// Inherited 744 bytes 
class UShopPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[232];  // Offset: 744 Size: 232
	struct TMap<int32_t, struct FString> PriceCurrencyInfos;  // Offset: 976 Size: 80
	char pad_1056[8];  // Offset: 1056 Size: 8
	struct FString SelectedShopStockID;  // Offset: 1064 Size: 16
	struct FString ShopStockIDForEnterDateOfBirth;  // Offset: 1080 Size: 16
	char pad_1096[48];  // Offset: 1096 Size: 48
	struct TWeakObjectPtr<URiderNameChangeDialog> RiderNameChangeWidget;  // Offset: 1144 Size: 8
	char pad_1152[8];  // Offset: 1152 Size: 8



 // Functions 
 public:
	void UpdateRestTimeInItemList(struct FDateTime ServerTime); // Function KartDrift.ShopPageWidget.UpdateRestTimeInItemList
	void UpdateRestTimeInItemDetailWidget(struct FDateTime ServerTime); // Function KartDrift.ShopPageWidget.UpdateRestTimeInItemDetailWidget
	void UpdateRestTimeInConfirmItemList(struct FDateTime ServerTime); // Function KartDrift.ShopPageWidget.UpdateRestTimeInConfirmItemList
	void ShowRiderNameChangeDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.ShowRiderNameChangeDialog
	void ShowPurchaseConfirm(); // Function KartDrift.ShopPageWidget.ShowPurchaseConfirm
	void ShowNxACheckoutWidget(struct FString LoadURL); // Function KartDrift.ShopPageWidget.ShowNxACheckoutWidget
	void ShowNotSalePeriodPopup(); // Function KartDrift.ShopPageWidget.ShowNotSalePeriodPopup
	void ShowNotEnoughBalancePopup(int32_t InIndex); // Function KartDrift.ShopPageWidget.ShowNotEnoughBalancePopup
	void ShowFailRefundFailPopup(); // Function KartDrift.ShopPageWidget.ShowFailRefundFailPopup
	void ShowFailPurchasingPopup(); // Function KartDrift.ShopPageWidget.ShowFailPurchasingPopup
	void ShowFailPickupPopup(); // Function KartDrift.ShopPageWidget.ShowFailPickupPopup
	void ShowFailInventoryAddStockPopup(int32_t InIndex); // Function KartDrift.ShopPageWidget.ShowFailInventoryAddStockPopup
	void ShowFailCashLockPopup(); // Function KartDrift.ShopPageWidget.ShowFailCashLockPopup
	void SetLucci(int32_t lucci); // Function KartDrift.ShopPageWidget.SetLucci
	void SetKcoin(int32_t Kcoin); // Function KartDrift.ShopPageWidget.SetKcoin
	void SetCash(double Cash, struct FString currency); // Function KartDrift.ShopPageWidget.SetCash
	void RequestRiderNameChangeReserve(struct FString InRiderName); // Function KartDrift.ShopPageWidget.RequestRiderNameChangeReserve
	void RequestRiderNameChangeConfirm(); // Function KartDrift.ShopPageWidget.RequestRiderNameChangeConfirm
	void RequestChangeRadierName(struct FString InRiderName, float RemainReserveTime); // Function KartDrift.ShopPageWidget.RequestChangeRadierName
	void PurchaseLevelDialog_OnClickedShowReward(int32_t InIndex); // Function KartDrift.ShopPageWidget.PurchaseLevelDialog_OnClickedShowReward
	void PurchaseLevelDialog_OnClickedMaxLevel(int32_t InIndex); // Function KartDrift.ShopPageWidget.PurchaseLevelDialog_OnClickedMaxLevel
	void PurchaseLevelDialog_OnClickedIncrease(int32_t InIndex); // Function KartDrift.ShopPageWidget.PurchaseLevelDialog_OnClickedIncrease
	void PurchaseLevelDialog_OnClickedDecrease(int32_t InIndex); // Function KartDrift.ShopPageWidget.PurchaseLevelDialog_OnClickedDecrease
	void PurchaseLevelDialog_OnClickedBack(int32_t InIndex); // Function KartDrift.ShopPageWidget.PurchaseLevelDialog_OnClickedBack
	void OnUpdateRiderNameChangeInfo(); // Function KartDrift.ShopPageWidget.OnUpdateRiderNameChangeInfo
	void OnUncheckedStateAgree(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnUncheckedStateAgree
	void OnToyVerifyPayment(bool bSucceed); // Function KartDrift.ShopPageWidget.OnToyVerifyPayment
	void OnToyRequestToyBillingProduct(int32_t& ErrorCode); // Function KartDrift.ShopPageWidget.OnToyRequestToyBillingProduct
	void OnTextChangedOnEnterDateOfBirthPopup(struct FText& Text); // Function KartDrift.ShopPageWidget.OnTextChangedOnEnterDateOfBirthPopup
	void OnRiderNameChangeReserve(); // Function KartDrift.ShopPageWidget.OnRiderNameChangeReserve
	void OnRiderNameChangeConfirmError(); // Function KartDrift.ShopPageWidget.OnRiderNameChangeConfirmError
	void OnRiderNameChangeConfirm(); // Function KartDrift.ShopPageWidget.OnRiderNameChangeConfirm
	void OnRefundConfirmItem(struct TArray<struct FString>& ShopStockItemIDs); // Function KartDrift.ShopPageWidget.OnRefundConfirmItem
	void OnPickupConfirmItem(struct TArray<struct FString>& ShopStockItemIDs); // Function KartDrift.ShopPageWidget.OnPickupConfirmItem
	void OnFocusFocusableButtonInMain(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnFocusFocusableButtonInMain
	void OnFocusFocusableButtonInKCoinPackageList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnFocusFocusableButtonInKCoinPackageList
	void OnFocusFocusableButtonInKCoinList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnFocusFocusableButtonInKCoinList
	void OnFocusFocusableButtonInDetail(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnFocusFocusableButtonInDetail
	void OnExpiredConfirmItemTime(struct FString ExpiredShopStockItemID, int32_t& ExpiredShopStockItemIndex); // Function KartDrift.ShopPageWidget.OnExpiredConfirmItemTime
	void OnConfirmPurchasingItem(struct TArray<struct FString>& StockItemIDs); // Function KartDrift.ShopPageWidget.OnConfirmPurchasingItem
	void OnClickedWithDrawSubscription(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedWithDrawSubscription
	void OnClickedToggleFriendList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedToggleFriendList
	void OnClickedStudio(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedStudio
	void OnClickedShowPurchaseConfirmList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedShowPurchaseConfirmList
	void OnClickedShowKcoinPriceDetail(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedShowKcoinPriceDetail
	void OnClickedShowItemListOnConfirmListDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedShowItemListOnConfirmListDialog
	void OnClickedShowAgreeTerms(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedShowAgreeTerms
	void OnClickedPurchaseConfirmStockItem(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPurchaseConfirmStockItem
	void OnClickedPurchaseButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPurchaseButton
	void OnClickedPromotionPrev(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPromotionPrev
	void OnClickedPromotionNext(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPromotionNext
	void OnClickedPromotionItem(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPromotionItem
	void OnClickedPricePreview(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPricePreview
	void OnClickedPaymentLaw(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedPaymentLaw
	void OnClickedOpenMailPage(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedOpenMailPage
	void OnClickedMyKcoinInfo(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedMyKcoinInfo
	void OnClickedMainTabPrev(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedMainTabPrev
	void OnClickedMainTabNext(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedMainTabNext
	void OnClickedKcoinPackageEntryButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedKcoinPackageEntryButton
	void OnClickedKcoinListButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedKcoinListButton
	void OnClickedGiftButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedGiftButton
	void OnClickedFriendListEntry(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedFriendListEntry
	void OnClickedFocusableButtonInMain(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedFocusableButtonInMain
	void OnClickedFocusableButtonInKCoinList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedFocusableButtonInKCoinList
	void OnClickedEquipAllButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedEquipAllButton
	void OnClickedConfirmPurchaseResult(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedConfirmPurchaseResult
	void OnClickedConfirmPurchase(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedConfirmPurchase
	void OnClickedConfirmOnKcoinList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedConfirmOnKcoinList
	void OnClickedConfirmOnEnterDateOfBirthPopup(int32_t Index); // Function KartDrift.ShopPageWidget.OnClickedConfirmOnEnterDateOfBirthPopup
	void OnClickedConfirmOnConfirmListDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedConfirmOnConfirmListDialog
	void OnClickedConfirmAllOnConfirmListDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedConfirmAllOnConfirmListDialog
	void OnClickedCommercialLaw(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCommercialLaw
	void OnClickedCashKcoinLucci(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCashKcoinLucci
	void OnClickedCancelPurchaseResult(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCancelPurchaseResult
	void OnClickedCancelOnPurchaseResultDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCancelOnPurchaseResultDialog
	void OnClickedCancelOnPurchaseConfirmDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCancelOnPurchaseConfirmDialog
	void OnClickedCancelOnEnterDateOfBirthPopup(int32_t Index); // Function KartDrift.ShopPageWidget.OnClickedCancelOnEnterDateOfBirthPopup
	void OnClickedCancelOnConfirmListDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedCancelOnConfirmListDialog
	void OnClickedBackOnPurchaseWidget(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedBackOnPurchaseWidget
	void OnClickedBackOnMyKcoinPopup(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedBackOnMyKcoinPopup
	void OnClickedBackOnKcoinList(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedBackOnKcoinList
	void OnClickedBackOnConfirmListDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedBackOnConfirmListDialog
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickedBackButton
	void OnClickConfirmDialogPurchaseCheckBtn(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickConfirmDialogPurchaseCheckBtn
	void OnClickConfirmDialogConfirmBtn(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickConfirmDialogConfirmBtn
	void OnClickConfirmDialogCancelBtn(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnClickConfirmDialogCancelBtn
	void OnCheckedStateAgree(int32_t InIndex); // Function KartDrift.ShopPageWidget.OnCheckedStateAgree
	void MoveNextPromotionPage(); // Function KartDrift.ShopPageWidget.MoveNextPromotionPage
	void HidePurchaseWaitingThrobberUI(); // Function KartDrift.ShopPageWidget.HidePurchaseWaitingThrobberUI
	void CloseShopPurchaseConfirmStockItemAllDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.CloseShopPurchaseConfirmStockItemAllDialog
	void CloseShopPurchaseConfirmDialog(int32_t InIndex); // Function KartDrift.ShopPageWidget.CloseShopPurchaseConfirmDialog
	void ClosePurchaseRacingPassStockItemCompletePopup(int32_t InIndex); // Function KartDrift.ShopPageWidget.ClosePurchaseRacingPassStockItemCompletePopup
	void CloseAutoConfirmItemsPopup(int32_t InIndex); // Function KartDrift.ShopPageWidget.CloseAutoConfirmItemsPopup
	void CancelRiderNameChange(); // Function KartDrift.ShopPageWidget.CancelRiderNameChange
}; 
 
 


//Class KartDrift.PqReportLivery Size 144
// Inherited 56 bytes 
class UPqReportLivery : public UPqPacket
{

 public: 
	struct FString npsn;  // Offset: 56 Size: 16
	struct FString riderName;  // Offset: 72 Size: 16
	struct FString KartID;  // Offset: 88 Size: 16
	struct FString liveryId;  // Offset: 104 Size: 16
	struct FString liveryLabel;  // Offset: 120 Size: 16
	enum class EKtLiveryState State;  // Offset: 136 Size: 1
	char pad_137[7];  // Offset: 137 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrReportLivery Size 112
// Inherited 72 bytes 
class UPrReportLivery : public UPrPacket
{

 public: 
	struct FString npsn;  // Offset: 72 Size: 16
	struct FString liveryId;  // Offset: 88 Size: 16
	enum class EKtLiveryState State;  // Offset: 104 Size: 1
	char pad_105[7];  // Offset: 105 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqReportLiveryDeleteConfirm Size 56
// Inherited 56 bytes 
class UPqReportLiveryDeleteConfirm : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BalloonComponent Size 3920
// Inherited 3856 bytes 
class UBalloonComponent : public USkeletalMeshComponent
{

 public: 
	char pad_3856[16];  // Offset: 3856 Size: 16
	struct FString BalloonId;  // Offset: 3872 Size: 16
	struct UKartSkeletalMeshComponent* KartSkeletalMeshComponent;  // Offset: 3888 Size: 8
	struct USkeletalMeshComponent* BalloonMeshComponent;  // Offset: 3896 Size: 8
	struct UBelongingDataAssetBalloonCable* BalloonCableDataAsset;  // Offset: 3904 Size: 8
	struct UBelongingDataAssetBalloon* BalloonDataAsset;  // Offset: 3912 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemMine Size 1160
// Inherited 856 bytes 
class AItemMine : public AItem
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 856 Size: 40
	float ActionDelay;  // Offset: 896 Size: 4
	float LifeSpanTime;  // Offset: 900 Size: 4
	char pad_904[8];  // Offset: 904 Size: 8
	struct TArray<struct USkeletalMeshComponent*> MineSkeletalMeshComponents;  // Offset: 912 Size: 16
	struct TArray<struct USphereComponent*> OverlapComponents;  // Offset: 928 Size: 16
	struct TSoftObjectPtr<USkeletalMesh> MineMesh;  // Offset: 944 Size: 40
	struct TSoftObjectPtr<UFMODEvent> IdleBeepSoundAsset;  // Offset: 984 Size: 40
	struct TSoftObjectPtr<UAnimSequenceBase> MineAnim;  // Offset: 1024 Size: 40
	struct TSoftObjectPtr<UCurveFloat> DropCurveAsset;  // Offset: 1064 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1104 Size: 40
	char pad_1144[16];  // Offset: 1144 Size: 16



 // Functions 
 public:
	void MulticastSpawn(struct UItemComponent* User, struct TArray<struct FVector> MineLocations); // Function KartDrift.ItemMine.MulticastSpawn
	void MulticastAffectTo(struct UItemComponent* InVictim, int32_t InIndex, bool bHit); // Function KartDrift.ItemMine.MulticastAffectTo
	void MulticastActivate(struct UItemComponent* User); // Function KartDrift.ItemMine.MulticastActivate
	void ClientBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemMine.ClientBeginOverlap
}; 
 
 


//Class KartDrift.PqRegisterRecentActivity Size 80
// Inherited 56 bytes 
class UPqRegisterRecentActivity : public UPqPacket
{

 public: 
	enum class EKtRecentActivityType Type;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7
	struct FString Val;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_IfSetupComplete Size 80
// Inherited 80 bytes 
class UTransition_IfSetupComplete : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetCharacter Size 104
// Inherited 64 bytes 
class UBelongingDataAssetCharacter : public UBelongingDataAsset
{

 public: 
	struct FString CharacterItemKey;  // Offset: 64 Size: 16
	struct TArray<struct FString> CostumeKeyContainer;  // Offset: 80 Size: 16
	struct UFMODEvent* SuccessVoice;  // Offset: 96 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRegisterTag Size 72
// Inherited 72 bytes 
class UPrRegisterTag : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandAddBalance Size 72
// Inherited 72 bytes 
class UPqCommandAddBalance : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GarageLogicComponent Size 720
// Inherited 224 bytes 
class UGarageLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[152];  // Offset: 224 Size: 152
	struct FKtItemPreset CurrentPreset;  // Offset: 376 Size: 160
	struct TWeakObjectPtr<AOutGamePawn> ItemModelPawn;  // Offset: 536 Size: 8
	struct TWeakObjectPtr<ULevelSequencePlayer> KartSelectionSequencePlayer;  // Offset: 544 Size: 8
	char pad_552[168];  // Offset: 552 Size: 168



 // Functions 
 public:
	void OnUserLevelUpdated(enum class EUserLevelUpdatedType InType, int32_t InLevel); // Function KartDrift.GarageLogicComponent.OnUserLevelUpdated
	void OnUpdatePartyState(enum class EPartyChageState ChangeState); // Function KartDrift.GarageLogicComponent.OnUpdatePartyState
	void OnUpdateContentEnableState(); // Function KartDrift.GarageLogicComponent.OnUpdateContentEnableState
	void OnStartMatch(struct TArray<enum class ERaceMode> GameType); // Function KartDrift.GarageLogicComponent.OnStartMatch
	void OnFinishedKartSelectionSequence(); // Function KartDrift.GarageLogicComponent.OnFinishedKartSelectionSequence
}; 
 
 


//Class KartDrift.KdSequenceDirector Size 112
// Inherited 56 bytes 
class UKdSequenceDirector : public ULevelSequenceDirector
{

 public: 
	struct TArray<struct AActor*> RegisteredActor;  // Offset: 56 Size: 16
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 72 Size: 40



 // Functions 
 public:
	void UseItemForceTransform(struct APawn* Pawn, enum class EItemType ItemType, struct FTransform TargetTransform); // Function KartDrift.KdSequenceDirector.UseItemForceTransform
	void UseItem(struct APawn* Pawn, enum class EItemType ItemType, struct TArray<struct FString>& TargetPawn); // Function KartDrift.KdSequenceDirector.UseItem
	void SetPawnInit(struct APawn* Pawn, struct USequencerEquipData* DataAsset, struct FString PawnName); // Function KartDrift.KdSequenceDirector.SetPawnInit
	void PlayFX(struct APawn* Pawn, struct FString FxTypeString, struct UCurveFloat* Curve, float PlayTime); // Function KartDrift.KdSequenceDirector.PlayFX
	void OnSkipOrRemoved(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function KartDrift.KdSequenceDirector.OnSkipOrRemoved
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.KdSequenceDirector.OnAffectedBy
}; 
 
 


//Class KartDrift.PqShopPurchaseCancelSteam Size 72
// Inherited 56 bytes 
class UPqShopPurchaseCancelSteam : public UPqPacket
{

 public: 
	struct FString orderId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DummyGameSession Size 576
// Inherited 568 bytes 
class ADummyGameSession : public AKdGameSession
{

 public: 
	char pad_568[8];  // Offset: 568 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcFirstBuyPlatform Size 56
// Inherited 48 bytes 
class UPcFirstBuyPlatform : public UPcPacket
{

 public: 
	enum class EKtAffiliatePlatform firstBuyPlatform;  // Offset: 48 Size: 1
	char pad_49[7];  // Offset: 49 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartPartAnimInstance Size 720
// Inherited 704 bytes 
class UKartPartAnimInstance : public UAnimInstance
{

 public: 
	char pad_704_1 : 7;  // Offset: 704 Size: 1
	bool bTransforming : 1;  // Offset: 696 Size: 1
	char pad_705_1 : 7;  // Offset: 705 Size: 1
	bool bTransformed : 1;  // Offset: 697 Size: 1
	char pad_706_1 : 7;  // Offset: 706 Size: 1
	bool bUntransforming : 1;  // Offset: 698 Size: 1
	char pad_707_1 : 7;  // Offset: 707 Size: 1
	bool bUntransformed : 1;  // Offset: 699 Size: 1
	float TransformAnimRate;  // Offset: 700 Size: 4
	struct UAnimSequenceBase* AnimTransform;  // Offset: 712 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCumulativePlayInfo Size 56
// Inherited 56 bytes 
class UPqCumulativePlayInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqJoinCustomGame Size 72
// Inherited 56 bytes 
class UPqJoinCustomGame : public UPqPacket
{

 public: 
	struct FString SessionId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SplineAniActor Size 592
// Inherited 544 bytes 
class ASplineAniActor : public AActor
{

 public: 
	struct AActor* ActorHavingSplineComponent;  // Offset: 544 Size: 8
	float PlayRate;  // Offset: 552 Size: 4
	char pad_556_1 : 7;  // Offset: 556 Size: 1
	bool bUseFmodAudio : 1;  // Offset: 556 Size: 1
	char pad_557_1 : 7;  // Offset: 557 Size: 1
	bool bRewindStyle : 1;  // Offset: 557 Size: 1
	char pad_558[2];  // Offset: 558 Size: 2
	float StartDelay;  // Offset: 560 Size: 4
	float PreviewTime;  // Offset: 564 Size: 4
	char pad_568[8];  // Offset: 568 Size: 8
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 576 Size: 8
	struct USplineComponent* TargetSplineComponent;  // Offset: 584 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrCumulativePlayInfo Size 96
// Inherited 72 bytes 
class UPrCumulativePlayInfo : public UPrPacket
{

 public: 
	int32_t playTimeMin;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct TArray<int32_t> platformLoginCounts;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseReportWidget Size 848
// Inherited 816 bytes 
class ULicenseReportWidget : public UDialogTemplate
{

 public: 
	struct UWidgetSwitcher* SW_Splash;  // Offset: 816 Size: 8
	struct UWidgetAnimation* Anim_Result;  // Offset: 824 Size: 8
	char pad_832[16];  // Offset: 832 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdProfilerWidget Size 632
// Inherited 608 bytes 
class UKdProfilerWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 616 Size: 8
	struct FDateTime FPSChartStartTime;  // Offset: 624 Size: 8



 // Functions 
 public:
	void StopFPSChart(); // Function KartDrift.KdProfilerWidget.StopFPSChart
	void StopCheckHitch(); // Function KartDrift.KdProfilerWidget.StopCheckHitch
	void StartFPSChart(); // Function KartDrift.KdProfilerWidget.StartFPSChart
	void StartCheckHitch(); // Function KartDrift.KdProfilerWidget.StartCheckHitch
	void SetHitchFrameTimeThreshold(float Value); // Function KartDrift.KdProfilerWidget.SetHitchFrameTimeThreshold
	void OnHitchDetected(enum class EKdFrameHitchType HitchType, float HitchDurationInSeconds); // Function KartDrift.KdProfilerWidget.OnHitchDetected
	bool IsActiveStats(); // Function KartDrift.KdProfilerWidget.IsActiveStats
	struct FString GetTotalRaceTimeString(); // Function KartDrift.KdProfilerWidget.GetTotalRaceTimeString
	float GetTotalRaceTime(); // Function KartDrift.KdProfilerWidget.GetTotalRaceTime
	float GetHitchFrameTimeThreshold(); // Function KartDrift.KdProfilerWidget.GetHitchFrameTimeThreshold
	float GetFrameRateLimit(); // Function KartDrift.KdProfilerWidget.GetFrameRateLimit
	float GetFPSChartDeltaTime(); // Function KartDrift.KdProfilerWidget.GetFPSChartDeltaTime
}; 
 
 


//Class KartDrift.PqGetMail Size 72
// Inherited 56 bytes 
class UPqGetMail : public UPqPacket
{

 public: 
	struct FString mailId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqMobileStoreReviewOpenInfo Size 56
// Inherited 56 bytes 
class UPqMobileStoreReviewOpenInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrMobileStoreReviewOpenInfo Size 96
// Inherited 72 bytes 
class UPrMobileStoreReviewOpenInfo : public UPrPacket
{

 public: 
	struct FKtMobileStoreReviewOpenInfo Data;  // Offset: 72 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemAimWidget Size 800
// Inherited 608 bytes 
class UItemAimWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_OnButtonPress;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_ButtonPressing;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Anim_OnButtonRelease;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_LockOn;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_LockOn_Release;  // Offset: 648 Size: 8
	struct UOverlay* MasterOverlay;  // Offset: 656 Size: 8
	char pad_664[48];  // Offset: 664 Size: 48
	float OnButtonPressSpeed;  // Offset: 712 Size: 4
	float ButtonPressingSpeed;  // Offset: 716 Size: 4
	float OnButtonReleaseSpeed;  // Offset: 720 Size: 4
	float LockOnSpeed;  // Offset: 724 Size: 4
	float LockOnReleaseSpeed;  // Offset: 728 Size: 4
	char pad_732[4];  // Offset: 732 Size: 4
	struct AActor* LastTarget;  // Offset: 736 Size: 8
	char pad_744[16];  // Offset: 744 Size: 16
	struct TArray<struct UFMODEvent*> AimSounds;  // Offset: 760 Size: 16
	struct UFMODEvent* TargetOnMeSound;  // Offset: 776 Size: 8
	char pad_784[16];  // Offset: 784 Size: 16



 // Functions 
 public:
	void OnDeadEnd(); // Function KartDrift.ItemAimWidget.OnDeadEnd
	void OnBirthEnd(); // Function KartDrift.ItemAimWidget.OnBirthEnd
}; 
 
 


//Class KartDrift.CouponPageWidget Size 776
// Inherited 744 bytes 
class UCouponPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* CouponDialogWidget;  // Offset: 744 Size: 8
	struct UDialogTemplate* RewardDialogWidget;  // Offset: 752 Size: 8
	char pad_760[16];  // Offset: 760 Size: 16



 // Functions 
 public:
	void OpenCouponDialog(); // Function KartDrift.CouponPageWidget.OpenCouponDialog
	void OnSubmitCouponCode(int32_t InIndex); // Function KartDrift.CouponPageWidget.OnSubmitCouponCode
	void OnOpenCouponResultDialog(enum class EPrCouponResult Result, int32_t ErrorCode, struct TArray<struct FKtItem>& Items, struct TArray<struct FString>& Duplicates); // Function KartDrift.CouponPageWidget.OnOpenCouponResultDialog
	void OnCouponIdTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function KartDrift.CouponPageWidget.OnCouponIdTextCommitted
	void OnCouponIdTextChanged(struct FText& Text); // Function KartDrift.CouponPageWidget.OnCouponIdTextChanged
	void OnCloseRewardDialog(int32_t InIndex); // Function KartDrift.CouponPageWidget.OnCloseRewardDialog
	void OnCloseCouponDialog(int32_t InIndex); // Function KartDrift.CouponPageWidget.OnCloseCouponDialog
}; 
 
 


//Class KartDrift.TouchBrakeButton Size 696
// Inherited 696 bytes 
class UTouchBrakeButton : public UTouchInputButton
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqUpdateMobileStoreReviewOpenCount Size 56
// Inherited 56 bytes 
class UPqUpdateMobileStoreReviewOpenCount : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CheckIfTrackPlayListValid Size 72
// Inherited 72 bytes 
class UCheckIfTrackPlayListValid : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShopConfirmItem Size 264
// Inherited 120 bytes 
class UShopConfirmItem : public UShopFuncClass
{

 public: 
	char pad_120[96];  // Offset: 120 Size: 96
	struct TArray<struct FInventoryItemKrPc> ShopConfirmStocks;  // Offset: 216 Size: 16
	struct TArray<struct FString> ShopAutoConfirmedStockIDs;  // Offset: 232 Size: 16
	struct TArray<struct FKtShopStock> ShopAutoConfirmedStocks;  // Offset: 248 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreatePlayMissionWidget Size 112
// Inherited 72 bytes 
class UCreatePlayMissionWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> PlayMissionWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrUpdateMobileStoreReviewOpenCount Size 88
// Inherited 72 bytes 
class UPrUpdateMobileStoreReviewOpenCount : public UPrPacket
{

 public: 
	int32_t Count;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4
	struct FDateTime openTime;  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRiderNameChangeInfo Size 56
// Inherited 56 bytes 
class UPqRiderNameChangeInfo : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftTutorialData Size 240
// Inherited 64 bytes 
class ULicenseDriftTutorialData : public ULicenseContents
{

 public: 
	struct TArray<struct FLicenseDriftTutorialChapter> ChapterList;  // Offset: 64 Size: 16
	struct TSoftClassPtr<UObject> TitleWidgetClass;  // Offset: 80 Size: 40
	struct TSoftClassPtr<UObject> MissionWidgetClass;  // Offset: 120 Size: 40
	struct TSoftObjectPtr<UParticleSystem> NextPointParticle;  // Offset: 160 Size: 40
	struct FLinearColor NextPointOverlappedColor;  // Offset: 200 Size: 16
	float NextPointScale;  // Offset: 216 Size: 4
	float NextPointCollisionRadius;  // Offset: 220 Size: 4
	float DistanceFromNextChapterZone;  // Offset: 224 Size: 4
	float NextPointSpawnDelayTime;  // Offset: 228 Size: 4
	int32_t CurrentChapterIndex;  // Offset: 232 Size: 4
	char pad_236[4];  // Offset: 236 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRiderNameChangeInfo Size 88
// Inherited 72 bytes 
class UPrRiderNameChangeInfo : public UPrPacket
{

 public: 
	struct FKtRiderNameChange riderNameChange;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DetailLevelProgressWidget Size 712
// Inherited 608 bytes 
class UDetailLevelProgressWidget : public UUserWidget
{

 public: 
	struct UImage* V_SideColorBar;  // Offset: 608 Size: 8
	struct UPlatformIconWidget* V_PlatformIconWidget;  // Offset: 616 Size: 8
	struct USizeBox* V_GrandPrixTier;  // Offset: 624 Size: 8
	struct UGrandPrixTierIconWidget* V_GrandPrixTierIcon;  // Offset: 632 Size: 8
	struct UKdTextBlock* V_Name;  // Offset: 640 Size: 8
	struct UKdTextBlock* V_Level;  // Offset: 648 Size: 8
	struct UKdTextBlock* V_LevelMax;  // Offset: 656 Size: 8
	struct UKdTextBlock* V_LevelUp;  // Offset: 664 Size: 8
	struct UKdTextBlock* V_CurrentExp;  // Offset: 672 Size: 8
	struct UKdTextBlock* V_ExpBound;  // Offset: 680 Size: 8
	struct UKdTextBlock* V_AddedExp;  // Offset: 688 Size: 8
	struct UMajorResultProgressWidget* V_ProgressBar;  // Offset: 696 Size: 8
	enum class ELevelType LevelType;  // Offset: 704 Size: 1
	char pad_705[7];  // Offset: 705 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountReport Size 96
// Inherited 48 bytes 
class UAccountReport : public UAccountSubsystem
{

 public: 
	char pad_48[48];  // Offset: 48 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRiderNameChangeReserve Size 72
// Inherited 56 bytes 
class UPqRiderNameChangeReserve : public UPqPacket
{

 public: 
	struct FString riderName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_TimeAttackPersonalResultWidget Size 1112
// Inherited 1096 bytes 
class UM_TimeAttackPersonalResultWidget : public UTimeAttackPersonalResultWidget
{

 public: 
	struct UButtonTemplate* V_RetryButton;  // Offset: 1096 Size: 8
	struct UButtonTemplate* V_ExitButton;  // Offset: 1104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.QuestListEntryObject Size 392
// Inherited 40 bytes 
class UQuestListEntryObject : public UObject
{

 public: 
	int32_t MissionIdx;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4
	struct FString MissionName;  // Offset: 48 Size: 16
	struct FString MissionCategory;  // Offset: 64 Size: 16
	struct FString MissionTitle;  // Offset: 80 Size: 16
	struct FString MissionConditions;  // Offset: 96 Size: 16
	struct FKtClientMissionDef MissionDef;  // Offset: 112 Size: 280



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdImageTextBlockDecorator Size 40
// Inherited 40 bytes 
class UKdImageTextBlockDecorator : public URichTextBlockDecorator
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRiderNameDuplicateCheck Size 72
// Inherited 56 bytes 
class UPqRiderNameDuplicateCheck : public UPqPacket
{

 public: 
	struct FString riderName;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimatedNumberTextBlock Size 712
// Inherited 680 bytes 
class UAnimatedNumberTextBlock : public UTextBlock
{

 public: 
	int32_t DefaultNum;  // Offset: 680 Size: 4
	char pad_684[28];  // Offset: 684 Size: 28



 // Functions 
 public:
	void ResetNumber(int32_t InitNum); // Function KartDrift.AnimatedNumberTextBlock.ResetNumber
	void PlayNumberAnim(float AnimDur); // Function KartDrift.AnimatedNumberTextBlock.PlayNumberAnim
	void OnAnimFinished(int32_t FinishedNum); // Function KartDrift.AnimatedNumberTextBlock.OnAnimFinished
	void Animating(); // Function KartDrift.AnimatedNumberTextBlock.Animating
}; 
 
 


//Class KartDrift.PqCustomGameSetGameOption Size 64
// Inherited 56 bytes 
class UPqCustomGameSetGameOption : public UPqPacket
{

 public: 
	struct FCsGameOption gameOption;  // Offset: 56 Size: 2
	char pad_58[6];  // Offset: 58 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyIconWidget Size 1280
// Inherited 1000 bytes 
class UKeyIconWidget : public UButtonTemplate
{

 public: 
	struct FKey Key_PC;  // Offset: 1000 Size: 24
	struct FKey Key_Gamepad;  // Offset: 1024 Size: 24
	char pad_1048_1 : 7;  // Offset: 1048 Size: 1
	bool BindKeyEvent : 1;  // Offset: 1048 Size: 1
	char pad_1049_1 : 7;  // Offset: 1049 Size: 1
	bool bFocusedWidgetClickCondition : 1;  // Offset: 1049 Size: 1
	char pad_1050_1 : 7;  // Offset: 1050 Size: 1
	bool bIsFocusedWidgetClick : 1;  // Offset: 1050 Size: 1
	char pad_1051_1 : 7;  // Offset: 1051 Size: 1
	bool bNeitherAcceptNorBackButtonCondition : 1;  // Offset: 1051 Size: 1
	char pad_1052_1 : 7;  // Offset: 1052 Size: 1
	bool bIsNeitherAcceptNorBackButton : 1;  // Offset: 1052 Size: 1
	char pad_1053_1 : 7;  // Offset: 1053 Size: 1
	bool bEnableRepeatEvent : 1;  // Offset: 1053 Size: 1
	enum class EHorizontalAlignment Slot_HAlign;  // Offset: 1054 Size: 1
	char pad_1055[17];  // Offset: 1055 Size: 17
	struct TSoftObjectPtr<UKeyTextureMap> Key_Common;  // Offset: 1072 Size: 40
	struct TSoftObjectPtr<UKeyTextureMap> Key_XBOX;  // Offset: 1112 Size: 40
	struct TSoftObjectPtr<UKeyTextureMap> Key_DualShock;  // Offset: 1152 Size: 40
	struct UOverlay* V_InnerOverlay;  // Offset: 1192 Size: 8
	struct UKdTextBlock* V_KeyText;  // Offset: 1200 Size: 8
	struct UWidgetSwitcher* V_Switcher;  // Offset: 1208 Size: 8
	struct UHorizontalBox* V_KeySlot;  // Offset: 1216 Size: 8
	struct FMargin InnerOverlay_Margin;  // Offset: 1224 Size: 16
	enum class EHorizontalAlignment InnerOverlay_HAlign;  // Offset: 1240 Size: 1
	enum class EVerticalAlignment InnerOverlay_VAlign;  // Offset: 1241 Size: 1
	enum class EInputDeviceType InputDevice;  // Offset: 1242 Size: 1
	char pad_1243_1 : 7;  // Offset: 1243 Size: 1
	bool bIsPlatformFixed : 1;  // Offset: 1243 Size: 1
	char pad_1244_1 : 7;  // Offset: 1244 Size: 1
	bool bForAllPlatform : 1;  // Offset: 1244 Size: 1
	enum class EInputDeviceType LastestInputDevice;  // Offset: 1245 Size: 1
	char pad_1246[34];  // Offset: 1246 Size: 34



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRiderNameDuplicateCheck Size 88
// Inherited 72 bytes 
class UPrRiderNameDuplicateCheck : public UPrPacket
{

 public: 
	struct FString NotSupportedLetter;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShop Size 352
// Inherited 48 bytes 
class UAccountShop : public UAccountSubsystem
{

 public: 
	struct TMap<enum class EShopItemType, struct FShopStockItemProducts> ShopStockItemProducts;  // Offset: 48 Size: 80
	struct TMap<struct FString, struct FString> ShopStockItemPlatformProductIds;  // Offset: 128 Size: 80
	struct FShopPurchasingInfo SelectedShopStockInfo;  // Offset: 208 Size: 72
	char pad_280[64];  // Offset: 280 Size: 64
	struct UAccountShopPlatform* AccountShopPlatform;  // Offset: 344 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AssistLogWidget Size 680
// Inherited 608 bytes 
class UAssistLogWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimation* InAnimation;  // Offset: 608 Size: 8
	struct UOverlay* Assist1;  // Offset: 616 Size: 8
	struct UOverlay* Assist2;  // Offset: 624 Size: 8
	struct UOverlay* Assist3;  // Offset: 632 Size: 8
	struct UOverlay* Assist4;  // Offset: 640 Size: 8
	struct UOverlay* Assist5;  // Offset: 648 Size: 8
	struct UOverlay* Assist6;  // Offset: 656 Size: 8
	struct UTextBlock* DriftLimit;  // Offset: 664 Size: 8
	struct UTextBlock* DriftLimitAdd;  // Offset: 672 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AssistList Size 664
// Inherited 608 bytes 
class UAssistList : public UUserWidget
{

 public: 
	float AnimDelayTime;  // Offset: 608 Size: 4
	char pad_612[4];  // Offset: 612 Size: 4
	struct UVerticalBox* V_ListBox;  // Offset: 616 Size: 8
	struct TSoftClassPtr<UObject> AssistListInstClass;  // Offset: 624 Size: 40



 // Functions 
 public:
	void ShowList(); // Function KartDrift.AssistList.ShowList
}; 
 
 


//Class KartDrift.AccountShopDev Size 200
// Inherited 200 bytes 
class UAccountShopDev : public UAccountShopPlatform
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SendPacket_Clear_License Size 72
// Inherited 72 bytes 
class USendPacket_Clear_License : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AlarmManagerComponent Size 288
// Inherited 176 bytes 
class UAlarmManagerComponent : public UActorComponent
{

 public: 
	char pad_176[112];  // Offset: 176 Size: 112



 // Functions 
 public:
	void OnUpdateAlarm(struct TSet<struct FString>& NewIds); // Function KartDrift.AlarmManagerComponent.OnUpdateAlarm
}; 
 
 


//Class KartDrift.TouchEventButton Size 1072
// Inherited 1000 bytes 
class UTouchEventButton : public UButtonTemplate
{

 public: 
	char pad_1000[72];  // Offset: 1000 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RewardEntryObject Size 80
// Inherited 40 bytes 
class URewardEntryObject : public UObject
{

 public: 
	struct FString ItemId;  // Offset: 40 Size: 16
	char pad_56[24];  // Offset: 56 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedTeamPawn Size 944
// Inherited 936 bytes 
class ASpeedTeamPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void Multicast_Logout(); // Function KartDrift.SpeedTeamPawn.Multicast_Logout
}; 
 
 


//Class KartDrift.AddDistanceTimeWidget Size 152
// Inherited 72 bytes 
class UAddDistanceTimeWidget : public UShadowQuestRule
{

 public: 
	struct TSoftClassPtr<UObject> DistTimeWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> DistWidgetClass;  // Offset: 112 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShopSteam Size 208
// Inherited 200 bytes 
class UAccountShopSteam : public UAccountShopPlatform
{

 public: 
	char pad_200[8];  // Offset: 200 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RetireAnimation Size 72
// Inherited 72 bytes 
class URetireAnimation : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_CommunityPageWidget Size 1192
// Inherited 816 bytes 
class UM_CommunityPageWidget : public UCommunityPageWidget
{

 public: 
	struct UCommunityFriendObject* UserInFriendMenu;  // Offset: 816 Size: 8
	char pad_824[360];  // Offset: 824 Size: 360
	struct UCommunityFriendObject* UserInInviteUserMenu;  // Offset: 1184 Size: 8



 // Functions 
 public:
	void PartyMenu_OnCloseButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.PartyMenu_OnCloseButtonClicked
	void PartyMenu_OnActionButtonClicked(int32_t ButtonType); // Function KartDrift.M_CommunityPageWidget.PartyMenu_OnActionButtonClicked
	void PartyInvite_OnCloseButtonClicked(int32_t InIndex); // Function KartDrift.M_CommunityPageWidget.PartyInvite_OnCloseButtonClicked
	void MainDialog_OnRefuseInvitationClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.MainDialog_OnRefuseInvitationClicked
	void MainDialog_OnCloseButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.MainDialog_OnCloseButtonClicked
	void MainDialog_OnAddFriendButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.MainDialog_OnAddFriendButtonClicked
	void MainDialog_OnAcceptInvitationClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.MainDialog_OnAcceptInvitationClicked
	void InviteUserMenu_OnCloseButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.InviteUserMenu_OnCloseButtonClicked
	void InviteUserMenu_OnActionButtonClicked(int32_t ButtonType); // Function KartDrift.M_CommunityPageWidget.InviteUserMenu_OnActionButtonClicked
	void InviteMenu_OnSearchTextChanged(struct FText& NewText); // Function KartDrift.M_CommunityPageWidget.InviteMenu_OnSearchTextChanged
	void InviteMenu_OnSearchButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.InviteMenu_OnSearchButtonClicked
	void InviteMenu_OnRejectButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.InviteMenu_OnRejectButtonClicked
	void InviteMenu_OnCloseButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.InviteMenu_OnCloseButtonClicked
	void InviteMenu_OnAcceptButtonClicked(int32_t Index); // Function KartDrift.M_CommunityPageWidget.InviteMenu_OnAcceptButtonClicked
	void FriendMenu_OnActionButtonClicked(int32_t ButtonType); // Function KartDrift.M_CommunityPageWidget.FriendMenu_OnActionButtonClicked
	void FriendMenu_CloseDialog(int32_t Index); // Function KartDrift.M_CommunityPageWidget.FriendMenu_CloseDialog
}; 
 
 


//Class KartDrift.AccountShopNxa Size 224
// Inherited 200 bytes 
class UAccountShopNxa : public UAccountShopPlatform
{

 public: 
	char pad_200[24];  // Offset: 200 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountShopPSN Size 200
// Inherited 200 bytes 
class UAccountShopPSN : public UAccountShopPlatform
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftGuide Size 1328
// Inherited 544 bytes 
class ADriftGuide : public AActor
{

 public: 
	char pad_544[1];  // Offset: 544 Size: 1
	char pad_545_1 : 7;  // Offset: 545 Size: 1
	bool ForceUpdate : 1;  // Offset: 545 Size: 1
	char pad_546[2];  // Offset: 546 Size: 2
	int32_t DriftStartIndex;  // Offset: 548 Size: 4
	int32_t DriftEndIndex;  // Offset: 552 Size: 4
	int32_t DecalInterval;  // Offset: 556 Size: 4
	int32_t LineWidth;  // Offset: 560 Size: 4
	float StartDecalOffset;  // Offset: 564 Size: 4
	float EndDecalOffset;  // Offset: 568 Size: 4
	char pad_572[4];  // Offset: 572 Size: 4
	struct USplineComponent* SplineGuideComponent;  // Offset: 576 Size: 8
	struct USplineComponent* SplineGuideComponent_Left;  // Offset: 584 Size: 8
	struct USplineComponent* SplineGuideComponent_Right;  // Offset: 592 Size: 8
	struct TArray<struct USplineMeshComponent*> SplineMeshComponentArray;  // Offset: 600 Size: 16
	struct TArray<struct UDecalComponent*> DecalComponentArray;  // Offset: 616 Size: 16
	char pad_632[120];  // Offset: 632 Size: 120
	struct TSoftObjectPtr<UMaterialInstance> DecalMaterial;  // Offset: 752 Size: 40
	struct TSoftObjectPtr<UMaterialInstance> StartDecalMaterial;  // Offset: 792 Size: 40
	struct TSoftObjectPtr<UMaterialInstance> EndDecalMaterial;  // Offset: 832 Size: 40
	struct TSoftObjectPtr<UStaticMesh> SideStaticMeshLeft;  // Offset: 872 Size: 40
	struct TSoftObjectPtr<UStaticMesh> SideStaticMeshRight;  // Offset: 912 Size: 40
	struct FDriftAngleInfo LeftDirectionArrowMaterial;  // Offset: 952 Size: 120
	struct FDriftAngleInfo RightDirectionArrowMaterial;  // Offset: 1072 Size: 120
	struct UMaterialBillboardComponent* DriftDirectionArrowBillboard;  // Offset: 1192 Size: 8
	struct TSoftObjectPtr<UCurveFloat> DistanceToOpacityCurve;  // Offset: 1200 Size: 40
	struct FVector2D BillboardDriftDirectionArrowSize;  // Offset: 1240 Size: 8
	struct TSoftObjectPtr<UCurveFloat> DistanceToSizeCurve;  // Offset: 1248 Size: 40
	struct FVector BillboardDriftDirectionArrowOffset;  // Offset: 1288 Size: 12
	int32_t AngleRangeMax45;  // Offset: 1300 Size: 4
	int32_t AngleRangeMax90;  // Offset: 1304 Size: 4
	char pad_1308[4];  // Offset: 1308 Size: 4
	struct UStaticMesh* MergedMesh;  // Offset: 1312 Size: 8
	struct UStaticMeshComponent* MergedMeshComponent;  // Offset: 1320 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDriveMain Size 712
// Inherited 608 bytes 
class UAllLevelAutoDriveMain : public UUserWidget
{

 public: 
	struct UButton* V_MinusAIButton;  // Offset: 608 Size: 8
	struct UButton* V_PlusAIButton;  // Offset: 616 Size: 8
	struct UTextBlock* V_ErrorText;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* V_FirstTrackSwitcher;  // Offset: 632 Size: 8
	struct UTextBlock* V_FirstTrackText;  // Offset: 640 Size: 8
	struct UWidgetSwitcher* V_TrackListSwitcher;  // Offset: 648 Size: 8
	struct UPanelWidget* V_TrackList;  // Offset: 656 Size: 8
	struct UButtonTemplate* V_StartButton;  // Offset: 664 Size: 8
	struct UButtonTemplate* V_OneLapOnlyCheckBox;  // Offset: 672 Size: 8
	struct UButtonTemplate* V_LoopCheckBox;  // Offset: 680 Size: 8
	struct UTextBlock* V_AICount;  // Offset: 688 Size: 8
	struct UTrackPlayList* PlayList;  // Offset: 696 Size: 8
	char pad_704[8];  // Offset: 704 Size: 8



 // Functions 
 public:
	void ToggleOneLap(int32_t NotUsed); // Function KartDrift.AllLevelAutoDriveMain.ToggleOneLap
	void ToggleLoop(int32_t NotUsed); // Function KartDrift.AllLevelAutoDriveMain.ToggleLoop
	void OnStartAutoDriveClicked(int32_t NotUsed); // Function KartDrift.AllLevelAutoDriveMain.OnStartAutoDriveClicked
	void OnPlusAIButton(); // Function KartDrift.AllLevelAutoDriveMain.OnPlusAIButton
	void OnMinusAIButton(); // Function KartDrift.AllLevelAutoDriveMain.OnMinusAIButton
}; 
 
 


//Class KartDrift.AccountTimeAttack Size 656
// Inherited 48 bytes 
class UAccountTimeAttack : public UAccountSubsystem
{

 public: 
	char pad_48[576];  // Offset: 48 Size: 576
	struct UTimeAttackOnlineMap* TimeAttackOnlineMap;  // Offset: 624 Size: 8
	struct UTimeAttackServerRequester* TimeAttackServer;  // Offset: 632 Size: 8
	struct TArray<struct FRaceSaveGameLatestPtr> SaveGamesToSend;  // Offset: 640 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountTimeAttackDataHelper Size 96
// Inherited 40 bytes 
class UAccountTimeAttackDataHelper : public UTimeAttackDataHelper
{

 public: 
	struct FRaceSaveGameLatestPtr RankerSaveGame;  // Offset: 40 Size: 8
	char pad_48[48];  // Offset: 48 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSiren Size 1096
// Inherited 856 bytes 
class AItemSiren : public AItem
{

 public: 
	struct USkeletalMeshComponent* SirenSkeletalMeshComponent;  // Offset: 856 Size: 8
	struct USphereComponent* SirenSphereComponent;  // Offset: 864 Size: 8
	struct UFMODAudioComponent* SirenAudioComponent;  // Offset: 872 Size: 8
	struct UParticleSystemComponent* SirenEffectComponent;  // Offset: 880 Size: 8
	struct TSoftObjectPtr<UParticleSystemComponent> SirenEffectAsset;  // Offset: 888 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 928 Size: 40
	struct TSoftObjectPtr<UCurveFloat> SirenCurve;  // Offset: 968 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> SirenMesh;  // Offset: 1008 Size: 40
	struct TSoftObjectPtr<UAnimSequence> SirenAnim;  // Offset: 1048 Size: 40
	struct UItemComponent* LocalUser;  // Offset: 1088 Size: 8



 // Functions 
 public:
	void OnSirenOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemSiren.OnSirenOverlap
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemSiren.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemSiren.MulticastAffectTo
}; 
 
 


//Class KartDrift.LqDownloadStickerStock Size 64
// Inherited 56 bytes 
class ULqDownloadStickerStock : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AccountTMI Size 48
// Inherited 48 bytes 
class UAccountTMI : public UAccountSubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetStockTag Size 88
// Inherited 72 bytes 
class ULrGetStockTag : public UPrPacket
{

 public: 
	struct TArray<struct FString> tagText;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGameChannelNameKeeper Size 80
// Inherited 48 bytes 
class UOutGameChannelNameKeeper : public UAccountSubsystem
{

 public: 
	char pad_48[32];  // Offset: 48 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSpeedTeamData Size 64
// Inherited 64 bytes 
class ULicenseSpeedTeamData : public ULicenseContents
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DialogTemplate Size 816
// Inherited 608 bytes 
class UDialogTemplate : public UUserWidget
{

 public: 
	char pad_608[88];  // Offset: 608 Size: 88
	struct UFMODEvent* DialogOpenSound;  // Offset: 696 Size: 8
	char pad_704[24];  // Offset: 704 Size: 24
	struct TArray<struct UKeyIconWidget*> KeyIconWidgetList;  // Offset: 728 Size: 16
	char pad_744[8];  // Offset: 744 Size: 8
	struct UWidgetAnimation* Anim_Open;  // Offset: 752 Size: 8
	struct UWidgetAnimation* Anim_Close;  // Offset: 760 Size: 8
	struct TArray<struct FString> OpenPrevWidgetAnimList;  // Offset: 768 Size: 16
	struct TArray<struct FString> ClosePrevWidgetAnimList;  // Offset: 784 Size: 16
	struct UUserWidget* PrevWidget;  // Offset: 800 Size: 8
	char pad_808_1 : 7;  // Offset: 808 Size: 1
	bool bWorldRenderingFlag : 1;  // Offset: 808 Size: 1
	char pad_809[7];  // Offset: 809 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingWidgetBase Size 648
// Inherited 608 bytes 
class ULoadingWidgetBase : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_TitleText;  // Offset: 608 Size: 8
	struct UImage* V_LoadingImage;  // Offset: 616 Size: 8
	struct UFMODEvent* LoadingBGM;  // Offset: 624 Size: 8
	char pad_632[16];  // Offset: 632 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_InfoPageWidget Size 792
// Inherited 784 bytes 
class UC_InfoPageWidget : public UInfoPageWidget
{

 public: 
	char pad_784[8];  // Offset: 784 Size: 8



 // Functions 
 public:
	void OnUpdateSeasonUI(); // Function KartDrift.C_InfoPageWidget.OnUpdateSeasonUI
	void OnFocused_LicenseList(int32_t InIndex); // Function KartDrift.C_InfoPageWidget.OnFocused_LicenseList
	void OnFocused_ChallengeList(int32_t InIndex); // Function KartDrift.C_InfoPageWidget.OnFocused_ChallengeList
	void OnFocused_ActivityList(int32_t InIndex); // Function KartDrift.C_InfoPageWidget.OnFocused_ActivityList
	void OnClickedPrevTab_Info(int32_t InIndex); // Function KartDrift.C_InfoPageWidget.OnClickedPrevTab_Info
	void OnClickedNextTab_Info(int32_t InIndex); // Function KartDrift.C_InfoPageWidget.OnClickedNextTab_Info
}; 
 
 


//Class KartDrift.AICondition_Distance Size 80
// Inherited 64 bytes 
class UAICondition_Distance : public UAIItemUseCondition
{

 public: 
	struct TArray<struct FAIItemUse_DistProbability> Probability;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCustomGameSetReady Size 64
// Inherited 56 bytes 
class UPqCustomGameSetReady : public UPqPacket
{

 public: 
	int32_t readyState;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AICondition_Rank Size 80
// Inherited 64 bytes 
class UAICondition_Rank : public UAIItemUseCondition
{

 public: 
	struct TArray<struct FAIItemUse_RankProbability> Probability;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSuccessMessageInterface Size 40
// Inherited 40 bytes 
class ULicenseSuccessMessageInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGamePlayerController Size 1408
// Inherited 1408 bytes 
class AOutGamePlayerController : public APlayerController
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AICondition_Progress Size 80
// Inherited 64 bytes 
class UAICondition_Progress : public UAIItemUseCondition
{

 public: 
	struct TArray<struct FAIItemUse_Progress> Probability;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CheckPoint Size 736
// Inherited 544 bytes 
class ACheckPoint : public APassableBox
{

 public: 
	struct ACheckPoint* Next;  // Offset: 544 Size: 8
	struct TArray<struct ACheckPoint*> NextAdditional;  // Offset: 552 Size: 16
	struct ACheckPoint* prev;  // Offset: 568 Size: 8
	float CPtoCP_Distance;  // Offset: 576 Size: 4
	char pad_580_1 : 7;  // Offset: 580 Size: 1
	bool bInDoor : 1;  // Offset: 580 Size: 1
	char pad_581_1 : 7;  // Offset: 581 Size: 1
	bool bResetPoint : 1;  // Offset: 581 Size: 1
	char pad_582_1 : 7;  // Offset: 582 Size: 1
	bool bDoNotCheckWrongWay : 1;  // Offset: 582 Size: 1
	char pad_583[1];  // Offset: 583 Size: 1
	struct UBoxComponent* TriggerComponent;  // Offset: 584 Size: 8
	char pad_592_1 : 7;  // Offset: 592 Size: 1
	bool IsStartCheckPoint : 1;  // Offset: 592 Size: 1
	char pad_593_1 : 7;  // Offset: 593 Size: 1
	bool IsEndCheckPoint : 1;  // Offset: 593 Size: 1
	enum class ECheckPointFogState CheckPointFogState;  // Offset: 594 Size: 1
	char pad_595[5];  // Offset: 595 Size: 5
	struct FCPFogData FogData;  // Offset: 600 Size: 104
	float BlendInTime;  // Offset: 704 Size: 4
	float BlendOutTime;  // Offset: 708 Size: 4
	char pad_712[24];  // Offset: 712 Size: 24



 // Functions 
 public:
	void CopyWorldFog(); // Function KartDrift.CheckPoint.CopyWorldFog
}; 
 
 


//Class KartDrift.BelongingDataAssetItemModel Size 208
// Inherited 64 bytes 
class UBelongingDataAssetItemModel : public UBelongingDataAsset
{

 public: 
	struct FString ItemId;  // Offset: 64 Size: 16
	enum class EItemModelType ItemModelType;  // Offset: 80 Size: 1
	char pad_81_1 : 7;  // Offset: 81 Size: 1
	bool bItemTypeDefaultModel : 1;  // Offset: 81 Size: 1
	char pad_82[6];  // Offset: 82 Size: 6
	struct TSoftObjectPtr<USkeletalMesh> ItemModelSkeletalMesh;  // Offset: 88 Size: 40
	struct TSoftClassPtr<UObject> ItemModelAnimClass;  // Offset: 128 Size: 40
	struct TSoftObjectPtr<UAnimSequence> ItemModelIdleAnimSequence;  // Offset: 168 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CommunityLogicComponent Size 1240
// Inherited 224 bytes 
class UCommunityLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[1016];  // Offset: 224 Size: 1016



 // Functions 
 public:
	void OpenAccountLinkWeb(int32_t InIndex); // Function KartDrift.CommunityLogicComponent.OpenAccountLinkWeb
	void OnUpdatePartyMember(enum class EPartyChageState ChangeState); // Function KartDrift.CommunityLogicComponent.OnUpdatePartyMember
	void OnUpdatePartyInvitation(bool bRefused); // Function KartDrift.CommunityLogicComponent.OnUpdatePartyInvitation
	void OnUpdateEmblemItem(); // Function KartDrift.CommunityLogicComponent.OnUpdateEmblemItem
	void OnShowToastPopup(struct FText& TitleText, struct FText& DescText); // Function KartDrift.CommunityLogicComponent.OnShowToastPopup
	void OnPSNFriendPresenceUpdated(); // Function KartDrift.CommunityLogicComponent.OnPSNFriendPresenceUpdated
	void OnPartyJoined(); // Function KartDrift.CommunityLogicComponent.OnPartyJoined
	void OnLiveFriendPresence(); // Function KartDrift.CommunityLogicComponent.OnLiveFriendPresence
	void OnInviteJoinParty(struct FString JoinedUserName); // Function KartDrift.CommunityLogicComponent.OnInviteJoinParty
	void OnGfsGetReceivedFriendRequest(); // Function KartDrift.CommunityLogicComponent.OnGfsGetReceivedFriendRequest
	void OnGfsFriendSearch(struct TArray<struct FAccountPlatformData> accountData); // Function KartDrift.CommunityLogicComponent.OnGfsFriendSearch
	void OnGfsFriendRequestReceived(struct FAccountPlatformData& Data); // Function KartDrift.CommunityLogicComponent.OnGfsFriendRequestReceived
	void OnGfsFriendRequestAccepted(struct FAccountPlatformData& Data); // Function KartDrift.CommunityLogicComponent.OnGfsFriendRequestAccepted
	void OnGfsFriendRemoved(struct FAccountPlatformData& Data); // Function KartDrift.CommunityLogicComponent.OnGfsFriendRemoved
	void OnGfsFriendListUpdate(); // Function KartDrift.CommunityLogicComponent.OnGfsFriendListUpdate
	void OnGfsAccountPlatformDataUpdated(struct FAccountPlatformData& Data); // Function KartDrift.CommunityLogicComponent.OnGfsAccountPlatformDataUpdated
	void OnGetRecommendFriends(); // Function KartDrift.CommunityLogicComponent.OnGetRecommendFriends
	void OnDisablePartyInviteButton(struct FString InAccountId); // Function KartDrift.CommunityLogicComponent.OnDisablePartyInviteButton
	void OnDisableFriendAddButton(); // Function KartDrift.CommunityLogicComponent.OnDisableFriendAddButton
	void OnDisableCustomGameInviteButton(struct FString InAccountId); // Function KartDrift.CommunityLogicComponent.OnDisableCustomGameInviteButton
	void OnCustomGameUpdate(); // Function KartDrift.CommunityLogicComponent.OnCustomGameUpdate
	void OnCustomGameInviteReceived(struct FString SessionId, struct FKtAccountProfile& Inviter, struct FString InviterAccountId); // Function KartDrift.CommunityLogicComponent.OnCustomGameInviteReceived
	void OnAskJoinParty(); // Function KartDrift.CommunityLogicComponent.OnAskJoinParty
	void OnAskInviteParty(); // Function KartDrift.CommunityLogicComponent.OnAskInviteParty
}; 
 
 


//Class KartDrift.AICondition_FirstRank Size 80
// Inherited 64 bytes 
class UAICondition_FirstRank : public UAIItemUseCondition
{

 public: 
	float Player_Probability;  // Offset: 64 Size: 4
	float EnemyAI_Probability;  // Offset: 68 Size: 4
	float TeamAI_Probability;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIManageComponent Size 328
// Inherited 176 bytes 
class UAIManageComponent : public UActorComponent
{

 public: 
	struct URaceRankComponent* RaceRankComponent;  // Offset: 176 Size: 8
	struct TArray<struct USplineComponent*> SplineList;  // Offset: 184 Size: 16
	struct TArray<struct USplineComponent*> Sub_SplineList;  // Offset: 200 Size: 16
	char pad_216[64];  // Offset: 216 Size: 64
	char pad_280_1 : 7;  // Offset: 280 Size: 1
	bool bUseSpeedSplineOnly : 1;  // Offset: 280 Size: 1
	char pad_281_1 : 7;  // Offset: 281 Size: 1
	bool bChangeSplineOnRank : 1;  // Offset: 281 Size: 1
	char pad_282_1 : 7;  // Offset: 282 Size: 1
	bool bEnableSpeedFactor : 1;  // Offset: 282 Size: 1
	char pad_283_1 : 7;  // Offset: 283 Size: 1
	bool bExecuteScenario : 1;  // Offset: 283 Size: 1
	char pad_284[44];  // Offset: 284 Size: 44



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRankRowWidget Size 1544
// Inherited 608 bytes 
class URaceRankRowWidget : public UUserWidget
{

 public: 
	URaceRankItemWidget* ItemIconWidgetClass;  // Offset: 608 Size: 8
	struct UWidgetSwitcher* V_AISwitcher;  // Offset: 616 Size: 8
	struct UImage* V_RankBackground;  // Offset: 624 Size: 8
	struct UImage* V_RowBackGround;  // Offset: 632 Size: 8
	struct UKdTextBlock* V_NameText;  // Offset: 640 Size: 8
	struct UHorizontalBox* ItemIconListBox;  // Offset: 648 Size: 8
	struct UTextBlock* V_RankText;  // Offset: 656 Size: 8
	struct UTextBlock* V_PingText;  // Offset: 664 Size: 8
	struct UTextBlock* V_TimestampText;  // Offset: 672 Size: 8
	struct UPlatformIconWidget* V_PlatformIcon;  // Offset: 680 Size: 8
	struct UHorizontalBox* HB_LeftBlock;  // Offset: 688 Size: 8
	struct UImage* Image_ShadowPlayer;  // Offset: 696 Size: 8
	struct UWidgetSwitcher* V_Voice_State;  // Offset: 704 Size: 8
	struct UImage* V_Disconnected;  // Offset: 712 Size: 8
	struct UImage* V_DisconnectedDim;  // Offset: 720 Size: 8
	struct UImage* V_FinishedDim;  // Offset: 728 Size: 8
	struct UOverlay* V_MainBlock;  // Offset: 736 Size: 8
	struct UImage* V_PingImage;  // Offset: 744 Size: 8
	struct UImage* V_MicImage;  // Offset: 752 Size: 8
	struct UImage* V_BeginnerCareIcon;  // Offset: 760 Size: 8
	struct UWidgetAnimation* EntireSlideInUp;  // Offset: 768 Size: 8
	struct UWidgetAnimation* EntireSlideInDown;  // Offset: 776 Size: 8
	char pad_784[36];  // Offset: 784 Size: 36
	struct FLinearColor DefaultMainColor;  // Offset: 820 Size: 16
	struct FLinearColor SoloPlayerOwnerMainColor;  // Offset: 836 Size: 16
	char pad_852[4];  // Offset: 852 Size: 4
	struct FSlateFontInfo DefaultFontInfo;  // Offset: 856 Size: 88
	struct FSlateFontInfo SoloPlayerOwnerFontInfo;  // Offset: 944 Size: 88
	struct TMap<enum class ERaceTeamType, struct FSlateBrush> RankBackGroundBrushContainer;  // Offset: 1032 Size: 80
	struct FSlateBrush RankBackGroundSoloOwnPlayerBrush;  // Offset: 1112 Size: 136
	struct TMap<enum class ERaceTeamType, struct FSlateBrush> RowBackGroundSoloBrushContainer;  // Offset: 1248 Size: 80
	struct FSlateBrush RowBackGroundDefaultBrush;  // Offset: 1328 Size: 136
	struct TMap<enum class ERaceTeamType, struct FLinearColor> FinishedColorContainer;  // Offset: 1464 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGameState Size 1144
// Inherited 624 bytes 
class AKdGameState : public AGameStateBase
{

 public: 
	char pad_624[8];  // Offset: 624 Size: 8
	float Custom_ServerWorldTimeSecondsDelta;  // Offset: 632 Size: 4
	char pad_636[196];  // Offset: 636 Size: 196
	struct FString ModeName;  // Offset: 832 Size: 16
	struct FString TrackName;  // Offset: 848 Size: 16
	struct FString OptionsString;  // Offset: 864 Size: 16
	float DiffServerTime;  // Offset: 880 Size: 4
	char pad_884[4];  // Offset: 884 Size: 4
	struct TArray<struct FRegisterComponent> GameStateComponents;  // Offset: 888 Size: 16
	struct TSet<struct UObject*> PreCacheAssetContainer;  // Offset: 904 Size: 80
	char pad_984[24];  // Offset: 984 Size: 24
	struct FMulticastInlineDelegate OnBeginGameDelegate;  // Offset: 1008 Size: 16
	struct FMulticastInlineDelegate OnEndGameDelegate;  // Offset: 1024 Size: 16
	char pad_1040[12];  // Offset: 1040 Size: 12
	float SnappingServerWorldTimeSecondsDelta;  // Offset: 1052 Size: 4
	char pad_1056[88];  // Offset: 1056 Size: 88



 // Functions 
 public:
	void OnRep_OptionsString(); // Function KartDrift.KdGameState.OnRep_OptionsString
	void OnRep_ModeName(); // Function KartDrift.KdGameState.OnRep_ModeName
	void Multicast_SetValue(struct FString VariableName, struct FString Value); // Function KartDrift.KdGameState.Multicast_SetValue
	void Multicast_NotifyServerTime(float InServerTime); // Function KartDrift.KdGameState.Multicast_NotifyServerTime
	void Multicast_Logout(struct APawn* InPawn); // Function KartDrift.KdGameState.Multicast_Logout
	void Multicast_EndGame(); // Function KartDrift.KdGameState.Multicast_EndGame
	void Multicast_BeginGame(); // Function KartDrift.KdGameState.Multicast_BeginGame
}; 
 
 


//Class KartDrift.StartSubGame Size 72
// Inherited 72 bytes 
class UStartSubGame : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AISpeedComponent Size 296
// Inherited 296 bytes 
class UAISpeedComponent : public UAIItemComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSingleGameState Size 1152
// Inherited 1144 bytes 
class AItemSingleGameState : public AKdGameState
{

 public: 
	char pad_1144[8];  // Offset: 1144 Size: 8



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.ItemSingleGameState.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.FMODManageComponent Size 184
// Inherited 176 bytes 
class UFMODManageComponent : public UActorComponent
{

 public: 
	char pad_176_1 : 7;  // Offset: 176 Size: 1
	bool bEnableAnimSound : 1;  // Offset: 176 Size: 1
	char pad_177[7];  // Offset: 177 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.IntroSequenceRule Size 72
// Inherited 72 bytes 
class UIntroSequenceRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftGaugeTeamWidget Size 664
// Inherited 608 bytes 
class UDriftGaugeTeamWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UImage* TeamGaugeImage;  // Offset: 616 Size: 8
	struct UMaterialInstanceDynamic* TeamGaugeMaterial;  // Offset: 624 Size: 8
	char pad_632[32];  // Offset: 632 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ToTimeAttackIntro Size 88
// Inherited 80 bytes 
class UTransition_ToTimeAttackIntro : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AlertInterface Size 40
// Inherited 40 bytes 
class UAlertInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_LiveryStickerPageWidget Size 904
// Inherited 856 bytes 
class UM_LiveryStickerPageWidget : public ULiveryStickerPageWidget
{

 public: 
	char pad_856_1 : 7;  // Offset: 856 Size: 1
	bool bSaveLayerMoveOrCamera : 1;  // Offset: 856 Size: 1
	char pad_857[3];  // Offset: 857 Size: 3
	float ScrollWaitTimeMax;  // Offset: 860 Size: 4
	float ScrollSpeedChanges;  // Offset: 864 Size: 4
	float ScrollSpeedMax;  // Offset: 868 Size: 4
	char pad_872[32];  // Offset: 872 Size: 32



 // Functions 
 public:
	void OnUnChecked_UseLayerScaleY(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnUnChecked_UseLayerScaleY
	void OnUnChecked_UseLayerScaleX(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnUnChecked_UseLayerScaleX
	void OnUnChecked_UseFixedUnit(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnUnChecked_UseFixedUnit
	void OnStickerListScrolled(float InOffset); // Function KartDrift.M_LiveryStickerPageWidget.OnStickerListScrolled
	void OnReleasedRotate(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnReleasedRotate
	void OnPressedRotateR(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnPressedRotateR
	void OnPressedRotateL(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnPressedRotateL
	void OnMoveToPrevWrappingLayer(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnMoveToPrevWrappingLayer
	void OnMoveToNextWrappingLayer(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnMoveToNextWrappingLayer
	void OnClicked_UseSticker(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnClicked_UseSticker
	void OnClicked_SubColorBack(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnClicked_SubColorBack
	void OnChecked_UseLayerScaleY(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnChecked_UseLayerScaleY
	void OnChecked_UseLayerScaleX(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnChecked_UseLayerScaleX
	void OnChecked_UseFixedUnit(int32_t InIndex); // Function KartDrift.M_LiveryStickerPageWidget.OnChecked_UseFixedUnit
}; 
 
 


//Class KartDrift.SpeedSingleGameState Size 1152
// Inherited 1144 bytes 
class ASpeedSingleGameState : public AKdGameState
{

 public: 
	char pad_1144[8];  // Offset: 1144 Size: 8



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.SpeedSingleGameState.OnAsyncLoadCompleted
	void Multicast_LogoutPawn(struct APawn* InPawn); // Function KartDrift.SpeedSingleGameState.Multicast_LogoutPawn
}; 
 
 


//Class KartDrift.PqAuthMobile Size 232
// Inherited 96 bytes 
class UPqAuthMobile : public UPqAuth
{

 public: 
	struct FString userName;  // Offset: 96 Size: 16
	struct FString npsn;  // Offset: 112 Size: 16
	struct FString nptoken;  // Offset: 128 Size: 16
	struct FString npaCode;  // Offset: 144 Size: 16
	struct FString memberType;  // Offset: 160 Size: 16
	struct FString adid;  // Offset: 176 Size: 16
	struct FString idfv;  // Offset: 192 Size: 16
	struct FString country;  // Offset: 208 Size: 16
	char pad_224_1 : 7;  // Offset: 224 Size: 1
	bool bUseAccountLink : 1;  // Offset: 224 Size: 1
	char pad_225[7];  // Offset: 225 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDriveDataCarrier Size 56
// Inherited 48 bytes 
class UAllLevelAutoDriveDataCarrier : public UGameInstanceSubsystem
{

 public: 
	struct UTrackPlayList* TrackPlayList;  // Offset: 48 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioChangeDriftAssistState Size 632
// Inherited 624 bytes 
class AScenarioChangeDriftAssistState : public AScenarioBase
{

 public: 
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bDriftAssist : 1;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGameMode Size 824
// Inherited 704 bytes 
class AKdGameMode : public AGameModeBase
{

 public: 
	struct TArray<struct TSoftClassPtr<UObject>> GameModeComponents;  // Offset: 704 Size: 16
	char pad_720[104];  // Offset: 720 Size: 104



 // Functions 
 public:
	void OnSubLevelAllLoadComplete(); // Function KartDrift.KdGameMode.OnSubLevelAllLoadComplete
	void OnEndGame(); // Function KartDrift.KdGameMode.OnEndGame
	void OnBeginGame(); // Function KartDrift.KdGameMode.OnBeginGame
}; 
 
 


//Class KartDrift.SpeedSingleGameMode Size 824
// Inherited 824 bytes 
class ASpeedSingleGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDriveGameMode Size 824
// Inherited 824 bytes 
class AAllLevelAutoDriveGameMode : public ASpeedSingleGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDriveGameState Size 1152
// Inherited 1152 bytes 
class AAllLevelAutoDriveGameState : public ASpeedSingleGameState
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OptionPageWidget Size 992
// Inherited 744 bytes 
class UOptionPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* MainDialog;  // Offset: 744 Size: 8
	struct UUserWidget* CurrentlyFocusedOptionBar;  // Offset: 752 Size: 8
	struct UUserWidget* LastFocusedOptionBar;  // Offset: 760 Size: 8
	char pad_768[104];  // Offset: 768 Size: 104
	struct UUserWidget* CultureWidget;  // Offset: 872 Size: 8
	char pad_880[64];  // Offset: 880 Size: 64
	struct UCommonPopup* OptionCommonPopup;  // Offset: 944 Size: 8
	struct UUserWidget* PopupInitiatorOptionWidget;  // Offset: 952 Size: 8
	struct UDialogTemplate* AccountResetDialog;  // Offset: 960 Size: 8
	struct UUserWidget* FallBarrierOptionBar;  // Offset: 968 Size: 8
	struct UUserWidget* CornerIsolationBarrierOptionBar;  // Offset: 976 Size: 8
	struct UUserWidget* GameplayControlTypeBar;  // Offset: 984 Size: 8



 // Functions 
 public:
	void SyncOptionUpdate(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.OptionPageWidget.SyncOptionUpdate
	void OtherRiderLiveryOptionUpdate(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.OptionPageWidget.OtherRiderLiveryOptionUpdate
	void OnUnFocusOption(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.OnUnFocusOption
	void OnSelectOptionComboButton(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.OnSelectOptionComboButton
	void OnSelectOptionButton(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.OnSelectOptionButton
	void OnSelectButtonClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnSelectButtonClicked
	void OnSaveButtonClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnSaveButtonClicked
	void OnResetPopupConfirmed(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnResetPopupConfirmed
	void OnResetButtonClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnResetButtonClicked
	void OnPlayPreviewButtonClicked(int32_t Index); // Function KartDrift.OptionPageWidget.OnPlayPreviewButtonClicked
	void OnNoLongerEnglishPopupConfirmed(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnNoLongerEnglishPopupConfirmed
	void OnMuteButtonClicked(int32_t Index); // Function KartDrift.OptionPageWidget.OnMuteButtonClicked
	void OnFocusOption(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.OnFocusOption
	void OnExitWithoutSaveClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnExitWithoutSaveClicked
	void OnExitAfterSaveClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnExitAfterSaveClicked
	void OnClickedRevertOptionConfirm(int32_t InIndex); // Function KartDrift.OptionPageWidget.OnClickedRevertOptionConfirm
	void OnClickedRevertOptionCancel(int32_t InIndex); // Function KartDrift.OptionPageWidget.OnClickedRevertOptionCancel
	void OnClickedLicenseMoveButton(int32_t InIndex); // Function KartDrift.OptionPageWidget.OnClickedLicenseMoveButton
	void OnChangeFocusOptionButton(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.OnChangeFocusOptionButton
	void OnBackButtonClicked(int32_t NotUsed); // Function KartDrift.OptionPageWidget.OnBackButtonClicked
	void NullSetter(struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.NullSetter
	void NullOptionUpdate(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.OptionPageWidget.NullOptionUpdate
	void NullGetter(struct UUserWidget* Widget); // Function KartDrift.OptionPageWidget.NullGetter
	void EnableOptionUpdate(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.OptionPageWidget.EnableOptionUpdate
	void CultureOptionUpdate(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.OptionPageWidget.CultureOptionUpdate
	void AccountReset_OnCommittedAccountResetText(struct FText& Text, enum class ETextCommit CommitMethod); // Function KartDrift.OptionPageWidget.AccountReset_OnCommittedAccountResetText
	void AccountReset_OnClickedAccountResetConfirmBtn(int32_t InIndex); // Function KartDrift.OptionPageWidget.AccountReset_OnClickedAccountResetConfirmBtn
	void AccountReset_OnClickedAccountResetCancelBtn(int32_t InIndex); // Function KartDrift.OptionPageWidget.AccountReset_OnClickedAccountResetCancelBtn
	void AccountReset_OnChangedAccountResetText(struct FText& Text); // Function KartDrift.OptionPageWidget.AccountReset_OnChangedAccountResetText
}; 
 
 


//Class KartDrift.AddItemTactical Size 112
// Inherited 72 bytes 
class UAddItemTactical : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ItemTacticalWidget;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PhaseComponent Size 432
// Inherited 176 bytes 
class UPhaseComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct UPhase* CurrentPhase;  // Offset: 184 Size: 8
	struct TMap<struct FName, struct UPhase*> PhaseList;  // Offset: 192 Size: 80
	char pad_272[144];  // Offset: 272 Size: 144
	struct TArray<struct UObject*> LoadedClassReference;  // Offset: 416 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AllLevelAutoDriveTrack Size 736
// Inherited 608 bytes 
class UAllLevelAutoDriveTrack : public UUserWidget
{

 public: 
	char pad_608[64];  // Offset: 608 Size: 64
	struct UAnimationPresetWidget* V_OnFocusAnimation;  // Offset: 672 Size: 8
	struct UWidgetSwitcher* V_ValiditySwitcher;  // Offset: 680 Size: 8
	struct UTextBlock* V_TrackFText;  // Offset: 688 Size: 8
	struct UTextBlock* V_TrackAlias;  // Offset: 696 Size: 8
	struct UButton* V_MoveUpButton;  // Offset: 704 Size: 8
	struct UButton* V_MoveDownButton;  // Offset: 712 Size: 8
	struct UButton* V_DeleteButton;  // Offset: 720 Size: 8
	struct UButton* V_StartFromHereButton;  // Offset: 728 Size: 8



 // Functions 
 public:
	void OnStartFromHereButtonPressed(); // Function KartDrift.AllLevelAutoDriveTrack.OnStartFromHereButtonPressed
	void OnMoveUpPressed(); // Function KartDrift.AllLevelAutoDriveTrack.OnMoveUpPressed
	void OnMoveDownPressed(); // Function KartDrift.AllLevelAutoDriveTrack.OnMoveDownPressed
	void OnDeleteButtonPressed(); // Function KartDrift.AllLevelAutoDriveTrack.OnDeleteButtonPressed
}; 
 
 


//Class KartDrift.RuleObject Size 72
// Inherited 40 bytes 
class URuleObject : public UObject
{

 public: 
	struct FName NextPhase;  // Offset: 40 Size: 8
	struct UPhaseComponent* PhaseComponent;  // Offset: 48 Size: 8
	struct TArray<struct URuleObject*> InnerRule;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddAllLevelAutoDriveLoadingWidget Size 112
// Inherited 72 bytes 
class UAddAllLevelAutoDriveLoadingWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> WidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadNextLevel Size 72
// Inherited 72 bytes 
class ULoadNextLevel : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EventSaveGame Size 120
// Inherited 40 bytes 
class UEventSaveGame : public USaveGame
{

 public: 
	struct TMap<struct FString, enum class EEventNewStatus> EventNewStatusMap;  // Offset: 40 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableAllLevelAutoDriveOptions Size 72
// Inherited 72 bytes 
class UEnableAllLevelAutoDriveOptions : public URuleObject
{

 public: 



 // Functions 
 public:
	void Finish(int32_t LapCount); // Function KartDrift.EnableAllLevelAutoDriveOptions.Finish
}; 
 
 


//Class KartDrift.BelongingDataAssetHandle Size 168
// Inherited 144 bytes 
class UBelongingDataAssetHandle : public UBelongingDataAssetKartParts
{

 public: 
	enum class EKtAffiliatePlatform TargetAffiliatePlatform;  // Offset: 144 Size: 1
	char pad_145[7];  // Offset: 145 Size: 7
	struct FString DefaultAssetItemId;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotify_PlayMaterialFx Size 112
// Inherited 56 bytes 
class UAnimNotify_PlayMaterialFx : public UAnimNotify
{

 public: 
	struct FString FxTypeString;  // Offset: 56 Size: 16
	float PlayTime;  // Offset: 72 Size: 4
	float StartFadeTime;  // Offset: 76 Size: 4
	float EndFadeTime;  // Offset: 80 Size: 4
	float CycleTime;  // Offset: 84 Size: 4
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool bLoop : 1;  // Offset: 88 Size: 1
	char pad_89_1 : 7;  // Offset: 89 Size: 1
	bool bReverse : 1;  // Offset: 89 Size: 1
	char pad_90[6];  // Offset: 90 Size: 6
	struct UCurveFloat* WeightCurve;  // Offset: 96 Size: 8
	struct UCurveFloat* CycleCurve;  // Offset: 104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.VoiceChatWidget Size 616
// Inherited 608 bytes 
class UVoiceChatWidget : public UUserWidget
{

 public: 
	struct UKdListView* ListView_VoiceChat;  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ServiceLogicComponent Size 432
// Inherited 224 bytes 
class UServiceLogicComponent : public UWidgetLogicComponent
{

 public: 
	struct TSoftClassPtr<UObject> NoticeMessageWidgetClass;  // Offset: 224 Size: 40
	char pad_264[8];  // Offset: 264 Size: 8
	struct UUserWidget* CurrentNoticeMessageWidget;  // Offset: 272 Size: 8
	char pad_280[152];  // Offset: 280 Size: 152



 // Functions 
 public:
	void OnNoticeMessage(struct FText Message); // Function KartDrift.ServiceLogicComponent.OnNoticeMessage
	void OnEndHideNoticeMessageAnimation(); // Function KartDrift.ServiceLogicComponent.OnEndHideNoticeMessageAnimation
	void OnCheatEditboxSubmit(struct FText& Text, enum class ETextCommit CommitMethod); // Function KartDrift.ServiceLogicComponent.OnCheatEditboxSubmit
	void OnCheatEditboxChanged(struct FText& Text); // Function KartDrift.ServiceLogicComponent.OnCheatEditboxChanged
	void CloseNoticeMessageWidget(); // Function KartDrift.ServiceLogicComponent.CloseNoticeMessageWidget
}; 
 
 


//Class KartDrift.AnimNotifyByCostumeInterface Size 40
// Inherited 40 bytes 
class UAnimNotifyByCostumeInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AsyncLoadRaceCharacterMontage Size 72
// Inherited 72 bytes 
class UAsyncLoadRaceCharacterMontage : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_Material Size 72
// Inherited 48 bytes 
class UAnimNotifyState_Material : public UAnimNotifyState
{

 public: 
	int32_t MaterialIndex;  // Offset: 48 Size: 4
	float DefaultValue;  // Offset: 52 Size: 4
	struct FName CurveName;  // Offset: 56 Size: 8
	struct FName ParameterName;  // Offset: 64 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ChatItemDefEntryObject Size 80
// Inherited 40 bytes 
class UChatItemDefEntryObject : public UObject
{

 public: 
	char pad_40[40];  // Offset: 40 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureLightActor Size 552
// Inherited 544 bytes 
class ABuildCaptureLightActor : public AActor
{

 public: 
	struct USpotLightComponent* SpotLightComponent;  // Offset: 544 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_OverlayMaterial Size 88
// Inherited 48 bytes 
class UAnimNotifyState_OverlayMaterial : public UAnimNotifyState
{

 public: 
	struct FName SlotName;  // Offset: 48 Size: 8
	int32_t ElementIndex;  // Offset: 56 Size: 4
	int32_t OverlayIndex;  // Offset: 60 Size: 4
	struct UMaterialInterface* OverlayMaterial;  // Offset: 64 Size: 8
	struct TArray<struct FOverlayMaterialCurveData> CurveValue;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceCounterWidget Size 728
// Inherited 608 bytes 
class URaceCounterWidget : public UUserWidget
{

 public: 
	struct UFMODEvent* CountDownSound;  // Offset: 608 Size: 8
	struct UFMODEvent* CountDownFinishSound;  // Offset: 616 Size: 8
	int32_t CountDownBegin;  // Offset: 624 Size: 4
	int32_t SplitScreenDisabledBegin;  // Offset: 628 Size: 4
	int32_t SplitScreenEnabledBegin;  // Offset: 632 Size: 4
	char pad_636[4];  // Offset: 636 Size: 4
	struct UKdTextBlock* V_GoCountText;  // Offset: 640 Size: 8
	struct UOverlay* V_ov_ExactTimingStartBoost;  // Offset: 648 Size: 8
	struct UWidgetAnimation* GoCountAnim;  // Offset: 656 Size: 8
	struct UWidgetAnimation* GoAnim;  // Offset: 664 Size: 8
	struct UWidgetAnimation* ExactTimingStartBoostAnim;  // Offset: 672 Size: 8
	struct TArray<struct FText> GoCountStrings;  // Offset: 680 Size: 16
	struct TArray<struct UObject*> PreloadedObjects;  // Offset: 696 Size: 16
	char pad_712[16];  // Offset: 712 Size: 16



 // Functions 
 public:
	void PlayExactTimingStartBoostAnimation(); // Function KartDrift.RaceCounterWidget.PlayExactTimingStartBoostAnimation
	void EndRaceCountdown(float CountdownFinishTime); // Function KartDrift.RaceCounterWidget.EndRaceCountdown
	void BeginRaceCountdown(float CountdownFinishTime); // Function KartDrift.RaceCounterWidget.BeginRaceCountdown
}; 
 
 


//Class KartDrift.FMODNotifyComponent Size 216
// Inherited 176 bytes 
class UFMODNotifyComponent : public UActorComponent
{

 public: 
	char pad_176_1 : 7;  // Offset: 176 Size: 1
	bool FMODPlay : 1;  // Offset: 176 Size: 1
	char pad_177[3];  // Offset: 177 Size: 3
	float Volume;  // Offset: 180 Size: 4
	float Pitch;  // Offset: 184 Size: 4
	char pad_188_1 : 7;  // Offset: 188 Size: 1
	bool bOverrideAttenuation : 1;  // Offset: 188 Size: 1
	char pad_189[3];  // Offset: 189 Size: 3
	float MinimumDistance;  // Offset: 192 Size: 4
	float MaximumDistance;  // Offset: 196 Size: 4
	char pad_200_1 : 7;  // Offset: 200 Size: 1
	bool bOverrideParameter : 1;  // Offset: 200 Size: 1
	char pad_201[3];  // Offset: 201 Size: 3
	struct FAnimNoti_FMODParam Param;  // Offset: 204 Size: 12



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMissionTitleWidget Size 696
// Inherited 608 bytes 
class ULicenseMissionTitleWidget : public UUserWidget
{

 public: 
	struct UOverlay* OV_MissionTitle;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_MissionTitle;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_Add_Score_Text;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Anim_Success;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_Fail;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_addscore;  // Offset: 648 Size: 8
	char pad_656[40];  // Offset: 656 Size: 40



 // Functions 
 public:
	void OnShowDriftMission(bool bShow); // Function KartDrift.LicenseMissionTitleWidget.OnShowDriftMission
	void OnNextDriftMission(float KeepNSeconds, float ReuseInNSeconds, float InNSeconds, int32_t UseNTimes); // Function KartDrift.LicenseMissionTitleWidget.OnNextDriftMission
	void OnDriftMissionStartTimer(bool bStartTimer); // Function KartDrift.LicenseMissionTitleWidget.OnDriftMissionStartTimer
	void OnDriftMissionDriftCount(int32_t InDriftCount); // Function KartDrift.LicenseMissionTitleWidget.OnDriftMissionDriftCount
}; 
 
 


//Class KartDrift.AnimNotifyState_TimedStaticMesh Size 176
// Inherited 48 bytes 
class UAnimNotifyState_TimedStaticMesh : public UAnimNotifyState
{

 public: 
	struct TArray<struct UStaticMesh*> AttachingItems;  // Offset: 48 Size: 16
	int32_t DefaultAttachIndex;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4
	struct UStaticMesh* Additional_PrimitiveComponent;  // Offset: 72 Size: 8
	struct FName SocketName;  // Offset: 80 Size: 8
	struct FVector LocationOffset;  // Offset: 88 Size: 12
	struct FRotator RotationOffset;  // Offset: 100 Size: 12
	float AnimTime;  // Offset: 112 Size: 4
	char pad_116_1 : 7;  // Offset: 116 Size: 1
	bool bUseCustomDepth : 1;  // Offset: 116 Size: 1
	char pad_117[3];  // Offset: 117 Size: 3
	int32_t CustomDepthStencilValue;  // Offset: 120 Size: 4
	enum class ERendererStencilMask RendererStencilMask;  // Offset: 124 Size: 1
	char pad_125_1 : 7;  // Offset: 125 Size: 1
	bool bUseVisibleCurve : 1;  // Offset: 125 Size: 1
	char pad_126[2];  // Offset: 126 Size: 2
	struct FName CurveName;  // Offset: 128 Size: 8
	struct FOverlayMaterialData OverlayMaterial;  // Offset: 136 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioBeginnerCareInitializeRule Size 72
// Inherited 72 bytes 
class UScenarioBeginnerCareInitializeRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AnimNotifyState_TogglePhysics Size 72
// Inherited 48 bytes 
class UAnimNotifyState_TogglePhysics : public UAnimNotifyState
{

 public: 
	char pad_48_1 : 7;  // Offset: 48 Size: 1
	bool bUseAllBone : 1;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	int32_t LayerId;  // Offset: 52 Size: 4
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool bTurnOff : 1;  // Offset: 56 Size: 1
	char pad_57_1 : 7;  // Offset: 57 Size: 1
	bool bUseCurve : 1;  // Offset: 57 Size: 1
	char pad_58[2];  // Offset: 58 Size: 2
	struct FName CurveName;  // Offset: 60 Size: 8
	char pad_68[4];  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropObserver Size 40
// Inherited 40 bytes 
class UKdPlayerPropObserver : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrDropMyStickerStock Size 80
// Inherited 72 bytes 
class ULrDropMyStickerStock : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool changed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AODecalComponent Size 704
// Inherited 688 bytes 
class UAODecalComponent : public UDecalComponent
{

 public: 
	char pad_688[16];  // Offset: 688 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ApproachArrowWidget Size 648
// Inherited 608 bytes 
class UApproachArrowWidget : public UUserWidget
{

 public: 
	struct UTextBlock* NumberText;  // Offset: 608 Size: 8
	struct UImage* ArrowImage;  // Offset: 616 Size: 8
	struct TArray<struct TSoftObjectPtr<UTexture2D>> ArrowTextures;  // Offset: 624 Size: 16
	int32_t Number;  // Offset: 640 Size: 4
	int32_t Team;  // Offset: 644 Size: 4



 // Functions 
 public:
	void SetTeam(int32_t NewTeam); // Function KartDrift.ApproachArrowWidget.SetTeam
	void SetNumber(int32_t NewNumber); // Function KartDrift.ApproachArrowWidget.SetNumber
}; 
 
 


//Class KartDrift.ApproachWidget Size 768
// Inherited 608 bytes 
class UApproachWidget : public UUserWidget
{

 public: 
	struct UPanelWidget* MainPanelWidget;  // Offset: 608 Size: 8
	struct TSoftClassPtr<UObject> ArrowWidgetSubClass;  // Offset: 616 Size: 40
	int32_t MaxShowCount;  // Offset: 656 Size: 4
	float MinShowDistance;  // Offset: 660 Size: 4
	float MaxShowDistance;  // Offset: 664 Size: 4
	float MinHideDistance;  // Offset: 668 Size: 4
	float MaxHideDistance;  // Offset: 672 Size: 4
	float ShowAngle;  // Offset: 676 Size: 4
	float HideAngle;  // Offset: 680 Size: 4
	float PositionRadius;  // Offset: 684 Size: 4
	struct TArray<struct UApproachArrowWidget*> ArrowWidgets;  // Offset: 688 Size: 16
	struct TArray<struct AKdPawn*> LatestPawnList;  // Offset: 704 Size: 16
	struct APawn* MyPawn;  // Offset: 720 Size: 8
	int32_t MyPlayerID;  // Offset: 728 Size: 4
	int32_t OtherKartCount;  // Offset: 732 Size: 4
	struct FTimerHandle UpdateCountTimer;  // Offset: 736 Size: 8
	char pad_744[16];  // Offset: 744 Size: 16
	struct URaceRankComponent* RaceRank;  // Offset: 760 Size: 8



 // Functions 
 public:
	void UpdateArrowTransform(); // Function KartDrift.ApproachWidget.UpdateArrowTransform
	void UpdateArrowCount(); // Function KartDrift.ApproachWidget.UpdateArrowCount
	bool SetArrowTransform(struct FVector& MyKartLocation, struct FVector& MyKartBackward, struct FVector& AnotherKartLocation, float MinDiatance, float MaxDistance, float ViewAngle, float& OutAngle); // Function KartDrift.ApproachWidget.SetArrowTransform
	void SetActivateApproach(bool bActivate); // Function KartDrift.ApproachWidget.SetActivateApproach
	void ManagedTick(float inDeltaTime); // Function KartDrift.ApproachWidget.ManagedTick
	void AddApproachKart(int32_t Add); // Function KartDrift.ApproachWidget.AddApproachKart
}; 
 
 


//Class KartDrift.CommunityPageWidget Size 816
// Inherited 744 bytes 
class UCommunityPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* CommunityMainDialogWidget;  // Offset: 744 Size: 8
	struct UDialogTemplate* CommunityFriendMenuDialogWidget;  // Offset: 752 Size: 8
	struct UDialogTemplate* CommunityInviteMenuDialogWidget;  // Offset: 760 Size: 8
	struct UDialogTemplate* CommunityPartyInviteDialogWidget;  // Offset: 768 Size: 8
	struct UDialogTemplate* CommunityInviteUserMenuDialogWidget;  // Offset: 776 Size: 8
	struct UDialogTemplate* CommunityPartyMenuDialogWidget;  // Offset: 784 Size: 8
	char pad_792[16];  // Offset: 792 Size: 16
	struct UDialogTemplate* CommunityUserInfoDialogWidget;  // Offset: 808 Size: 8



 // Functions 
 public:
	void ToggleMute(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.ToggleMute
	void ResetPartyInviteButton(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.ResetPartyInviteButton
	void ResetCustomInviteButton(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.ResetCustomInviteButton
	void ResetAddFriendButton(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.ResetAddFriendButton
	void OnUpdatePartyInvitation(); // Function KartDrift.CommunityPageWidget.OnUpdatePartyInvitation
	void OnShowToastPopup(struct FText& TitleText, struct FText& DescText); // Function KartDrift.CommunityPageWidget.OnShowToastPopup
	void OnPartyJoined(); // Function KartDrift.CommunityPageWidget.OnPartyJoined
	void OnInviteJoinParty(); // Function KartDrift.CommunityPageWidget.OnInviteJoinParty
	void OnDisablePartyInviteButton(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.OnDisablePartyInviteButton
	void OnDisableCustomGameInviteButton(struct FString InAccountId); // Function KartDrift.CommunityPageWidget.OnDisableCustomGameInviteButton
	void OnConfirmUserInfo(int32_t InIndex); // Function KartDrift.CommunityPageWidget.OnConfirmUserInfo
	void MainDialog_OnLinkAccountClicked(int32_t InIndex); // Function KartDrift.CommunityPageWidget.MainDialog_OnLinkAccountClicked
	void InviteMenu_Recommend_OnGetRecommendFriends(); // Function KartDrift.CommunityPageWidget.InviteMenu_Recommend_OnGetRecommendFriends
	void InviteMenu_Find_OnFindRiderComplete(struct TArray<struct FAccountPlatformData> accountData); // Function KartDrift.CommunityPageWidget.InviteMenu_Find_OnFindRiderComplete
}; 
 
 


//Class KartDrift.C_CommonPopupReward Size 864
// Inherited 864 bytes 
class UC_CommonPopupReward : public UCommonPopupReward
{

 public: 



 // Functions 
 public:
	void OnChangeInitalRewardStep(int32_t InIndex); // Function KartDrift.C_CommonPopupReward.OnChangeInitalRewardStep
}; 
 
 


//Class KartDrift.TimeAttackTrackChangeDialog Size 896
// Inherited 816 bytes 
class UTimeAttackTrackChangeDialog : public UDialogTemplate
{

 public: 
	char pad_816[80];  // Offset: 816 Size: 80



 // Functions 
 public:
	void OnClickedMoveToLicenseButton(int32_t InIndex); // Function KartDrift.TimeAttackTrackChangeDialog.OnClickedMoveToLicenseButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.TimeAttackTrackChangeDialog.OnClickedBackButton
}; 
 
 


//Class KartDrift.MajorGameData Size 72
// Inherited 40 bytes 
class UMajorGameData : public UObject
{

 public: 
	struct TArray<struct FMajorGamePlayerData> players;  // Offset: 40 Size: 16
	struct TArray<struct FMajorGameTeamData> teams;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AssistListInst Size 632
// Inherited 608 bytes 
class UAssistListInst : public UUserWidget
{

 public: 
	struct UKdTextBlock* AssistText;  // Offset: 608 Size: 8
	float AnimDelay;  // Offset: 616 Size: 4
	char pad_620[4];  // Offset: 620 Size: 4
	struct UWidgetAnimation* StartAnim_Inst;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AsyncLoadObjectInterface Size 40
// Inherited 40 bytes 
class UAsyncLoadObjectInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSpectatorPawn Size 680
// Inherited 680 bytes 
class AKdSpectatorPawn : public ASpectatorPawn
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BalloonCableAnimInstance Size 720
// Inherited 704 bytes 
class UBalloonCableAnimInstance : public UAnimInstance
{

 public: 
	struct FVector AddedRigidForce;  // Offset: 696 Size: 12
	char pad_716[4];  // Offset: 716 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcCustomGameMessage Size 80
// Inherited 48 bytes 
class UPcCustomGameMessage : public UPcPacket
{

 public: 
	struct FString accountId;  // Offset: 48 Size: 16
	struct FString Message;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetCostume Size 280
// Inherited 64 bytes 
class UBelongingDataAssetCostume : public UBelongingDataAsset
{

 public: 
	float CharMeshScale;  // Offset: 64 Size: 4
	struct FVector OffsetFromSeat;  // Offset: 68 Size: 12
	struct FVector OffsetLocStandFromKart;  // Offset: 80 Size: 12
	struct FRotator OffsetRotStandFromKart;  // Offset: 92 Size: 12
	float HandleDirectionOffset;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4
	struct UCharacterMontageAsset* MontageAssets;  // Offset: 112 Size: 8
	struct TSoftObjectPtr<USkeletalMesh> Mesh;  // Offset: 120 Size: 40
	struct TSoftObjectPtr<UPhysicsAsset> PhysicAssetOverride;  // Offset: 160 Size: 40
	struct TSoftClassPtr<UObject> AnimInstance;  // Offset: 200 Size: 40
	enum class EKtAffiliatePlatform TargetAffiliatePlatform;  // Offset: 240 Size: 1
	char pad_241[7];  // Offset: 241 Size: 7
	struct FString DefaultAssetItemId;  // Offset: 248 Size: 16
	int32_t CostumeGadgetIndex;  // Offset: 264 Size: 4
	int32_t CostumeParticleIndex;  // Offset: 268 Size: 4
	int32_t CostumeFMODIndex;  // Offset: 272 Size: 4
	char pad_276[4];  // Offset: 276 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdAccountCheatHandler Size 72
// Inherited 40 bytes 
class UKdAccountCheatHandler : public UKdCheatHandlerBase
{

 public: 
	struct UGameInstance* GameInstance;  // Offset: 40 Size: 8
	struct UKdAccount* Account;  // Offset: 48 Size: 8
	char pad_56[16];  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyAccumItemWidget Size 688
// Inherited 608 bytes 
class UScenarioKeyAccumItemWidget : public UUserWidget
{

 public: 
	struct UScenarioKeyGuideWidget* V_KeyGuide;  // Offset: 608 Size: 8
	char pad_616[56];  // Offset: 616 Size: 56
	struct UKdTextBlock* V_TextBlock_Descript;  // Offset: 672 Size: 8
	struct UWidgetAnimationGraph* WidgetAnimationGraph;  // Offset: 680 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_LoginPageWidget Size 1040
// Inherited 1040 bytes 
class UC_LoginPageWidget : public ULoginPageWidget
{

 public: 



 // Functions 
 public:
	void OnWaitExpireAccount(int32_t ExpireSec); // Function KartDrift.C_LoginPageWidget.OnWaitExpireAccount
}; 
 
 


//Class KartDrift.BelongingDataAssetMotionStand Size 64
// Inherited 64 bytes 
class UBelongingDataAssetMotionStand : public UBelongingDataAsset
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetKartBody Size 1456
// Inherited 64 bytes 
class UBelongingDataAssetKartBody : public UBelongingDataAsset
{

 public: 
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool bIsLineupKart : 1;  // Offset: 64 Size: 1
	char pad_65_1 : 7;  // Offset: 65 Size: 1
	bool bUnuseDisplayFrontWheel : 1;  // Offset: 65 Size: 1
	char pad_66_1 : 7;  // Offset: 66 Size: 1
	bool bTransform : 1;  // Offset: 66 Size: 1
	char pad_67[5];  // Offset: 67 Size: 5
	struct TSoftObjectPtr<USkeletalMesh> ItemSkeletalMesh;  // Offset: 72 Size: 40
	struct TSoftObjectPtr<UPhysicsAsset> PhysicsAsset;  // Offset: 112 Size: 40
	enum class EKtAffiliatePlatform TargetAffiliatePlatform;  // Offset: 152 Size: 1
	char pad_153[7];  // Offset: 153 Size: 7
	struct TSoftObjectPtr<UMaterialInterface> OverrideTargetMaterial;  // Offset: 160 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> OverridingMaterial;  // Offset: 200 Size: 40
	struct TSoftClassPtr<UObject> ItemAnimation;  // Offset: 240 Size: 40
	struct TSoftClassPtr<UObject> SubLinkAnimation;  // Offset: 280 Size: 40
	struct TSoftObjectPtr<UEffectPreset> EffectPreset;  // Offset: 320 Size: 40
	struct TSoftObjectPtr<UKartBodySound> KartSoundData;  // Offset: 360 Size: 40
	struct FVector OffsetFromSeat;  // Offset: 400 Size: 12
	struct FVector OffsetStandFromKart;  // Offset: 412 Size: 12
	struct FKartEffectEvent KartEffectEvent;  // Offset: 424 Size: 272
	enum class EWheelType WheelType;  // Offset: 696 Size: 1
	char pad_697[3];  // Offset: 697 Size: 3
	int32_t ChangeMaterialBySpeed;  // Offset: 700 Size: 4
	struct FKartAdditionalSkillData AdditionalSkillData;  // Offset: 704 Size: 408
	struct TSoftObjectPtr<UMaterialInterface> AODecalMaterial;  // Offset: 1112 Size: 40
	struct FBoxSphereBounds AODecalBounds;  // Offset: 1152 Size: 28
	float AODecalScale;  // Offset: 1180 Size: 4
	struct TSoftObjectPtr<UHeadlightDataAsset> Headlight;  // Offset: 1184 Size: 40
	struct FLinearColor Rear_Light_Color;  // Offset: 1224 Size: 16
	float LeftTrailWidth;  // Offset: 1240 Size: 4
	float RightTrailWidth;  // Offset: 1244 Size: 4
	struct FTransform BoosterWindTransform;  // Offset: 1248 Size: 48
	struct TSoftObjectPtr<UAnimSequenceBase> IdleAnimation;  // Offset: 1296 Size: 40
	struct TSoftObjectPtr<UAnimSequenceBase> AnimTransform;  // Offset: 1336 Size: 40
	struct TSoftObjectPtr<UAnimSequenceBase> AnimTransformed;  // Offset: 1376 Size: 40
	char pad_1416_1 : 7;  // Offset: 1416 Size: 1
	bool bIdleRateBySpeed : 1;  // Offset: 1416 Size: 1
	char pad_1417_1 : 7;  // Offset: 1417 Size: 1
	bool bTransformLoopRateBySpeed : 1;  // Offset: 1417 Size: 1
	char pad_1418[2];  // Offset: 1418 Size: 2
	float IdleAnimRate;  // Offset: 1420 Size: 4
	float TransformAnimRate;  // Offset: 1424 Size: 4
	float UntransLoopRate;  // Offset: 1428 Size: 4
	float TransformLoopAnimRate;  // Offset: 1432 Size: 4
	float WheelAxisOffset;  // Offset: 1436 Size: 4
	float SuspensionOffset;  // Offset: 1440 Size: 4
	char pad_1444[12];  // Offset: 1444 Size: 12



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PremiumChallengePageWidget Size 752
// Inherited 744 bytes 
class UPremiumChallengePageWidget : public UKdPageWidget
{

 public: 
	char pad_744[8];  // Offset: 744 Size: 8



 // Functions 
 public:
	void PremiumChallenge_OnClickedBackButton(int32_t InIndex); // Function KartDrift.PremiumChallengePageWidget.PremiumChallenge_OnClickedBackButton
	void OnUpdate_ShortCutButtonVisibility(bool bVisibility); // Function KartDrift.PremiumChallengePageWidget.OnUpdate_ShortCutButtonVisibility
	void OnUpdate_RacingPassUI(); // Function KartDrift.PremiumChallengePageWidget.OnUpdate_RacingPassUI
	void OnUpdate_QuestUI(bool bInit); // Function KartDrift.PremiumChallengePageWidget.OnUpdate_QuestUI
	void OnRewardListButtonClicked(int32_t ButtonIndex); // Function KartDrift.PremiumChallengePageWidget.OnRewardListButtonClicked
	void OnClickedShortCut(int32_t nIndex); // Function KartDrift.PremiumChallengePageWidget.OnClickedShortCut
	void OnClickedPremiumChallengeSlot(int32_t InIndex); // Function KartDrift.PremiumChallengePageWidget.OnClickedPremiumChallengeSlot
	void ListAllEventByCheat(struct FString seasonId); // Function KartDrift.PremiumChallengePageWidget.ListAllEventByCheat
}; 
 
 


//Class KartDrift.BelongingDataAssetWheel Size 168
// Inherited 144 bytes 
class UBelongingDataAssetWheel : public UBelongingDataAssetKartParts
{

 public: 
	enum class EKtAffiliatePlatform TargetAffiliatePlatform;  // Offset: 144 Size: 1
	char pad_145[7];  // Offset: 145 Size: 7
	struct FString DefaultAssetItemId;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GamePhase Size 208
// Inherited 176 bytes 
class UGamePhase : public UActorComponent
{

 public: 
	char pad_176[32];  // Offset: 176 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopInventoryListKrPc Size 88
// Inherited 72 bytes 
class UPrShopInventoryListKrPc : public UPrPacket
{

 public: 
	struct TArray<struct FInventoryItemKrPc> Items;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetPlate Size 144
// Inherited 64 bytes 
class UBelongingDataAssetPlate : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<USkeletalMesh> PartMesh;  // Offset: 64 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> MaterialInterface;  // Offset: 104 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetBooster Size 280
// Inherited 64 bytes 
class UBelongingDataAssetBooster : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<UParticleSystem> SoonBooster;  // Offset: 64 Size: 40
	struct TSoftObjectPtr<UParticleSystem> MainBooster_Start;  // Offset: 104 Size: 40
	struct TSoftObjectPtr<UParticleSystem> MainBooster_Loop;  // Offset: 144 Size: 40
	struct TSoftObjectPtr<UParticleSystem> MainBooster_End;  // Offset: 184 Size: 40
	float MainBooster_LoopStartTick;  // Offset: 224 Size: 4
	struct FLinearColor EmissiveColor;  // Offset: 228 Size: 16
	char pad_244[4];  // Offset: 244 Size: 4
	struct UFMODEvent* KartBoostSound;  // Offset: 248 Size: 8
	struct UFMODEvent* KartStartBoostSound;  // Offset: 256 Size: 8
	struct UFMODEvent* KartBurstBoostSound;  // Offset: 264 Size: 8
	struct UFMODEvent* BoosterPlaySound;  // Offset: 272 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCustomGameKickedList Size 56
// Inherited 56 bytes 
class UPqCustomGameKickedList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCheckItemUseData Size 144
// Inherited 64 bytes 
class ULicenseCheckItemUseData : public ULicenseContents
{

 public: 
	struct TMap<enum class EItemType, int32_t> ItemScore;  // Offset: 64 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetStat Size 64
// Inherited 64 bytes 
class UBelongingDataAssetStat : public UBelongingDataAsset
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CharAnimInstance Size 1040
// Inherited 704 bytes 
class UCharAnimInstance : public UAnimInstance
{

 public: 
	enum class ECharacterAnimGraphState CharacterState;  // Offset: 704 Size: 1
	char pad_705[7];  // Offset: 705 Size: 7
	struct UBlendSpaceBase* RaceBlendSpace;  // Offset: 712 Size: 8
	struct UAnimSequenceBase* BoostAnimSequence;  // Offset: 720 Size: 8
	struct UAnimSequenceBase* StandAnimSequence;  // Offset: 728 Size: 8
	struct UAnimSequenceBase* SitAnimSequence;  // Offset: 736 Size: 8
	char pad_744[8];  // Offset: 744 Size: 8
	float Steer;  // Offset: 752 Size: 4
	float Throttle;  // Offset: 756 Size: 4
	char pad_760_1 : 7;  // Offset: 760 Size: 1
	bool bIsBoost : 1;  // Offset: 760 Size: 1
	char pad_761_1 : 7;  // Offset: 761 Size: 1
	bool bStand : 1;  // Offset: 761 Size: 1
	char pad_762_1 : 7;  // Offset: 762 Size: 1
	bool bLobby : 1;  // Offset: 762 Size: 1
	char pad_763[1];  // Offset: 763 Size: 1
	float PhysicsWithBlend;  // Offset: 764 Size: 4
	struct TArray<float> LayerBlend;  // Offset: 768 Size: 16
	char pad_784_1 : 7;  // Offset: 784 Size: 1
	bool bInitLookAt : 1;  // Offset: 784 Size: 1
	char pad_785_1 : 7;  // Offset: 785 Size: 1
	bool bActivateLookat : 1;  // Offset: 785 Size: 1
	char pad_786[2];  // Offset: 786 Size: 2
	float LookAtLerpDelta;  // Offset: 788 Size: 4
	float FrontViewLerpAlpha;  // Offset: 792 Size: 4
	struct FRotator ReceivedRotation;  // Offset: 796 Size: 12
	struct FRotator HeadRotation;  // Offset: 808 Size: 12
	struct FRotator NeckRotation;  // Offset: 820 Size: 12
	struct FRotator SavedRotation;  // Offset: 832 Size: 12
	float HeadPitchFactor;  // Offset: 844 Size: 4
	char pad_848[8];  // Offset: 848 Size: 8
	struct UCurveFloat* LookAtSpeedCurve;  // Offset: 856 Size: 8
	float LookAtDelay;  // Offset: 864 Size: 4
	float NeckHeadRotateRate;  // Offset: 868 Size: 4
	float MaxYaw;  // Offset: 872 Size: 4
	char pad_876[4];  // Offset: 876 Size: 4
	struct FString CharacterName;  // Offset: 880 Size: 16
	struct FString FolderPath;  // Offset: 896 Size: 16
	char pad_912_1 : 7;  // Offset: 912 Size: 1
	bool bAutoPropertySettings : 1;  // Offset: 912 Size: 1
	char pad_913[3];  // Offset: 913 Size: 3
	float LastCrashTime;  // Offset: 916 Size: 4
	char pad_920_1 : 7;  // Offset: 920 Size: 1
	bool bNoAnimUpdate : 1;  // Offset: 920 Size: 1
	char pad_921[7];  // Offset: 921 Size: 7
	struct UCharacterMontageAsset* MontageAsset;  // Offset: 928 Size: 8
	struct TSet<struct UObject*> PreCacheMontageAssetContainer;  // Offset: 936 Size: 80
	char pad_1016[8];  // Offset: 1016 Size: 8
	struct UKdAnimationComponent* KdAnimationComponent;  // Offset: 1024 Size: 8
	char pad_1032[8];  // Offset: 1032 Size: 8



 // Functions 
 public:
	void PlayMontageOnLoop(struct UAnimMontage* Montage, bool bInterrupted); // Function KartDrift.CharAnimInstance.PlayMontageOnLoop
	void PlayMontageNTimes(enum class ECharacterMontage InState, int32_t NumLoops); // Function KartDrift.CharAnimInstance.PlayMontageNTimes
	void OnMontageEnded(struct UAnimMontage* AnimMontage, bool bInterrupted, enum class ECharacterMontage InState, int32_t NumLoops); // Function KartDrift.CharAnimInstance.OnMontageEnded
	void OnCrashKart(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.CharAnimInstance.OnCrashKart
	void OnAsyncMontageLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.CharAnimInstance.OnAsyncMontageLoadCompleted
	void InitializeCharacterLookAt(struct FRotator& InRotator); // Function KartDrift.CharAnimInstance.InitializeCharacterLookAt
	enum class ECharacterAnimGraphState GetCharacterState(); // Function KartDrift.CharAnimInstance.GetCharacterState
	void CharacterLookAt(struct FRotator& InRotator, float DeltaTime); // Function KartDrift.CharAnimInstance.CharacterLookAt
	void AllMontageInstancesEnded(); // Function KartDrift.CharAnimInstance.AllMontageInstancesEnded
}; 
 
 


//Class KartDrift.BelongingDataAssetCash Size 64
// Inherited 64 bytes 
class UBelongingDataAssetCash : public UBelongingDataAsset
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_StandByGame_License Size 88
// Inherited 80 bytes 
class UTransition_StandByGame_License : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BelongingDataAssetBalloon Size 104
// Inherited 64 bytes 
class UBelongingDataAssetBalloon : public UBelongingDataAsset
{

 public: 
	struct TSoftObjectPtr<USkeletalMesh> SkeletalMesh;  // Offset: 64 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EffectPreset Size 200
// Inherited 48 bytes 
class UEffectPreset : public UDataAsset
{

 public: 
	char pad_48[8];  // Offset: 48 Size: 8
	struct UParticleSystem* Smoke;  // Offset: 56 Size: 8
	struct UParticleSystem* Rear_Light_Trail;  // Offset: 64 Size: 8
	struct UParticleSystem* Wind_ItemBoost;  // Offset: 72 Size: 8
	struct UParticleSystem* Wind_InstanceBoost;  // Offset: 80 Size: 8
	struct UParticleSystem* Enhanced_Wind_ItemBoost;  // Offset: 88 Size: 8
	struct UParticleSystem* Enhanced_Wind_InstanceBoost;  // Offset: 96 Size: 8
	struct UParticleSystem* SparkL;  // Offset: 104 Size: 8
	struct UParticleSystem* SparkR;  // Offset: 112 Size: 8
	struct UParticleSystem* SkidTrailL;  // Offset: 120 Size: 8
	struct UParticleSystem* SkidTrailR;  // Offset: 128 Size: 8
	struct UParticleSystem* SlipStream;  // Offset: 136 Size: 8
	struct UParticleSystem* Drafting;  // Offset: 144 Size: 8
	struct UParticleSystem* ItemCubeOverlap;  // Offset: 152 Size: 8
	struct UParticleSystem* Crash_Weak;  // Offset: 160 Size: 8
	struct UParticleSystem* Crash_Strong;  // Offset: 168 Size: 8
	struct UParticleSystem* LandRoad;  // Offset: 176 Size: 8
	struct UNiagaraSystem* Rear_Light_NIATrail;  // Offset: 184 Size: 8
	struct UCurveFloat* BoostTrailSpeedModifier;  // Offset: 192 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_NormalChallengePageWidget Size 744
// Inherited 744 bytes 
class UC_NormalChallengePageWidget : public UNormalChallengePageWidget
{

 public: 



 // Functions 
 public:
	void OnFocusedNormalChallengeSlot(int32_t SlotIndex); // Function KartDrift.C_NormalChallengePageWidget.OnFocusedNormalChallengeSlot
}; 
 
 


//Class KartDrift.LiveryDefinesLibrary Size 40
// Inherited 40 bytes 
class ULiveryDefinesLibrary : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BoostComponent Size 264
// Inherited 176 bytes 
class UBoostComponent : public UActorComponent
{

 public: 
	char pad_176[88];  // Offset: 176 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartMovementBuff Size 40
// Inherited 40 bytes 
class UKartMovementBuff : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbyPawn Size 640
// Inherited 640 bytes 
class ADedicatedLobbyPawn : public APawn
{

 public: 



 // Functions 
 public:
	void UpdateDesc(struct FDedicatedLobbyPlayerDesc InDesc); // Function KartDrift.DedicatedLobbyPawn.UpdateDesc
}; 
 
 


//Class KartDrift.M_LiveryEditPageWidget Size 936
// Inherited 888 bytes 
class UM_LiveryEditPageWidget : public ULiveryEditPageWidget
{

 public: 
	char pad_888_1 : 7;  // Offset: 888 Size: 1
	bool bSaveLayerMoveOrCamera : 1;  // Offset: 888 Size: 1
	char pad_889[3];  // Offset: 889 Size: 3
	float ScrollWaitTimeMax;  // Offset: 892 Size: 4
	float ScrollSpeedChanges;  // Offset: 896 Size: 4
	float ScrollSpeedMax;  // Offset: 900 Size: 4
	char pad_904[32];  // Offset: 904 Size: 32



 // Functions 
 public:
	void OnUnChecked_UseLayerScaleY(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnUnChecked_UseLayerScaleY
	void OnUnChecked_UseLayerScaleX(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnUnChecked_UseLayerScaleX
	void OnUnChecked_UseFixedUnit(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnUnChecked_UseFixedUnit
	void OnStickerListScrolled(float InOffset); // Function KartDrift.M_LiveryEditPageWidget.OnStickerListScrolled
	void OnReleasedRotate(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnReleasedRotate
	void OnPressedRotateR(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnPressedRotateR
	void OnPressedRotateL(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnPressedRotateL
	void OnMoveToPrevWrappingLayer(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnMoveToPrevWrappingLayer
	void OnMoveToNextWrappingLayer(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnMoveToNextWrappingLayer
	void OnClickedManagingEquip(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnClickedManagingEquip
	void OnClickedManagingAddNew(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnClickedManagingAddNew
	void OnClicked_UseSticker(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnClicked_UseSticker
	void OnClicked_SubColorBack(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnClicked_SubColorBack
	void OnChecked_UseLayerScaleY(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnChecked_UseLayerScaleY
	void OnChecked_UseLayerScaleX(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnChecked_UseLayerScaleX
	void OnChecked_UseFixedUnit(int32_t InIndex); // Function KartDrift.M_LiveryEditPageWidget.OnChecked_UseFixedUnit
}; 
 
 


//Class KartDrift.BoostBuff Size 72
// Inherited 40 bytes 
class UBoostBuff : public UKartMovementBuff
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureActor Size 752
// Inherited 544 bytes 
class ABuildCaptureActor : public AActor
{

 public: 
	char pad_544[208];  // Offset: 544 Size: 208



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureCameraActor Size 576
// Inherited 544 bytes 
class ABuildCaptureCameraActor : public AActor
{

 public: 
	struct UCineCameraComponent* CineCameraComponent;  // Offset: 544 Size: 8
	char pad_552[24];  // Offset: 552 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureCameraListItemWidget Size 800
// Inherited 608 bytes 
class UBuildCaptureCameraListItemWidget : public UUserWidget
{

 public: 
	struct UButton* Button_CamFocus;  // Offset: 608 Size: 8
	struct UButton* Button_CamModify;  // Offset: 616 Size: 8
	struct UButton* Button_CamDestroy;  // Offset: 624 Size: 8
	struct UTextBlock* TextBlock_CamName;  // Offset: 632 Size: 8
	struct UComboBoxString* ComboBoxString;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8
	struct FBuildCaptureCameraInfo BuildCameraInfo;  // Offset: 656 Size: 128
	char pad_784[16];  // Offset: 784 Size: 16



 // Functions 
 public:
	void OnComboBoxSelectionChanged(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.BuildCaptureCameraListItemWidget.OnComboBoxSelectionChanged
	void OnButtonReleased_CameraModify(); // Function KartDrift.BuildCaptureCameraListItemWidget.OnButtonReleased_CameraModify
	void OnButtonReleased_CameraFocus(); // Function KartDrift.BuildCaptureCameraListItemWidget.OnButtonReleased_CameraFocus
	void OnButtonReleased_CameraDestroy(); // Function KartDrift.BuildCaptureCameraListItemWidget.OnButtonReleased_CameraDestroy
}; 
 
 


//Class KartDrift.BuildCaptureCameraListWidget Size 664
// Inherited 608 bytes 
class UBuildCaptureCameraListWidget : public UUserWidget
{

 public: 
	struct UPanelWidget* Panel_BuildCaptureCameraListItems;  // Offset: 608 Size: 8
	struct TSoftClassPtr<UObject> BuildCaptureCameraListItemWidgetClass;  // Offset: 616 Size: 40
	char pad_656[8];  // Offset: 656 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameplayKeyGuide Size 792
// Inherited 608 bytes 
class UGameplayKeyGuide : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	enum class EGamplayKeyGuideType KeyGuideType;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7
	struct UKdTextBlock* v_TextBlock;  // Offset: 632 Size: 8
	struct UKeyIconWidget* v_KeyIcon;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_FlickerKey;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_FlickerRelease;  // Offset: 656 Size: 8
	char pad_664[80];  // Offset: 664 Size: 80
	struct UItemSlotComponent* ItemSlotComponent;  // Offset: 744 Size: 8
	struct UKartMovementComponent* Movement;  // Offset: 752 Size: 8
	struct UMovementAssistComponent* Assist;  // Offset: 760 Size: 8
	struct TArray<enum class EItemType> ItemTypes;  // Offset: 768 Size: 16
	char pad_784_1 : 7;  // Offset: 784 Size: 1
	bool bCounterSteerPositive : 1;  // Offset: 784 Size: 1
	char pad_785[7];  // Offset: 785 Size: 7



 // Functions 
 public:
	void UpdateWidget(); // Function KartDrift.GameplayKeyGuide.UpdateWidget
	void UpdateItemSlot(struct TArray<enum class EItemType>& ItemTypes, bool bActivate); // Function KartDrift.GameplayKeyGuide.UpdateItemSlot
	void OnWrongWay(bool Activated); // Function KartDrift.GameplayKeyGuide.OnWrongWay
	void GuideCounterSteer(bool bPositive, bool bActivate); // Function KartDrift.GameplayKeyGuide.GuideCounterSteer
	void DriftGuide(bool bLeft, bool bActivate); // Function KartDrift.GameplayKeyGuide.DriftGuide
	void CanInstanceBoost(bool bActivate); // Function KartDrift.GameplayKeyGuide.CanInstanceBoost
	void BoostGuide(bool bActivate); // Function KartDrift.GameplayKeyGuide.BoostGuide
}; 
 
 


//Class KartDrift.KdPatrolManager Size 376
// Inherited 176 bytes 
class UKdPatrolManager : public UActorComponent
{

 public: 
	struct TMap<struct AActor*, struct FECS_SplinePatrolComponent> SplinePatrolComponents;  // Offset: 176 Size: 80
	char pad_256[120];  // Offset: 256 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseReportData Size 112
// Inherited 40 bytes 
class ULicenseReportData : public UObject
{

 public: 
	struct FText Item;  // Offset: 40 Size: 24
	struct FText Calculate;  // Offset: 64 Size: 24
	struct FText Total;  // Offset: 88 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BuildCaptureLightListItemWidget Size 656
// Inherited 608 bytes 
class UBuildCaptureLightListItemWidget : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	struct UButton* Button_LightModify;  // Offset: 624 Size: 8
	struct UButton* Button_LightDestroy;  // Offset: 632 Size: 8
	struct UTextBlock* TextBlock_LightName;  // Offset: 640 Size: 8
	struct UComboBoxString* ComboBoxString;  // Offset: 648 Size: 8



 // Functions 
 public:
	void OnComboBoxSelectionChanged(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.BuildCaptureLightListItemWidget.OnComboBoxSelectionChanged
	void OnButtonReleased_LightModify(); // Function KartDrift.BuildCaptureLightListItemWidget.OnButtonReleased_LightModify
	void OnButtonReleased_LightDestroy(); // Function KartDrift.BuildCaptureLightListItemWidget.OnButtonReleased_LightDestroy
}; 
 
 


//Class KartDrift.FMODTriggerBox Size 600
// Inherited 552 bytes 
class AFMODTriggerBox : public ATriggerBox
{

 public: 
	char pad_552_1 : 7;  // Offset: 552 Size: 1
	bool FMOD_Play : 1;  // Offset: 552 Size: 1
	char pad_553_1 : 7;  // Offset: 553 Size: 1
	bool bOverlapped : 1;  // Offset: 553 Size: 1
	char pad_554[6];  // Offset: 554 Size: 6
	struct TArray<struct FFMOD_TriggerData> FMODSet;  // Offset: 560 Size: 16
	struct TArray<struct AFMODAmbientSound*> FMODSoundActor;  // Offset: 576 Size: 16
	char pad_592_1 : 7;  // Offset: 592 Size: 1
	bool FMOD_BeingPlay_Event : 1;  // Offset: 592 Size: 1
	char pad_593[7];  // Offset: 593 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackLogicComponent Size 368
// Inherited 224 bytes 
class UTimeAttackLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[144];  // Offset: 224 Size: 144



 // Functions 
 public:
	void OnUpdateRankingInfo(); // Function KartDrift.TimeAttackLogicComponent.OnUpdateRankingInfo
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.TimeAttackLogicComponent.OnSeasonUpdated
}; 
 
 


//Class KartDrift.LrGetStickerStock Size 192
// Inherited 72 bytes 
class ULrGetStickerStock : public UPrPacket
{

 public: 
	struct FStickerStock StickerStock;  // Offset: 72 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediRequestGameSessionData Size 72
// Inherited 56 bytes 
class UDqDediRequestGameSessionData : public UPqPacket
{

 public: 
	struct FString gameId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableAutoDrive Size 72
// Inherited 72 bytes 
class UEnableAutoDrive : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseTrafficConeHitLoseRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseTrafficConeHitLoseRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftMissionComponent Size 392
// Inherited 176 bytes 
class ULicenseDriftMissionComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct ULicenseDriftMissionData* Data;  // Offset: 200 Size: 8
	struct UParticleSystem* GateParticleSystem;  // Offset: 208 Size: 8
	struct TArray<struct AActor*> SpeedGateList;  // Offset: 216 Size: 16
	int32_t CurrentIndex;  // Offset: 232 Size: 4
	char pad_236[4];  // Offset: 236 Size: 4
	struct APawn* Pawn;  // Offset: 240 Size: 8
	struct FVector LastPosition;  // Offset: 248 Size: 12
	char pad_260[4];  // Offset: 260 Size: 4
	struct AActor* Owner;  // Offset: 264 Size: 8
	char pad_272[120];  // Offset: 272 Size: 120



 // Functions 
 public:
	void OnHitWall(); // Function KartDrift.LicenseDriftMissionComponent.OnHitWall
}; 
 
 


//Class KartDrift.BuildCaptureWidget Size 928
// Inherited 608 bytes 
class UBuildCaptureWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UButton* Button_NXBuildCaptureOn;  // Offset: 616 Size: 8
	struct UButton* Button_NXBuildCaptureOff;  // Offset: 624 Size: 8
	struct USpinBox* SpinBox_LightIntensity;  // Offset: 632 Size: 8
	struct USpinBox* SpinBox_LightRed;  // Offset: 640 Size: 8
	struct USpinBox* SpinBox_LightGreen;  // Offset: 648 Size: 8
	struct USpinBox* SpinBox_LightBlue;  // Offset: 656 Size: 8
	struct USpinBox* SpinBox_LightInnerConeAngle;  // Offset: 664 Size: 8
	struct USpinBox* SpinBox_LightOuterConeAngle;  // Offset: 672 Size: 8
	struct USpinBox* SpinBox_LightRadius;  // Offset: 680 Size: 8
	struct UButton* Button_SpawnLight;  // Offset: 688 Size: 8
	struct USpinBox* SpinBox_CameraFocusDistance;  // Offset: 696 Size: 8
	struct USpinBox* SpinBox_CameraFocalLength;  // Offset: 704 Size: 8
	struct USpinBox* SpinBox_CameraFocusDistance_ChangeSpeed;  // Offset: 712 Size: 8
	struct UComboBoxString* ComboBoxString_CameraTrackTarget;  // Offset: 720 Size: 8
	struct USpinBox* SpinBox_CameraAperture;  // Offset: 728 Size: 8
	struct USpinBox* SpinBox_SlowMotion;  // Offset: 736 Size: 8
	struct UButton* Button_SaveLevelEnv;  // Offset: 744 Size: 8
	struct UButton* Button_LoadLevelEnv;  // Offset: 752 Size: 8
	struct UButton* Button_HideAllUiToggle;  // Offset: 760 Size: 8
	struct UTextBlock* TextBlock_BindTarget;  // Offset: 768 Size: 8
	struct UTextBlock* TextBlock_LookTarget;  // Offset: 776 Size: 8
	struct USpinBox* SpinBox_CameraMoveSpeed;  // Offset: 784 Size: 8
	struct USpinBox* SpinBox_CameraRotateSpeed;  // Offset: 792 Size: 8
	struct UTextBlock* TextBlock_DetectTarget;  // Offset: 800 Size: 8
	struct UEditableTextBox* EditableTextBox_CameraTrackFilter;  // Offset: 808 Size: 8
	struct UButton* Button_ShowLightListToggle;  // Offset: 816 Size: 8
	struct UButton* Button_ShowCameraListToggle;  // Offset: 824 Size: 8
	struct UButton* Button_SpawnCamera;  // Offset: 832 Size: 8
	struct USpinBox* SpinBox_CameraMoveInterpSpeed;  // Offset: 840 Size: 8
	struct USpinBox* SpinBox_CameraDutchInterpSpeed;  // Offset: 848 Size: 8
	struct USpinBox* SpinBox_CameraRotateInterpSpeed;  // Offset: 856 Size: 8
	struct USizeBox* SizeBox_BuildCaptureCameraListWidget;  // Offset: 864 Size: 8
	struct UBuildCaptureCameraListWidget* BuildCaptureCameraListWidget;  // Offset: 872 Size: 8
	struct USizeBox* SizeBox_BuildCaptureLightListWidget;  // Offset: 880 Size: 8
	struct UBuildCaptureLightListWidget* BuildCaptureLightListWidget;  // Offset: 888 Size: 8
	struct USpinBox* SpinBox_DeadZone;  // Offset: 896 Size: 8
	char pad_904[4];  // Offset: 904 Size: 4
	int32_t SaveSlotIndex;  // Offset: 908 Size: 4
	int32_t LoadSlotIndex;  // Offset: 912 Size: 4
	char pad_916[4];  // Offset: 916 Size: 4
	struct UTextBlock* MaxCameraIndex;  // Offset: 920 Size: 8



 // Functions 
 public:
	void OnTextChanged_CameraTrackFilter(struct FText& Text); // Function KartDrift.BuildCaptureWidget.OnTextChanged_CameraTrackFilter
	void OnSpinBoxValueCommitted_SlowMotion(float InValue, enum class ETextCommit CommitMethod); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueCommitted_SlowMotion
	void OnSpinBoxValueChanged_SetCameraFocusDistanceSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_SetCameraFocusDistanceSpeed
	void OnSpinBoxValueChanged_LightRed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightRed
	void OnSpinBoxValueChanged_LightRadius(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightRadius
	void OnSpinBoxValueChanged_LightOuterConeAngle(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightOuterConeAngle
	void OnSpinBoxValueChanged_LightIntensity(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightIntensity
	void OnSpinBoxValueChanged_LightInnerConeAngle(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightInnerConeAngle
	void OnSpinBoxValueChanged_LightGreen(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightGreen
	void OnSpinBoxValueChanged_LightBlue(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_LightBlue
	void OnSpinBoxValueChanged_DeadZone(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_DeadZone
	void OnSpinBoxValueChanged_CameraRotateSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraRotateSpeed
	void OnSpinBoxValueChanged_CameraRotateInterpSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraRotateInterpSpeed
	void OnSpinBoxValueChanged_CameraMoveSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraMoveSpeed
	void OnSpinBoxValueChanged_CameraMoveInterpSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraMoveInterpSpeed
	void OnSpinBoxValueChanged_CameraFocusDistance(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraFocusDistance
	void OnSpinBoxValueChanged_CameraFocalLength(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraFocalLength
	void OnSpinBoxValueChanged_CameraDutchInterpSpeed(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraDutchInterpSpeed
	void OnSpinBoxValueChanged_CameraAperture(float Value); // Function KartDrift.BuildCaptureWidget.OnSpinBoxValueChanged_CameraAperture
	void OnComboBoxSelectionChanged_CameraTrackTarget(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.BuildCaptureWidget.OnComboBoxSelectionChanged_CameraTrackTarget
	void OnChangeCamera(float InValue); // Function KartDrift.BuildCaptureWidget.OnChangeCamera
	void OnButtonReleased_SpawnLight(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_SpawnLight
	void OnButtonReleased_SpawnCamera(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_SpawnCamera
	void OnButtonReleased_ShowLightListToggle(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_ShowLightListToggle
	void OnButtonReleased_ShowCameraListToggle(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_ShowCameraListToggle
	void OnButtonReleased_SaveLevelEnv(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_SaveLevelEnv
	void OnButtonReleased_NXBuildCaptureOn(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_NXBuildCaptureOn
	void OnButtonReleased_NXBuildCaptureOff(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_NXBuildCaptureOff
	void OnButtonReleased_LoadLevelEnv(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_LoadLevelEnv
	void OnButtonReleased_HideAllUiToggle(); // Function KartDrift.BuildCaptureWidget.OnButtonReleased_HideAllUiToggle
}; 
 
 


//Class KartDrift.DqDediGetMultiplayRequest Size 72
// Inherited 56 bytes 
class UDqDediGetMultiplayRequest : public UPqPacket
{

 public: 
	struct FString UUID;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ButtonInterface Size 40
// Inherited 40 bytes 
class UButtonInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdListEntryWidget Size 616
// Inherited 608 bytes 
class UKdListEntryWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemFeedNonTargetActor Size 544
// Inherited 544 bytes 
class AItemFeedNonTargetActor : public AActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrackLine Size 768
// Inherited 544 bytes 
class ALicenseTrackLine : public AActor
{

 public: 
	struct USplineComponent* SplineComponent;  // Offset: 544 Size: 8
	char pad_552_1 : 7;  // Offset: 552 Size: 1
	bool bLicenseTrackGuide : 1;  // Offset: 552 Size: 1
	char pad_553_1 : 7;  // Offset: 553 Size: 1
	bool bClosedLoop : 1;  // Offset: 553 Size: 1
	char pad_554_1 : 7;  // Offset: 554 Size: 1
	bool bShowDebug : 1;  // Offset: 554 Size: 1
	char pad_555[5];  // Offset: 555 Size: 5
	struct FString StartCheckPointName;  // Offset: 560 Size: 16
	struct FString CopyActorName;  // Offset: 576 Size: 16
	float ArrowInterval;  // Offset: 592 Size: 4
	float TrackLineWidthScale;  // Offset: 596 Size: 4
	struct TSoftObjectPtr<UStaticMesh> SplineMesh;  // Offset: 600 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> SplineMeshMaterial;  // Offset: 640 Size: 40
	struct TSoftObjectPtr<UStaticMesh> MergedSplineMesh;  // Offset: 680 Size: 40
	struct TArray<struct USplineMeshComponent*> SplineMeshComponentArray;  // Offset: 720 Size: 16
	char pad_736[16];  // Offset: 736 Size: 16
	struct UMaterialInstanceDynamic* MergedSplineMeshMaterialDynamic;  // Offset: 752 Size: 8
	char pad_760[8];  // Offset: 760 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ButtonTemplate Size 1000
// Inherited 608 bytes 
class UButtonTemplate : public UUserWidget
{

 public: 
	int32_t Btn_Index;  // Offset: 608 Size: 4
	char pad_612_1 : 7;  // Offset: 612 Size: 1
	bool bCheckBox : 1;  // Offset: 612 Size: 1
	char pad_613[163];  // Offset: 613 Size: 163
	enum class EButtonClickMethod ClickMethod;  // Offset: 776 Size: 1
	enum class EButtonTouchMethod TouchMethod;  // Offset: 777 Size: 1
	char pad_778[30];  // Offset: 778 Size: 30
	struct UFMODEvent* ClickSound;  // Offset: 808 Size: 8
	struct UFMODEvent* FocusSound;  // Offset: 816 Size: 8
	float ClickDelay;  // Offset: 824 Size: 4
	char pad_828[4];  // Offset: 828 Size: 4
	struct TArray<struct FAnimationPresetDef> OnEnabledAnimation;  // Offset: 832 Size: 16
	struct TArray<struct FAnimationPresetDef> OnDisabledAnimation;  // Offset: 848 Size: 16
	struct TArray<struct FAnimationPresetDef> OnFocusAnimation;  // Offset: 864 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnfocusAnimation;  // Offset: 880 Size: 16
	struct TArray<struct FAnimationPresetDef> OnCheckedAnimation;  // Offset: 896 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUncheckedAnimation;  // Offset: 912 Size: 16
	struct TArray<struct FAnimationPresetDef> OnHoveredAnimation;  // Offset: 928 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnHoveredAnimation;  // Offset: 944 Size: 16
	struct TArray<struct FAnimationPresetDef> OnPressedAnimation;  // Offset: 960 Size: 16
	struct TArray<struct FAnimationPresetDef> OnUnPressedAnimation;  // Offset: 976 Size: 16
	char pad_992[1];  // Offset: 992 Size: 1
	char pad_993_1 : 7;  // Offset: 993 Size: 1
	bool bMoveFocusOnMouseClick : 1;  // Offset: 993 Size: 1
	char pad_994[6];  // Offset: 994 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GrandPrixSelectLogicComponent Size 240
// Inherited 224 bytes 
class UGrandPrixSelectLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[16];  // Offset: 224 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_AchievementPageWidget Size 816
// Inherited 792 bytes 
class UC_AchievementPageWidget : public UAchievementPageWidget
{

 public: 
	char pad_792[24];  // Offset: 792 Size: 24



 // Functions 
 public:
	void OnClickedSortButton(int32_t InIndex); // Function KartDrift.C_AchievementPageWidget.OnClickedSortButton
	void OnClickedPrevTabButton(int32_t nIndex); // Function KartDrift.C_AchievementPageWidget.OnClickedPrevTabButton
	void OnClickedPrevPageButton(int32_t nIndex); // Function KartDrift.C_AchievementPageWidget.OnClickedPrevPageButton
	void OnClickedNextTabButton(int32_t nIndex); // Function KartDrift.C_AchievementPageWidget.OnClickedNextTabButton
	void OnClickedNextPageButton(int32_t nIndex); // Function KartDrift.C_AchievementPageWidget.OnClickedNextPageButton
}; 
 
 


//Class KartDrift.LqRegisterStickerStock Size 96
// Inherited 56 bytes 
class ULqRegisterStickerStock : public UPqPacket
{

 public: 
	char Slot;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7
	struct FString Name;  // Offset: 64 Size: 16
	struct FString Tag;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_ChattingPageWidget Size 760
// Inherited 760 bytes 
class UC_ChattingPageWidget : public UChattingPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseShadowAIData Size 752
// Inherited 64 bytes 
class ULicenseShadowAIData : public ULicenseContents
{

 public: 
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool bRecord : 1;  // Offset: 64 Size: 1
	char pad_65_1 : 7;  // Offset: 65 Size: 1
	bool bRecorded : 1;  // Offset: 65 Size: 1
	char pad_66[2];  // Offset: 66 Size: 2
	float ShadowLapTime;  // Offset: 68 Size: 4
	struct FText shadowName;  // Offset: 72 Size: 24
	struct FKartDesc ShadowKartDesc;  // Offset: 96 Size: 184
	struct FCharacterDesc ShadowCharacterDesc;  // Offset: 280 Size: 96
	struct FPawnRecordData RecordedData;  // Offset: 376 Size: 368
	struct AKdPawn* ShadowPawn;  // Offset: 744 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CommonPopupReward Size 864
// Inherited 816 bytes 
class UCommonPopupReward : public UDialogTemplate
{

 public: 
	char pad_816[48];  // Offset: 816 Size: 48



 // Functions 
 public:
	void DoClose(int32_t InIndex); // Function KartDrift.CommonPopupReward.DoClose
}; 
 
 


//Class KartDrift.CreateScenarioPageWidget Size 120
// Inherited 72 bytes 
class UCreateScenarioPageWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ScenarioPageWidgetClass;  // Offset: 72 Size: 40
	struct UScenarioPageWidget* Widget;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_KartChangeDialog Size 880
// Inherited 880 bytes 
class UC_KartChangeDialog : public UKartChangeDialog
{

 public: 



 // Functions 
 public:
	void OnClickedChatButton(int32_t InIndex); // Function KartDrift.C_KartChangeDialog.OnClickedChatButton
}; 
 
 


//Class KartDrift.C_CommunityPageWidget Size 872
// Inherited 816 bytes 
class UC_CommunityPageWidget : public UCommunityPageWidget
{

 public: 
	struct UCommunityFriendObject* FriendForWhomDialogOpened;  // Offset: 816 Size: 8
	struct UPageListTemplate* PartyInvite_CurrentActivePageList;  // Offset: 824 Size: 8
	char pad_832[24];  // Offset: 832 Size: 24
	struct UDialogTemplate* CommunityFindFriendPopWidget;  // Offset: 856 Size: 8
	char pad_864[8];  // Offset: 864 Size: 8



 // Functions 
 public:
	void PartyMenu_OnCloseButtonClicked(int32_t Index); // Function KartDrift.C_CommunityPageWidget.PartyMenu_OnCloseButtonClicked
	void PartyInvite_OnFocusedInvitePartyButton(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.PartyInvite_OnFocusedInvitePartyButton
	void PartyInvite_OnCloseButtonClicked(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.PartyInvite_OnCloseButtonClicked
	void PartyInvite_OnClickedInvitePartyButton(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.PartyInvite_OnClickedInvitePartyButton
	void PartyInvite_ChangeTab(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.PartyInvite_ChangeTab
	void OnClickedPreTab(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.OnClickedPreTab
	void OnClickedNextTab(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.OnClickedNextTab
	void MainDialog_OnCloseButtonClicked(int32_t Index); // Function KartDrift.C_CommunityPageWidget.MainDialog_OnCloseButtonClicked
	void InviteUserMenu_OnCloseButtonClicked(int32_t Index); // Function KartDrift.C_CommunityPageWidget.InviteUserMenu_OnCloseButtonClicked
	void InviteMenu_Request_OnClickedRejectBtn(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Request_OnClickedRejectBtn
	void InviteMenu_Request_OnClickedAddBtn(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Request_OnClickedAddBtn
	void InviteMenu_Recommend_OnClickedAddBtn(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Recommend_OnClickedAddBtn
	void InviteMenu_OnCloseButtonClicked(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_OnCloseButtonClicked
	void InviteMenu_Find_ShowFindPopup(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Find_ShowFindPopup
	void InviteMenu_Find_OnFindFriend(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Find_OnFindFriend
	void InviteMenu_Find_EditBoxTextChanged(struct FText& Text); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Find_EditBoxTextChanged
	void InviteMenu_Find_CloseFindPopup(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Find_CloseFindPopup
	void InviteMenu_Find_AddFriend(int32_t InIndex); // Function KartDrift.C_CommunityPageWidget.InviteMenu_Find_AddFriend
	void FriendMenu_CloseDialog(int32_t Index); // Function KartDrift.C_CommunityPageWidget.FriendMenu_CloseDialog
}; 
 
 


//Class KartDrift.C_CouponPageWidget Size 776
// Inherited 776 bytes 
class UC_CouponPageWidget : public UCouponPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_CustomGamePageWidget Size 952
// Inherited 944 bytes 
class UC_CustomGamePageWidget : public UCustomGamePageWidget
{

 public: 
	struct UContextMenuTemplate* ContextMenu;  // Offset: 944 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PatcherEvent_Warning Size 144
// Inherited 144 bytes 
class UPatcherEvent_Warning : public UPatcherEvent_SimpleDialog
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableAutoDrive Size 72
// Inherited 72 bytes 
class UDisableAutoDrive : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EventChallengePageWidget Size 744
// Inherited 744 bytes 
class UEventChallengePageWidget : public UKdPageWidget
{

 public: 



 // Functions 
 public:
	void OnUpdate_ShortCutButtonVisibility(bool bVisibility); // Function KartDrift.EventChallengePageWidget.OnUpdate_ShortCutButtonVisibility
	void OnUpdate_QuestUI(bool bInit); // Function KartDrift.EventChallengePageWidget.OnUpdate_QuestUI
	void OnRewardListButtonClicked(int32_t ButtonIndex); // Function KartDrift.EventChallengePageWidget.OnRewardListButtonClicked
	void OnClickedShortCut(int32_t nIndex); // Function KartDrift.EventChallengePageWidget.OnClickedShortCut
	void ListAllEventByCheat(struct FString seasonId); // Function KartDrift.EventChallengePageWidget.ListAllEventByCheat
	void EventChallenge_OnClickedBackButton(int32_t InIndex); // Function KartDrift.EventChallengePageWidget.EventChallenge_OnClickedBackButton
}; 
 
 


//Class KartDrift.KdService Size 528
// Inherited 48 bytes 
class UKdService : public UGameInstanceSubsystem
{

 public: 
	struct FString DevRiderName;  // Offset: 48 Size: 16
	struct UKdServerList* KdServerList;  // Offset: 64 Size: 8
	char pad_72[8];  // Offset: 72 Size: 8
	struct UKdAccount* MyKOAccount;  // Offset: 80 Size: 8
	char pad_88[72];  // Offset: 88 Size: 72
	struct UPcHostGame* LastHostGameRequest;  // Offset: 160 Size: 8
	char pad_168[96];  // Offset: 168 Size: 96
	struct FString LastMainMenuState;  // Offset: 264 Size: 16
	char pad_280[80];  // Offset: 280 Size: 80
	struct UPlatformSessionUpdater* PlatformSessionUpdater;  // Offset: 360 Size: 8
	char pad_368[8];  // Offset: 368 Size: 8
	struct ULiveryServerRequester* LiveryServerRequester;  // Offset: 376 Size: 8
	char pad_384[24];  // Offset: 384 Size: 24
	struct UAccountFuncLibImpl* AccountFuncLibImpl;  // Offset: 408 Size: 8
	struct UHttpRequester* HttpRequester;  // Offset: 416 Size: 8
	char pad_424[8];  // Offset: 424 Size: 8
	struct UPatcherInterface* Patcher;  // Offset: 432 Size: 8
	struct TSoftClassPtr<UObject> PatcherClass;  // Offset: 440 Size: 40
	char pad_480[48];  // Offset: 480 Size: 48



 // Functions 
 public:
	void SetDevRiderName(struct FString riderName); // Function KartDrift.KdService.SetDevRiderName
	struct FString GetMyIpAddress(); // Function KartDrift.KdService.GetMyIpAddress
	struct FString GetDevRiderName(); // Function KartDrift.KdService.GetDevRiderName
	struct TArray<struct FName> GetAllTrackAliases(); // Function KartDrift.KdService.GetAllTrackAliases
	struct UKdAccount* GetAccountForPlayer(int32_t LocalPlayerId); // Function KartDrift.KdService.GetAccountForPlayer
	struct UKdAccount* GetAccount(); // Function KartDrift.KdService.GetAccount
	struct UKdAccount* CreateMainAccount(); // Function KartDrift.KdService.CreateMainAccount
	struct UKdAccount* CreateDebugAccount(); // Function KartDrift.KdService.CreateDebugAccount
}; 
 
 


//Class KartDrift.C_EventChallengePageWidget Size 744
// Inherited 744 bytes 
class UC_EventChallengePageWidget : public UEventChallengePageWidget
{

 public: 



 // Functions 
 public:
	void OnFocusedEventChallengeSlot(int32_t SlotIndex); // Function KartDrift.C_EventChallengePageWidget.OnFocusedEventChallengeSlot
}; 
 
 


//Class KartDrift.FinishAnimation_TimeAttack Size 72
// Inherited 72 bytes 
class UFinishAnimation_TimeAttack : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GrandPrixPageWidget Size 896
// Inherited 744 bytes 
class UGrandPrixPageWidget : public UKdPageWidget
{

 public: 
	struct TWeakObjectPtr<UDialogTemplate> WarningDialog;  // Offset: 744 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> RewardDialog;  // Offset: 752 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> DetailRecordDialog;  // Offset: 760 Size: 8
	struct TWeakObjectPtr<UItemListPopup> RewardItemListDialog;  // Offset: 768 Size: 8
	struct TSoftObjectPtr<UMediaPlaylist> BackgroundMovie;  // Offset: 776 Size: 40
	struct TSoftObjectPtr<UTexture2D> BackgroundImage;  // Offset: 816 Size: 40
	char pad_856[40];  // Offset: 856 Size: 40



 // Functions 
 public:
	void OnUpdateGrandPrixRankBoard(); // Function KartDrift.GrandPrixPageWidget.OnUpdateGrandPrixRankBoard
	void OnUpdateGrandPrixDetailRecord(); // Function KartDrift.GrandPrixPageWidget.OnUpdateGrandPrixDetailRecord
	void OnCloseRewardItemListDialog(); // Function KartDrift.GrandPrixPageWidget.OnCloseRewardItemListDialog
	void OnClickedWarningDialogBackButton(int32_t InIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedWarningDialogBackButton
	void OnClickedShowRewardButton(int32_t nIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedShowRewardButton
	void OnClickedShowDetailRecordButton(int32_t nIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedShowDetailRecordButton
	void OnClickedRewardDialogShowTierDetailButton(int32_t InIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedRewardDialogShowTierDetailButton
	void OnClickedRewardDialogShowRankingDetailButton(int32_t InIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedRewardDialogShowRankingDetailButton
	void OnClickedRewardDialogBackButton(int32_t InIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedRewardDialogBackButton
	void OnClickedPresetButton(int32_t nIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedPresetButton
	void OnClickedGrandPrixStartButton(int32_t nIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedGrandPrixStartButton
	void OnClickedDetailRecordDialogBackButton(int32_t InIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedDetailRecordDialogBackButton
	void OnClickedBackButton(int32_t nIndex); // Function KartDrift.GrandPrixPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.PqSetModeSelectDataList Size 72
// Inherited 56 bytes 
class UPqSetModeSelectDataList : public UPqPacket
{

 public: 
	struct FKtModeSelectDataList dataList;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InfoPageWidget Size 784
// Inherited 744 bytes 
class UInfoPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[8];  // Offset: 744 Size: 8
	UUserWidget* DailyListItemClass;  // Offset: 752 Size: 8
	UUserWidget* PremiumListItemClass;  // Offset: 760 Size: 8
	UUserWidget* EventListItemClass;  // Offset: 768 Size: 8
	UUserWidget* PremiumAlertWidgetClass;  // Offset: 776 Size: 8



 // Functions 
 public:
	void UpdateEmblemOn(); // Function KartDrift.InfoPageWidget.UpdateEmblemOn
	void OnUpdateTagFeed(struct TArray<struct FTagData> Tags, struct TArray<struct FKtRecentActivity> Feeds, struct FKtRaceCount RaceCount); // Function KartDrift.InfoPageWidget.OnUpdateTagFeed
	void OnUpdateProfile(struct FInfoPageData_Profile Profile); // Function KartDrift.InfoPageWidget.OnUpdateProfile
	void OnClickedProfileEdit(int32_t InIndex); // Function KartDrift.InfoPageWidget.OnClickedProfileEdit
	void OnClickedChatButton(int32_t InIndex); // Function KartDrift.InfoPageWidget.OnClickedChatButton
	void OnClickedbtnGrandPrixRecord(int32_t InIndex); // Function KartDrift.InfoPageWidget.OnClickedbtnGrandPrixRecord
	void OnClickedbtnAchievement(int32_t InIndex); // Function KartDrift.InfoPageWidget.OnClickedbtnAchievement
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.InfoPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.KartChangeDialog Size 880
// Inherited 816 bytes 
class UKartChangeDialog : public UDialogTemplate
{

 public: 
	char pad_816[48];  // Offset: 816 Size: 48
	struct TWeakObjectPtr<UItemDefEntryObject> CurrentFocusedItem;  // Offset: 864 Size: 8
	char pad_872[8];  // Offset: 872 Size: 8



 // Functions 
 public:
	void OnClickedStudioButton(int32_t InIndex); // Function KartDrift.KartChangeDialog.OnClickedStudioButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.KartChangeDialog.OnClickedBackButton
}; 
 
 


//Class KartDrift.C_KartUpgradePageWidget Size 936
// Inherited 928 bytes 
class UC_KartUpgradePageWidget : public UKartUpgradePageWidget
{

 public: 
	char pad_928[8];  // Offset: 928 Size: 8



 // Functions 
 public:
	void OnFocusedGearSlot(int32_t InIndex); // Function KartDrift.C_KartUpgradePageWidget.OnFocusedGearSlot
	void OnClickedFocusdGearPlusBtn(int32_t InIndex); // Function KartDrift.C_KartUpgradePageWidget.OnClickedFocusdGearPlusBtn
	void OnClickedFocusdGearMinusBtn(int32_t InIndex); // Function KartDrift.C_KartUpgradePageWidget.OnClickedFocusdGearMinusBtn
}; 
 
 


//Class KartDrift.ItemCubesComponent Size 248
// Inherited 176 bytes 
class UItemCubesComponent : public UActorComponent
{

 public: 
	char pad_176_1 : 7;  // Offset: 176 Size: 1
	bool bEnableItemCubes : 1;  // Offset: 176 Size: 1
	char pad_177[7];  // Offset: 177 Size: 7
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 184 Size: 16
	char pad_200[8];  // Offset: 200 Size: 8
	struct TArray<struct AGoItem_Cube*> AnimCubes;  // Offset: 208 Size: 16
	char pad_224[16];  // Offset: 224 Size: 16
	struct UCurveFloat* AnimCurve;  // Offset: 240 Size: 8



 // Functions 
 public:
	void OnRep_EnableItemCubes(); // Function KartDrift.ItemCubesComponent.OnRep_EnableItemCubes
	void MulticastRespawn(struct AGoItem_Cube* Cube); // Function KartDrift.ItemCubesComponent.MulticastRespawn
	void MulticastEaten(struct AGoItem_Cube* Cube, struct AActor* Target); // Function KartDrift.ItemCubesComponent.MulticastEaten
}; 
 
 


//Class KartDrift.C_LiveryStickerPageWidget Size 856
// Inherited 856 bytes 
class UC_LiveryStickerPageWidget : public ULiveryStickerPageWidget
{

 public: 



 // Functions 
 public:
	struct UWidget* OnNavigationStickerItemList(enum class EUINavigation UINavigation); // Function KartDrift.C_LiveryStickerPageWidget.OnNavigationStickerItemList
	void OnClicked_UseFixedUnit(int32_t InIndex); // Function KartDrift.C_LiveryStickerPageWidget.OnClicked_UseFixedUnit
	void OnClicked_StickerListPrev(int32_t InIndex); // Function KartDrift.C_LiveryStickerPageWidget.OnClicked_StickerListPrev
	void OnClicked_StickerListNext(int32_t InIndex); // Function KartDrift.C_LiveryStickerPageWidget.OnClicked_StickerListNext
}; 
 
 


//Class KartDrift.LiveryEditPageWidget Size 888
// Inherited 744 bytes 
class ULiveryEditPageWidget : public UKdPageWidget
{

 public: 
	struct TArray<struct TWeakObjectPtr<AOutGamePawn>> IconPawns;  // Offset: 744 Size: 16
	char pad_760_1 : 7;  // Offset: 760 Size: 1
	bool bFirstCreateLivery : 1;  // Offset: 760 Size: 1
	char pad_761[7];  // Offset: 761 Size: 7
	struct TArray<struct TWeakObjectPtr<UUserWidget>> GamutTabSelColorWidgets;  // Offset: 768 Size: 16
	struct TWeakObjectPtr<UUserWidget> SelectColorWidget;  // Offset: 784 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> WarningPopup;  // Offset: 792 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> SavePopup;  // Offset: 800 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> MenuPopup;  // Offset: 808 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> ReportPopup;  // Offset: 816 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> EditValuePopup;  // Offset: 824 Size: 8
	struct TArray<struct TWeakObjectPtr<UEditableText>> EditValueWidgets;  // Offset: 832 Size: 16
	enum class ELiveryPageType SaveExitPageType;  // Offset: 848 Size: 1
	char pad_849[23];  // Offset: 849 Size: 23
	enum class ELiveryTextEditingState TextEditingState;  // Offset: 872 Size: 1
	char pad_873[3];  // Offset: 873 Size: 3
	struct FVector2D MaterialContextOffset;  // Offset: 876 Size: 8
	char pad_884[4];  // Offset: 884 Size: 4



 // Functions 
 public:
	void RotateLiveryLayer(float InDelta); // Function KartDrift.LiveryEditPageWidget.RotateLiveryLayer
	void RemoveMenuPopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.RemoveMenuPopup
	void RemoveEditValuePopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.RemoveEditValuePopup
	void OnWrappinMenu(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnWrappinMenu
	void OnWrappingItemClickButton(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnWrappingItemClickButton
	void OnSizeWidthTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnSizeWidthTextChanged
	void OnSizeWidthCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryEditPageWidget.OnSizeWidthCommitted
	void OnSizeHeightTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnSizeHeightTextChanged
	void OnSizeHeightCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryEditPageWidget.OnSizeHeightCommitted
	void OnShowMaterialContextMenu(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnShowMaterialContextMenu
	void OnSaveTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnSaveTextChanged
	void OnRotateTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnRotateTextChanged
	void OnRotateCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryEditPageWidget.OnRotateCommitted
	void OnPosYTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnPosYTextChanged
	void OnPosYCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryEditPageWidget.OnPosYCommitted
	void OnPosXTextChanged(struct FText& InText); // Function KartDrift.LiveryEditPageWidget.OnPosXTextChanged
	void OnPosXCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryEditPageWidget.OnPosXCommitted
	void OnPaintColorRowItemSelect(struct UObject* ItemObj); // Function KartDrift.LiveryEditPageWidget.OnPaintColorRowItemSelect
	void OnPaintColorRowItemClickedButton(int32_t InIndex, struct UObject* ItemObj); // Function KartDrift.LiveryEditPageWidget.OnPaintColorRowItemClickedButton
	void OnEditValueTextMovePre(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnEditValueTextMovePre
	void OnEditValueTextMoveNext(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnEditValueTextMoveNext
	void OnClickUnGroupWrappingItem(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickUnGroupWrappingItem
	void OnClickSave(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickSave
	void OnClickPaintColorReset(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickPaintColorReset
	void OnClickLiveryDelete(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickLiveryDelete
	void OnClickFocusChangeReportPopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickFocusChangeReportPopup
	void OnClickExitSave(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickExitSave
	void OnClickEditExit(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickEditExit
	void OnClicked_WrappingToPaint(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_WrappingToPaint
	void OnClicked_UnGroup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_UnGroup
	void OnClicked_ToolTip(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ToolTip
	void OnClicked_StickerSave(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_StickerSave
	void OnClicked_StickerDeleteAll(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_StickerDeleteAll
	void OnClicked_ShowKartDialog(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ShowKartDialog
	void OnClicked_ShowEditValuePopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ShowEditValuePopup
	void OnClicked_ShapeTabPrev(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ShapeTabPrev
	void OnClicked_ShapeTabNext(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ShapeTabNext
	void OnClicked_ShapeDelete(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ShapeDelete
	void OnClicked_PrevSlot(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PrevSlot
	void OnClicked_PaintToWrapping(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PaintToWrapping
	void OnClicked_PaintGamutPrev(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PaintGamutPrev
	void OnClicked_PaintGamutNext(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PaintGamutNext
	void OnClicked_PaintColorSave(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PaintColorSave
	void OnClicked_PaintColorReset(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_PaintColorReset
	void OnClicked_NextSlot(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_NextSlot
	void OnClicked_Menu(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Menu
	void OnClicked_Mat(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Mat
	void OnClicked_MakeSticker(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_MakeSticker
	void OnClicked_LiveryMode(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_LiveryMode
	void OnClicked_Grouping(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Grouping
	void OnClicked_Group(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Group
	void OnClicked_EditMenu(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_EditMenu
	void OnClicked_Edit(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Edit
	void OnClicked_DetailView(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_DetailView
	void OnClicked_DetailEdit(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_DetailEdit
	void OnClicked_Delete(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Delete
	void OnClicked_Copy(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Copy
	void OnClicked_CompleteEditToColor(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_CompleteEditToColor
	void OnClicked_CompleteEdit(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_CompleteEdit
	void OnClicked_ColorEdit(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_ColorEdit
	void OnClicked_Back(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_Back
	void OnClicked_AddSticker(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClicked_AddSticker
	void OnClickDeleteWrappingItem(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickDeleteWrappingItem
	void OnClickDeleteMyStickerFromShape(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickDeleteMyStickerFromShape
	void OnClickDeleteAllWrappingItem(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickDeleteAllWrappingItem
	void OnClickCloseWarningPopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickCloseWarningPopup
	void OnClickCloseSave(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickCloseSave
	void OnClickCloseReportPopup(int32_t InIndex); // Function KartDrift.LiveryEditPageWidget.OnClickCloseReportPopup
	void MoveLiveryLayerY(float InDelta); // Function KartDrift.LiveryEditPageWidget.MoveLiveryLayerY
	void MoveLiveryLayerX(float InDelta); // Function KartDrift.LiveryEditPageWidget.MoveLiveryLayerX
	void LiveryEditShift_Released(); // Function KartDrift.LiveryEditPageWidget.LiveryEditShift_Released
	void LiveryEditShift_Pressd(); // Function KartDrift.LiveryEditPageWidget.LiveryEditShift_Pressd
	void LiveryEditCtrl_Released(); // Function KartDrift.LiveryEditPageWidget.LiveryEditCtrl_Released
	void LiveryEditCtrl_Pressd(); // Function KartDrift.LiveryEditPageWidget.LiveryEditCtrl_Pressd
	void ChangeLiveryLayerScaleY(float InDelta); // Function KartDrift.LiveryEditPageWidget.ChangeLiveryLayerScaleY
	void ChangeLiveryLayerScaleX(float InDelta); // Function KartDrift.LiveryEditPageWidget.ChangeLiveryLayerScaleX
	void ChangeLiveryLayerScale(float InDelta); // Function KartDrift.LiveryEditPageWidget.ChangeLiveryLayerScale
}; 
 
 


//Class KartDrift.C_LiveryEditPageWidget Size 888
// Inherited 888 bytes 
class UC_LiveryEditPageWidget : public ULiveryEditPageWidget
{

 public: 



 // Functions 
 public:
	struct UWidget* OnNavigationStickerItemList(enum class EUINavigation UINavigation); // Function KartDrift.C_LiveryEditPageWidget.OnNavigationStickerItemList
	void OnClicked_UseFixedUnit(int32_t InIndex); // Function KartDrift.C_LiveryEditPageWidget.OnClicked_UseFixedUnit
	void OnClicked_StickerListPrev(int32_t InIndex); // Function KartDrift.C_LiveryEditPageWidget.OnClicked_StickerListPrev
	void OnClicked_StickerListNext(int32_t InIndex); // Function KartDrift.C_LiveryEditPageWidget.OnClicked_StickerListNext
}; 
 
 


//Class KartDrift.TouchBackPlate Size 608
// Inherited 608 bytes 
class UTouchBackPlate : public UUserWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftCheckComponent Size 304
// Inherited 176 bytes 
class ULicenseDriftCheckComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct ULicenseDriftCheckData* Data;  // Offset: 184 Size: 8
	struct UParticleSystem* ParticleSystem;  // Offset: 192 Size: 8
	struct TArray<struct AActor*> DriftGateList;  // Offset: 200 Size: 16
	int32_t CurrentIndex;  // Offset: 216 Size: 4
	char pad_220[4];  // Offset: 220 Size: 4
	struct APawn* Pawn;  // Offset: 224 Size: 8
	struct FVector LastPosition;  // Offset: 232 Size: 12
	char pad_244[20];  // Offset: 244 Size: 20
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 264 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryStickerPageWidget Size 856
// Inherited 744 bytes 
class ULiveryStickerPageWidget : public UKdPageWidget
{

 public: 
	int32_t EditStickerId;  // Offset: 744 Size: 4
	char pad_748[4];  // Offset: 748 Size: 4
	struct TArray<struct TWeakObjectPtr<UUserWidget>> GamutTabSelColorWidgets;  // Offset: 752 Size: 16
	struct TWeakObjectPtr<UUserWidget> SelectColorWidget;  // Offset: 768 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> WarningPopup;  // Offset: 776 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> SavePopup;  // Offset: 784 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> MenuPopup;  // Offset: 792 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> EditValuePopup;  // Offset: 800 Size: 8
	struct TArray<struct TWeakObjectPtr<UEditableText>> EditValueWidgets;  // Offset: 808 Size: 16
	enum class ELiveryPageType SaveExitPageType;  // Offset: 824 Size: 1
	char pad_825[23];  // Offset: 825 Size: 23
	enum class ELiveryTextEditingState TextEditingState;  // Offset: 848 Size: 1
	char pad_849[7];  // Offset: 849 Size: 7



 // Functions 
 public:
	void RotateLiveryLayer(float InDelta); // Function KartDrift.LiveryStickerPageWidget.RotateLiveryLayer
	void RemoveMenuPopup(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.RemoveMenuPopup
	void RemoveEditValuePopup(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.RemoveEditValuePopup
	void OnUpdatedSticker(int32_t ID); // Function KartDrift.LiveryStickerPageWidget.OnUpdatedSticker
	void OnStickerItemClickButton(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnStickerItemClickButton
	void OnSizeWidthTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnSizeWidthTextChanged
	void OnSizeWidthCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryStickerPageWidget.OnSizeWidthCommitted
	void OnSizeHeightTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnSizeHeightTextChanged
	void OnSizeHeightCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryStickerPageWidget.OnSizeHeightCommitted
	void OnSaveTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnSaveTextChanged
	void OnRotateTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnRotateTextChanged
	void OnRotateCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryStickerPageWidget.OnRotateCommitted
	void OnPosYTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnPosYTextChanged
	void OnPosYCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryStickerPageWidget.OnPosYCommitted
	void OnPosXTextChanged(struct FText& InText); // Function KartDrift.LiveryStickerPageWidget.OnPosXTextChanged
	void OnPosXCommitted(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.LiveryStickerPageWidget.OnPosXCommitted
	void OnPaintColorRowItemSelect(struct UObject* ItemObj); // Function KartDrift.LiveryStickerPageWidget.OnPaintColorRowItemSelect
	void OnPaintColorRowItemClickedButton(int32_t InIndex, struct UObject* ItemObj); // Function KartDrift.LiveryStickerPageWidget.OnPaintColorRowItemClickedButton
	void OnEditValueTextMovePre(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnEditValueTextMovePre
	void OnEditValueTextMoveNext(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnEditValueTextMoveNext
	void OnClickUnGroupWrappingItem(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickUnGroupWrappingItem
	void OnClickSave(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickSave
	void OnClickExitSave(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickExitSave
	void OnClickEditExit(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickEditExit
	void OnClicked_UnGroup(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_UnGroup
	void OnClicked_ToolTip(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ToolTip
	void OnClicked_StickerSave(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_StickerSave
	void OnClicked_StickerDeleteAll(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_StickerDeleteAll
	void OnClicked_ShowEditValuePopup(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ShowEditValuePopup
	void OnClicked_ShapeTabPrev(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ShapeTabPrev
	void OnClicked_ShapeTabNext(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ShapeTabNext
	void OnClicked_ShapeDelete(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ShapeDelete
	void OnClicked_PrevSlot(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_PrevSlot
	void OnClicked_Preview(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Preview
	void OnClicked_NextSlot(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_NextSlot
	void OnClicked_MySticker(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_MySticker
	void OnClicked_Grouping(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Grouping
	void OnClicked_Group(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Group
	void OnClicked_EditMenu(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_EditMenu
	void OnClicked_Edit(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Edit
	void OnClicked_DetailEdit(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_DetailEdit
	void OnClicked_Delete(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Delete
	void OnClicked_Copy(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Copy
	void OnClicked_CompleteEditToColor(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_CompleteEditToColor
	void OnClicked_CompleteEdit(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_CompleteEdit
	void OnClicked_ColorEdit(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_ColorEdit
	void OnClicked_Back(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_Back
	void OnClicked_AddSticker(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClicked_AddSticker
	void OnClickDeleteWrappingItem(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickDeleteWrappingItem
	void OnClickDeleteMyStickerFromShape(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickDeleteMyStickerFromShape
	void OnClickDeleteAllWrappingItem(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickDeleteAllWrappingItem
	void OnClickCloseWarningPopup(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickCloseWarningPopup
	void OnClickCloseSave(int32_t InIndex); // Function KartDrift.LiveryStickerPageWidget.OnClickCloseSave
	void MoveLiveryStickerLayerMouseY(float InDelta); // Function KartDrift.LiveryStickerPageWidget.MoveLiveryStickerLayerMouseY
	void MoveLiveryStickerLayerMouseX(float InDelta); // Function KartDrift.LiveryStickerPageWidget.MoveLiveryStickerLayerMouseX
	void MoveLiveryLayerY(float InDelta); // Function KartDrift.LiveryStickerPageWidget.MoveLiveryLayerY
	void MoveLiveryLayerX(float InDelta); // Function KartDrift.LiveryStickerPageWidget.MoveLiveryLayerX
	void LiveryEditShift_Released(); // Function KartDrift.LiveryStickerPageWidget.LiveryEditShift_Released
	void LiveryEditShift_Pressd(); // Function KartDrift.LiveryStickerPageWidget.LiveryEditShift_Pressd
	void LiveryEditCtrl_Released(); // Function KartDrift.LiveryStickerPageWidget.LiveryEditCtrl_Released
	void LiveryEditCtrl_Pressd(); // Function KartDrift.LiveryStickerPageWidget.LiveryEditCtrl_Pressd
	void ChangeLiveryLayerScaleY(float InDelta); // Function KartDrift.LiveryStickerPageWidget.ChangeLiveryLayerScaleY
	void ChangeLiveryLayerScaleX(float InDelta); // Function KartDrift.LiveryStickerPageWidget.ChangeLiveryLayerScaleX
	void ChangeLiveryLayerScale(float InDelta); // Function KartDrift.LiveryStickerPageWidget.ChangeLiveryLayerScale
}; 
 
 


//Class KartDrift.C_LobbyPageWidget Size 1072
// Inherited 1072 bytes 
class UC_LobbyPageWidget : public ULobbyPageWidget
{

 public: 



 // Functions 
 public:
	void OnReleasedRotatePawnButton(int32_t InIndex); // Function KartDrift.C_LobbyPageWidget.OnReleasedRotatePawnButton
	void OnReleasedRotateCharacterButton(int32_t InIndex); // Function KartDrift.C_LobbyPageWidget.OnReleasedRotateCharacterButton
	void OnPressedRotatePawnButton(int32_t InIndex); // Function KartDrift.C_LobbyPageWidget.OnPressedRotatePawnButton
	void OnPressedRotateCharacterButton(int32_t InIndex); // Function KartDrift.C_LobbyPageWidget.OnPressedRotateCharacterButton
}; 
 
 


//Class KartDrift.C_LootBoxPageWidget Size 880
// Inherited 880 bytes 
class UC_LootBoxPageWidget : public ULootBoxPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MailPageWidget Size 768
// Inherited 744 bytes 
class UMailPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[16];  // Offset: 744 Size: 16
	struct TWeakObjectPtr<UDialogTemplate> MailPopup;  // Offset: 760 Size: 8



 // Functions 
 public:
	void ReceiveAllMail(int32_t InIndex); // Function KartDrift.MailPageWidget.ReceiveAllMail
	void OnWarningPopupDeleteComfirmed(); // Function KartDrift.MailPageWidget.OnWarningPopupDeleteComfirmed
	void OnUpdateLucci(int32_t lucci); // Function KartDrift.MailPageWidget.OnUpdateLucci
	void OnUpdateKcoin(int32_t Kcoin); // Function KartDrift.MailPageWidget.OnUpdateKcoin
	void OnUpdate_MailBoxWidgets(); // Function KartDrift.MailPageWidget.OnUpdate_MailBoxWidgets
	bool OnTryGetSelected_InboxMail(int32_t& OutMailIndex); // Function KartDrift.MailPageWidget.OnTryGetSelected_InboxMail
	void OnShowWarningPopupSimple(enum class EMailWarningPopupType Type); // Function KartDrift.MailPageWidget.OnShowWarningPopupSimple
	void OnShowWarningPopup(struct FText Title, struct FText DescText, struct FText DescText2, struct FText SubText, bool bIsCancelButton); // Function KartDrift.MailPageWidget.OnShowWarningPopup
	void OnShowReceiveFailPopup(enum class EMailItemReceiveFailType ReceiveFailType, struct TArray<struct FString>& InItemArray); // Function KartDrift.MailPageWidget.OnShowReceiveFailPopup
	void OnShowMessageMailPopup(struct FString MailDesc); // Function KartDrift.MailPageWidget.OnShowMessageMailPopup
	void OnShowMailRewardPopup(struct TArray<struct FString>& InItemArray); // Function KartDrift.MailPageWidget.OnShowMailRewardPopup
	void OnShowMailPopup(); // Function KartDrift.MailPageWidget.OnShowMailPopup
	void OnCloseReceviedFailPopup(int32_t Index); // Function KartDrift.MailPageWidget.OnCloseReceviedFailPopup
	void OnClosePopup(); // Function KartDrift.MailPageWidget.OnClosePopup
	void OnCloseMailPopup(); // Function KartDrift.MailPageWidget.OnCloseMailPopup
	void OnClickedSentMailBoxTab(int32_t InIndex); // Function KartDrift.MailPageWidget.OnClickedSentMailBoxTab
	void OnClickedReceiveButton(int32_t InIndex); // Function KartDrift.MailPageWidget.OnClickedReceiveButton
	void OnClickedItemListButton(int32_t InIndex); // Function KartDrift.MailPageWidget.OnClickedItemListButton
	void OnClickedInBoxTab(int32_t InIndex); // Function KartDrift.MailPageWidget.OnClickedInBoxTab
	void OnClickedDeleteKeyIcon(int32_t InIndex); // Function KartDrift.MailPageWidget.OnClickedDeleteKeyIcon
	void Mail_OnClickedBackButton(int32_t InIndex); // Function KartDrift.MailPageWidget.Mail_OnClickedBackButton
}; 
 
 


//Class KartDrift.PqLeaveCustomGame Size 56
// Inherited 56 bytes 
class UPqLeaveCustomGame : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SimpleAODecalComponent Size 704
// Inherited 688 bytes 
class USimpleAODecalComponent : public UDecalComponent
{

 public: 
	struct UMaterialInstanceDynamic* MaterialDynamic;  // Offset: 680 Size: 8
	struct AOutGamePawn* OwnerPawn;  // Offset: 688 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayTimeControlComponent Size 272
// Inherited 176 bytes 
class UReplayTimeControlComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_ModeSelectPageWidget Size 848
// Inherited 848 bytes 
class UC_ModeSelectPageWidget : public UModeSelectPageWidget
{

 public: 



 // Functions 
 public:
	void OnClickedPreviousModeButton(int32_t InIndex); // Function KartDrift.C_ModeSelectPageWidget.OnClickedPreviousModeButton
	void OnClickedNextModeButton(int32_t InIndex); // Function KartDrift.C_ModeSelectPageWidget.OnClickedNextModeButton
	void ItemGuideDetailPopup_OnItemFocused(int32_t InIndex); // Function KartDrift.C_ModeSelectPageWidget.ItemGuideDetailPopup_OnItemFocused
}; 
 
 


//Class KartDrift.C_OptionPageWidget Size 1088
// Inherited 992 bytes 
class UC_OptionPageWidget : public UOptionPageWidget
{

 public: 
	char pad_992[24];  // Offset: 992 Size: 24
	struct UOptionBarWidget* KeyPresetSelectBar;  // Offset: 1016 Size: 8
	struct UContextMenuTemplate* OptionDropDown;  // Offset: 1024 Size: 8
	char pad_1032[8];  // Offset: 1032 Size: 8
	struct UUserWidget* MonitorIndexOptionButton;  // Offset: 1040 Size: 8
	struct UUserWidget* DisplayModeOptionButton;  // Offset: 1048 Size: 8
	struct UUserWidget* ResolutionOptionButton;  // Offset: 1056 Size: 8
	struct UUserWidget* RefreshRateOptionButton;  // Offset: 1064 Size: 8
	char pad_1072[16];  // Offset: 1072 Size: 16



 // Functions 
 public:
	void OpenUnlinkSucceedPopup(); // Function KartDrift.C_OptionPageWidget.OpenUnlinkSucceedPopup
	void OnUnFocusKeyOption(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.C_OptionPageWidget.OnUnFocusKeyOption
	void OnSelectOptionKeyButton(int32_t InIndex, struct UUserWidget* Widget); // Function KartDrift.C_OptionPageWidget.OnSelectOptionKeyButton
	void OnMainScrollBoxScrolled(float CurrentOffset); // Function KartDrift.C_OptionPageWidget.OnMainScrollBoxScrolled
	void OnFocusedNpaCodeBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnFocusedNpaCodeBtn
	void OnFocusedCouponBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnFocusedCouponBtn
	void OnFocusedAccountUnlinkBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnFocusedAccountUnlinkBtn
	void OnFocusedAccountResetBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnFocusedAccountResetBtn
	void OnClickedNpaCodeBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnClickedNpaCodeBtn
	void OnClickedCouponBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnClickedCouponBtn
	void OnClickedAccountUnlinkBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnClickedAccountUnlinkBtn
	void OnClickedAccountResetBtn(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.OnClickedAccountResetBtn
	void CustomerQR_OpenDialog(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.CustomerQR_OpenDialog
	void CustomerQR_CloseDialog(int32_t InIndex); // Function KartDrift.C_OptionPageWidget.CustomerQR_CloseDialog
}; 
 
 


//Class KartDrift.TimeAttackPawn Size 952
// Inherited 936 bytes 
class ATimeAttackPawn : public AKdPawn
{

 public: 
	char pad_936[16];  // Offset: 936 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ComboBoxStringExpand Size 3600
// Inherited 3584 bytes 
class UComboBoxStringExpand : public UComboBoxString
{

 public: 
	char pad_3584[16];  // Offset: 3584 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DepthDebugCameraActor Size 2160
// Inherited 2080 bytes 
class ADepthDebugCameraActor : public ACameraActor
{

 public: 
	float MarkerScale;  // Offset: 2080 Size: 4
	char pad_2084_1 : 7;  // Offset: 2084 Size: 1
	bool bMarkerVisibility : 1;  // Offset: 2084 Size: 1
	char pad_2085[3];  // Offset: 2085 Size: 3
	float CloseDepth;  // Offset: 2088 Size: 4
	float FarDepth;  // Offset: 2092 Size: 4
	char pad_2096_1 : 7;  // Offset: 2096 Size: 1
	bool bVisualizeFront : 1;  // Offset: 2096 Size: 1
	char pad_2097_1 : 7;  // Offset: 2097 Size: 1
	bool bVisualizeMid : 1;  // Offset: 2097 Size: 1
	char pad_2098_1 : 7;  // Offset: 2098 Size: 1
	bool bVisualizeBack : 1;  // Offset: 2098 Size: 1
	char pad_2099_1 : 7;  // Offset: 2099 Size: 1
	bool bEnableVisualizer : 1;  // Offset: 2099 Size: 1
	struct FLinearColor FrontColor;  // Offset: 2100 Size: 16
	struct FLinearColor MidColor;  // Offset: 2116 Size: 16
	struct FLinearColor BackColor;  // Offset: 2132 Size: 16
	char pad_2148_1 : 7;  // Offset: 2148 Size: 1
	bool bGrayscale : 1;  // Offset: 2148 Size: 1
	char pad_2149_1 : 7;  // Offset: 2149 Size: 1
	bool bGrayscaleReverseOrder : 1;  // Offset: 2149 Size: 1
	char pad_2150[10];  // Offset: 2150 Size: 10



 // Functions 
 public:
	void ReceiveEditorTick(float DeltaTime); // Function KartDrift.DepthDebugCameraActor.ReceiveEditorTick
}; 
 
 


//Class KartDrift.CancelTargetFinder Size 72
// Inherited 72 bytes 
class UCancelTargetFinder : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_PremiumChallengePageWidget Size 752
// Inherited 752 bytes 
class UC_PremiumChallengePageWidget : public UPremiumChallengePageWidget
{

 public: 



 // Functions 
 public:
	void PremiumChallenge_OnClickedPrevTab(int32_t InIndex); // Function KartDrift.C_PremiumChallengePageWidget.PremiumChallenge_OnClickedPrevTab
	void PremiumChallenge_OnClickedNextTab(int32_t InIndex); // Function KartDrift.C_PremiumChallengePageWidget.PremiumChallenge_OnClickedNextTab
	void OnFocusedPremiumChallengeSlot(int32_t SlotIndex); // Function KartDrift.C_PremiumChallengePageWidget.OnFocusedPremiumChallengeSlot
}; 
 
 


//Class KartDrift.WpWorker Size 616
// Inherited 544 bytes 
class AWpWorker : public AActor
{

 public: 
	struct FString QueueName;  // Offset: 544 Size: 16
	struct FString ServerUrl;  // Offset: 560 Size: 16
	struct UWebSocketServerConnection* WpServer;  // Offset: 576 Size: 8
	char pad_584[32];  // Offset: 584 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PresetPageWidget Size 776
// Inherited 744 bytes 
class UPresetPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[32];  // Offset: 744 Size: 32



 // Functions 
 public:
	void OnUsePresetButtonClicked(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnUsePresetButtonClicked
	void OnOverwritePresetButtonClicked(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnOverwritePresetButtonClicked
	void OnItemPresetUpdated(); // Function KartDrift.PresetPageWidget.OnItemPresetUpdated
	void OnItemPresetSaved(); // Function KartDrift.PresetPageWidget.OnItemPresetSaved
	void OnCloseButtonClicked(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnCloseButtonClicked
	void OnClickedUse(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnClickedUse
	void OnClickedRegister(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnClickedRegister
	void OnClickedPresetSlot(int32_t PresetSlotInIndex); // Function KartDrift.PresetPageWidget.OnClickedPresetSlot
	void OnClickedConfirmRegister(int32_t ButtonIndex); // Function KartDrift.PresetPageWidget.OnClickedConfirmRegister
}; 
 
 


//Class KartDrift.ProfileEditPageWidget Size 832
// Inherited 744 bytes 
class UProfileEditPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[88];  // Offset: 744 Size: 88



 // Functions 
 public:
	void OnUpdateAchievementInfo(); // Function KartDrift.ProfileEditPageWidget.OnUpdateAchievementInfo
	void OnUnFocusedTagButton(int32_t Index); // Function KartDrift.ProfileEditPageWidget.OnUnFocusedTagButton
	void OnFocusedTagButton(int32_t Index); // Function KartDrift.ProfileEditPageWidget.OnFocusedTagButton
	void OnEmblemIDUpdated(); // Function KartDrift.ProfileEditPageWidget.OnEmblemIDUpdated
	void OnClickedTagButton(int32_t Index); // Function KartDrift.ProfileEditPageWidget.OnClickedTagButton
	void OnClickedSaveTagButton(int32_t InIndex); // Function KartDrift.ProfileEditPageWidget.OnClickedSaveTagButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ProfileEditPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.C_ShopPageWidget Size 1160
// Inherited 1160 bytes 
class UC_ShopPageWidget : public UShopPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayPlaybarWidget Size 656
// Inherited 608 bytes 
class UReplayPlaybarWidget : public UUserWidget
{

 public: 
	struct USlider* V_PlaybarSlider;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Txt_CurrentTime;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_Txt_MaxTime;  // Offset: 624 Size: 8
	struct UImage* V_Img_TimeGauge;  // Offset: 632 Size: 8
	struct UReplayTimeControlComponent* TimeControlComp;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8



 // Functions 
 public:
	void OnSliderCaptureEnd(); // Function KartDrift.ReplayPlaybarWidget.OnSliderCaptureEnd
	void OnSliderCaptureBegin(); // Function KartDrift.ReplayPlaybarWidget.OnSliderCaptureBegin
}; 
 
 


//Class KartDrift.SideMenuPageWidget Size 1200
// Inherited 744 bytes 
class USideMenuPageWidget : public UKdPageWidget
{

 public: 
	struct UDialogTemplate* MainDialog;  // Offset: 744 Size: 8
	char pad_752[80];  // Offset: 752 Size: 80
	struct UDialogTemplate* KeyGuideDialog;  // Offset: 832 Size: 8
	char pad_840[152];  // Offset: 840 Size: 152
	struct UDialogTemplate* ReportMainCategoryDialogWidget;  // Offset: 992 Size: 8
	struct UDialogTemplate* ReportPlayerSelectDialogWidget;  // Offset: 1000 Size: 8
	struct UDialogTemplate* PlayerReportSubCategoryDialogWidget;  // Offset: 1008 Size: 8
	struct UDialogTemplate* PlayerReportInputDialogWidget;  // Offset: 1016 Size: 8
	struct UDialogTemplate* PlayerReportConfirmDialogWidget;  // Offset: 1024 Size: 8
	char pad_1032[64];  // Offset: 1032 Size: 64
	struct UDialogTemplate* BlockListMainDialogWidget;  // Offset: 1096 Size: 8
	struct UCommonPopup* UnblockPopupWidget;  // Offset: 1104 Size: 8
	char pad_1112[72];  // Offset: 1112 Size: 72
	struct UDialogTemplate* TermsAndConditionsSelectDialogWidget;  // Offset: 1184 Size: 8
	struct UDataTable* TermsAndConditionsURLDataTable;  // Offset: 1192 Size: 8



 // Functions 
 public:
	void TermsAndConditions_OnServiceButtonClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.TermsAndConditions_OnServiceButtonClicked
	void TermsAndConditions_OnProtectButtonClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.TermsAndConditions_OnProtectButtonClicked
	void TermsAndConditions_CloseDialog(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.TermsAndConditions_CloseDialog
	void Report_Send(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_Send
	void Report_OnReportInputTextChanged(struct FText& Text); // Function KartDrift.SideMenuPageWidget.Report_OnReportInputTextChanged
	void Report_MainCategoryOnClickedPlayerReportButton(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_MainCategoryOnClickedPlayerReportButton
	void Report_ConfirmReport(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_ConfirmReport
	void Report_ClosePlayerSelectDialog(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_ClosePlayerSelectDialog
	void Report_ClosePlayerReportInputDialog(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_ClosePlayerReportInputDialog
	void Report_CloseMainCategorySelectDialog(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Report_CloseMainCategorySelectDialog
	void OnOpenSideMenuClicked(); // Function KartDrift.SideMenuPageWidget.OnOpenSideMenuClicked
	void OnKeyGuideShowWASDButtonClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.OnKeyGuideShowWASDButtonClicked
	void Main_OnTermsAndConditionsClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnTermsAndConditionsClicked
	void Main_OnStaffClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnStaffClicked
	void Main_OnReportClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnReportClicked
	void Main_OnPresetClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnPresetClicked
	void Main_OnOptionsClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnOptionsClicked
	void Main_OnKeyGuideClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnKeyGuideClicked
	void Main_OnCloseButtonClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnCloseButtonClicked
	void Main_OnBlockListClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnBlockListClicked
	void Main_OnAnnouncmentClicked(int32_t InIndex); // Function KartDrift.SideMenuPageWidget.Main_OnAnnouncmentClicked
	void CloseMainDialog(); // Function KartDrift.SideMenuPageWidget.CloseMainDialog
	void BlockList_CloseDialog(int32_t NotUsed); // Function KartDrift.SideMenuPageWidget.BlockList_CloseDialog
}; 
 
 


//Class KartDrift.TouchInputButton Size 696
// Inherited 608 bytes 
class UTouchInputButton : public UUserWidget
{

 public: 
	char pad_608[48];  // Offset: 608 Size: 48
	struct TArray<struct FAnimationPresetDef> OnTouchedAnimation;  // Offset: 656 Size: 16
	struct TArray<struct FAnimationPresetDef> OnReleasedAnimation;  // Offset: 672 Size: 16
	char pad_688_1 : 7;  // Offset: 688 Size: 1
	bool bEnableDragIn : 1;  // Offset: 688 Size: 1
	char pad_689_1 : 7;  // Offset: 689 Size: 1
	bool bEnableDragOut : 1;  // Offset: 689 Size: 1
	char pad_690[6];  // Offset: 690 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_SideMenuPageWidget Size 1208
// Inherited 1200 bytes 
class UC_SideMenuPageWidget : public USideMenuPageWidget
{

 public: 
	char pad_1200[8];  // Offset: 1200 Size: 8



 // Functions 
 public:
	void Report_OnClickedShowGamerCardButton(int32_t InIndex); // Function KartDrift.C_SideMenuPageWidget.Report_OnClickedShowGamerCardButton
	void BlockList_OnUnblockUser(int32_t NotUsed); // Function KartDrift.C_SideMenuPageWidget.BlockList_OnUnblockUser
	void BlockList_OnClickedGamerCardButton(int32_t NotUsed); // Function KartDrift.C_SideMenuPageWidget.BlockList_OnClickedGamerCardButton
}; 
 
 


//Class KartDrift.DqDediNxLogInMatchEndRideEvent Size 280
// Inherited 248 bytes 
class UDqDediNxLogInMatchEndRideEvent : public UDqDediNxLogInMatchEnd
{

 public: 
	struct FString protohash;  // Offset: 248 Size: 16
	struct FString rideevent;  // Offset: 264 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_StickerMarketPageWidget Size 2160
// Inherited 2160 bytes 
class UC_StickerMarketPageWidget : public UStickerMarketPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskNgm Size 480
// Inherited 440 bytes 
class UKdServerLoginTaskNgm : public UKdServerLoginTask
{

 public: 
	char pad_440[32];  // Offset: 440 Size: 32
	struct UKdVersionCheckerNgm* VersionChecker;  // Offset: 472 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitializeLicensePauseMenu Size 112
// Inherited 72 bytes 
class UInitializeLicensePauseMenu : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> PauseMenuWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StudioPageWidget Size 768
// Inherited 744 bytes 
class UStudioPageWidget : public UKdPageWidget
{

 public: 
	struct FInputLimitValue InputLimit;  // Offset: 744 Size: 16
	struct TWeakObjectPtr<UDialogTemplate> StudioSettingsPopup;  // Offset: 760 Size: 8



 // Functions 
 public:
	void OnStudioSettingsBackButtonClicked(int32_t InIndex); // Function KartDrift.StudioPageWidget.OnStudioSettingsBackButtonClicked
	void OnStudioBackButtonClicked(int32_t InIndex); // Function KartDrift.StudioPageWidget.OnStudioBackButtonClicked
	void OnInitStudioByStandAloneItem(); // Function KartDrift.StudioPageWidget.OnInitStudioByStandAloneItem
	void OnInitStudioByGarage(); // Function KartDrift.StudioPageWidget.OnInitStudioByGarage
	void OnInitStudioByDef(); // Function KartDrift.StudioPageWidget.OnInitStudioByDef
}; 
 
 


//Class KartDrift.SmsMultiplay Size 304
// Inherited 56 bytes 
class USmsMultiplay : public USmsProvider
{

 public: 
	char pad_56[40];  // Offset: 56 Size: 40
	struct UHttpServerRequester* SessionApiServer;  // Offset: 96 Size: 8
	char pad_104[80];  // Offset: 104 Size: 80
	struct TMap<struct FString, struct UObject*> SmsPlayers;  // Offset: 184 Size: 80
	char pad_264[16];  // Offset: 264 Size: 16
	struct UObject* GameSessionRequest;  // Offset: 280 Size: 8
	char pad_288[16];  // Offset: 288 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceLevelLoadComponent Size 208
// Inherited 176 bytes 
class URaceLevelLoadComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	char pad_200_1 : 7;  // Offset: 200 Size: 1
	bool bSubLevelAllLoadComplete : 1;  // Offset: 200 Size: 1
	char pad_201[7];  // Offset: 201 Size: 7



 // Functions 
 public:
	void OnSubLevelAllLoadComplete(); // Function KartDrift.RaceLevelLoadComponent.OnSubLevelAllLoadComplete
}; 
 
 


//Class KartDrift.M_PresetPageWidget Size 784
// Inherited 776 bytes 
class UM_PresetPageWidget : public UPresetPageWidget
{

 public: 
	char pad_776[8];  // Offset: 776 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_StudioPageWidget Size 768
// Inherited 768 bytes 
class UC_StudioPageWidget : public UStudioPageWidget
{

 public: 



 // Functions 
 public:
	void OnSettingsButtonClicked(int32_t InIndex); // Function KartDrift.C_StudioPageWidget.OnSettingsButtonClicked
	void OnScreenShotButtonClicked(int32_t InIndex); // Function KartDrift.C_StudioPageWidget.OnScreenShotButtonClicked
}; 
 
 


//Class KartDrift.Transition_TimeAttackGoal Size 80
// Inherited 80 bytes 
class UTransition_TimeAttackGoal : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioLevelSequencePlayer Size 1544
// Inherited 1536 bytes 
class UScenarioLevelSequencePlayer : public ULevelSequencePlayer
{

 public: 
	char pad_1536_1 : 7;  // Offset: 1536 Size: 1
	bool bOverrideCameraCutParams : 1;  // Offset: 1536 Size: 1
	char pad_1537_1 : 7;  // Offset: 1537 Size: 1
	bool bNoJumpInSameCamera : 1;  // Offset: 1537 Size: 1
	char pad_1538[6];  // Offset: 1538 Size: 6



 // Functions 
 public:
	void SetOverrideCameraCutParams(bool bInOverride); // Function KartDrift.ScenarioLevelSequencePlayer.SetOverrideCameraCutParams
	void SetNoJumpCutInSameCamera(bool bNoJump); // Function KartDrift.ScenarioLevelSequencePlayer.SetNoJumpCutInSameCamera
}; 
 
 


//Class KartDrift.TimeAttackPersonalResultWidget Size 1096
// Inherited 816 bytes 
class UTimeAttackPersonalResultWidget : public UDialogTemplate
{

 public: 
	struct UTextBlock* V_CurrentRaceTime;  // Offset: 816 Size: 8
	struct UTextBlock* V_BestRaceTime;  // Offset: 824 Size: 8
	struct UTextBlock* V_RaceResult;  // Offset: 832 Size: 8
	struct UTextBlock* Text_NewOrTime;  // Offset: 840 Size: 8
	struct UTextBlock* Text_SeasonBest;  // Offset: 848 Size: 8
	struct UHorizontalBox* HB_RankerInfo;  // Offset: 856 Size: 8
	struct UPlatformIconWidget* PlatformIconWidget;  // Offset: 864 Size: 8
	struct UTextBlock* Text_PlayerID;  // Offset: 872 Size: 8
	struct UWidgetSwitcher* WS_RankerTimeStyle;  // Offset: 880 Size: 8
	struct UWidgetSwitcher* WS_Lucci;  // Offset: 888 Size: 8
	struct UTextBlock* Text_Lucci;  // Offset: 896 Size: 8
	struct UWidgetSwitcher* WS_Season;  // Offset: 904 Size: 8
	struct FText RaceSuccessText;  // Offset: 912 Size: 24
	struct FText RaceFinishText;  // Offset: 936 Size: 24
	struct FText RaceFailText;  // Offset: 960 Size: 24
	struct FText RaceVictoryText;  // Offset: 984 Size: 24
	struct FSlateColor RaceSuccessColor;  // Offset: 1008 Size: 40
	struct FSlateColor RaceFailColor;  // Offset: 1048 Size: 40
	char pad_1088[8];  // Offset: 1088 Size: 8



 // Functions 
 public:
	void OnClickedRetryGame(int32_t InIndex); // Function KartDrift.TimeAttackPersonalResultWidget.OnClickedRetryGame
	void OnClickedExitGame(int32_t InIndex); // Function KartDrift.TimeAttackPersonalResultWidget.OnClickedExitGame
}; 
 
 


//Class KartDrift.HostGameFinishRace Size 48
// Inherited 48 bytes 
class UHostGameFinishRace : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCheckDriftBoostComponent Size 240
// Inherited 176 bytes 
class ULicenseCheckDriftBoostComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseCheckDriftBoostData* Data;  // Offset: 192 Size: 8
	char pad_200[40];  // Offset: 200 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_CouponPageWidget Size 792
// Inherited 776 bytes 
class UM_CouponPageWidget : public UCouponPageWidget
{

 public: 
	char pad_776[16];  // Offset: 776 Size: 16



 // Functions 
 public:
	void OpenItemListPopup(int32_t NotUsed); // Function KartDrift.M_CouponPageWidget.OpenItemListPopup
}; 
 
 


//Class KartDrift.C_TimeAttackPersonalResultWidget Size 1112
// Inherited 1096 bytes 
class UC_TimeAttackPersonalResultWidget : public UTimeAttackPersonalResultWidget
{

 public: 
	struct UKeyIconWidget* V_RetryKeyIcon;  // Offset: 1096 Size: 8
	struct UKeyIconWidget* V_ExitKeyIcon;  // Offset: 1104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioForceAutoForward Size 632
// Inherited 624 bytes 
class AScenarioForceAutoForward : public AScenarioBase
{

 public: 
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bForceAutoForward : 1;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayModeSelectLogicComponent Size 232
// Inherited 224 bytes 
class UReplayModeSelectLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[8];  // Offset: 224 Size: 8



 // Functions 
 public:
	void OnSelectMode(int32_t InIndex); // Function KartDrift.ReplayModeSelectLogicComponent.OnSelectMode
	void OnFocusMode(int32_t InIndex); // Function KartDrift.ReplayModeSelectLogicComponent.OnFocusMode
	void OnActivated(bool bActivate); // Function KartDrift.ReplayModeSelectLogicComponent.OnActivated
}; 
 
 


//Class KartDrift.PrLoginQueueStatus Size 80
// Inherited 72 bytes 
class UPrLoginQueueStatus : public UPrPacket
{

 public: 
	int32_t waiting;  // Offset: 72 Size: 4
	int32_t processingPerMinute;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.C_TimeAttackTrackChangeDialog Size 896
// Inherited 896 bytes 
class UC_TimeAttackTrackChangeDialog : public UTimeAttackTrackChangeDialog
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CameraCalculator Size 40
// Inherited 40 bytes 
class UCameraCalculator : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrCustomGameKickedList Size 88
// Inherited 72 bytes 
class UPrCustomGameKickedList : public UPrPacket
{

 public: 
	struct TArray<struct FString> kickedList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseSequence Size 80
// Inherited 80 bytes 
class UTransition_LicenseSequence : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriveCameraCalculator Size 592
// Inherited 40 bytes 
class UDriveCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[552];  // Offset: 40 Size: 552



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PawnManageComponent Size 272
// Inherited 176 bytes 
class UPawnManageComponent : public UActorComponent
{

 public: 
	char pad_176[80];  // Offset: 176 Size: 80
	struct TArray<struct TWeakObjectPtr<AOutGamePawn>> MenuallySpawnedPawns;  // Offset: 256 Size: 16



 // Functions 
 public:
	void PlayAnimationKartOnOff(enum class EOutGamePawnType PawnType, bool bOn); // Function KartDrift.PawnManageComponent.PlayAnimationKartOnOff
}; 
 
 


//Class KartDrift.TopFollowCameraCalculator Size 176
// Inherited 40 bytes 
class UTopFollowCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[136];  // Offset: 40 Size: 136



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StopFinishAnimation Size 72
// Inherited 72 bytes 
class UStopFinishAnimation : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_TimeAttackSelectRankerDialog Size 888
// Inherited 888 bytes 
class UM_TimeAttackSelectRankerDialog : public UTimeAttackSelectRankerDialog
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FrontFollowCameraCalculator Size 208
// Inherited 40 bytes 
class UFrontFollowCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[168];  // Offset: 40 Size: 168



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSingleGameMode Size 824
// Inherited 824 bytes 
class AItemSingleGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SideFollowCameraCalculator Size 296
// Inherited 40 bytes 
class USideFollowCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[256];  // Offset: 40 Size: 256



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropIdentity Size 216
// Inherited 40 bytes 
class UKdPlayerPropIdentity : public UObject
{

 public: 
	char pad_40[176];  // Offset: 40 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FreeRaceGameMode Size 824
// Inherited 824 bytes 
class AFreeRaceGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RegisterGameStateComponents Size 72
// Inherited 72 bytes 
class URegisterGameStateComponents : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GazeCameraCalculator Size 128
// Inherited 40 bytes 
class UGazeCameraCalculator : public UCameraCalculator
{

 public: 
	char pad_40[88];  // Offset: 40 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseBossWarningWidget Size 624
// Inherited 608 bytes 
class ULicenseBossWarningWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimation* Anim_Show;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Hide;  // Offset: 616 Size: 8



 // Functions 
 public:
	void OnWarning(bool bWarning); // Function KartDrift.LicenseBossWarningWidget.OnWarning
}; 
 
 


//Class KartDrift.DriveCameraParticleEffectComponent Size 192
// Inherited 176 bytes 
class UDriveCameraParticleEffectComponent : public UActorComponent
{

 public: 
	struct UParticleSystemComponent* ParticleComp;  // Offset: 176 Size: 8
	char pad_184[8];  // Offset: 184 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartRiderTrackEffectStatics Size 40
// Inherited 40 bytes 
class UKartRiderTrackEffectStatics : public UBlueprintFunctionLibrary
{

 public: 



 // Functions 
 public:
	struct UParticleSystemComponent* ActivateWaterSplashEffect(struct AActor* TargetActor, struct UParticleSystem* Effect, float ActiveTimeSeconds); // Function KartDrift.KartRiderTrackEffectStatics.ActivateWaterSplashEffect
}; 
 
 


//Class KartDrift.CameraModeButtonWidget Size 1048
// Inherited 1000 bytes 
class UCameraModeButtonWidget : public UButtonTemplate
{

 public: 
	float CameraAngle;  // Offset: 1000 Size: 4
	char pad_1004[4];  // Offset: 1004 Size: 4
	struct FText CameraCode;  // Offset: 1008 Size: 24
	struct FVector2D TextOffset;  // Offset: 1032 Size: 8
	enum class ECameraMode CameraMode;  // Offset: 1040 Size: 4
	char pad_1044[4];  // Offset: 1044 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdTextImageDecoratorAsset Size 128
// Inherited 48 bytes 
class UKdTextImageDecoratorAsset : public UDataAsset
{

 public: 
	struct TMap<struct FName, struct FKdTextInlineImageDecoratorData> IdAndDecoratorDataMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseObstacleInterface Size 40
// Inherited 40 bytes 
class ULicenseObstacleInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseScoreWidget Size 736
// Inherited 608 bytes 
class ULicenseScoreWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_Score_Text;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Add_Score_Text;  // Offset: 616 Size: 8
	struct UKdTextBlock* TotalScore_Text_2;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_Add_Score_Text_2;  // Offset: 632 Size: 8
	struct UProgressBar* ProgressBar_142;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_addscore;  // Offset: 648 Size: 8
	struct ULicenseStarIcon* Star_2;  // Offset: 656 Size: 8
	struct ULicenseStarIcon* Star_3;  // Offset: 664 Size: 8
	struct ULicenseStarIcon* Star_4;  // Offset: 672 Size: 8
	struct UWidgetSwitcher* V_ProgressSW;  // Offset: 680 Size: 8
	int32_t Score;  // Offset: 688 Size: 4
	int32_t AddedScore;  // Offset: 692 Size: 4
	int32_t InSoundCount;  // Offset: 696 Size: 4
	int32_t Star;  // Offset: 700 Size: 4
	float Max;  // Offset: 704 Size: 4
	float Progress;  // Offset: 708 Size: 4
	float LastProgress;  // Offset: 712 Size: 4
	float AnimTime;  // Offset: 716 Size: 4
	struct UWidgetSwitcher* V_Score_Switcher;  // Offset: 720 Size: 8
	struct ULicenseStarCondition* Condition;  // Offset: 728 Size: 8



 // Functions 
 public:
	void AddScore(int32_t Score, enum class ELicenseScoreReason Reason); // Function KartDrift.LicenseScoreWidget.AddScore
}; 
 
 


//Class KartDrift.KtSessionCloseRace Size 72
// Inherited 48 bytes 
class UKtSessionCloseRace : public UKxObject
{

 public: 
	struct TArray<struct FString> rematchParties;  // Offset: 48 Size: 16
	enum class ERaceCloseReason closeType;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CameraModeSelectWidget Size 608
// Inherited 608 bytes 
class UCameraModeSelectWidget : public UUserWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ChallengeLogicComponent Size 296
// Inherited 224 bytes 
class UChallengeLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[72];  // Offset: 224 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CharacterMontageAsset Size 160
// Inherited 48 bytes 
class UCharacterMontageAsset : public UDataAsset
{

 public: 
	struct TMap<enum class ECharacterMontage, struct TSoftObjectPtr<UAnimMontage>> MontageContainer;  // Offset: 48 Size: 80
	struct FString CharacterName;  // Offset: 128 Size: 16
	struct FString FolderPath;  // Offset: 144 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ChatLogicComponent Size 624
// Inherited 224 bytes 
class UChatLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[400];  // Offset: 224 Size: 400



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PassableBox Size 544
// Inherited 544 bytes 
class APassableBox : public AActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ResetPoint Size 544
// Inherited 544 bytes 
class AResetPoint : public AActor
{

 public: 



 // Functions 
 public:
	void ShowBox(); // Function KartDrift.ResetPoint.ShowBox
	void ClearBox(); // Function KartDrift.ResetPoint.ClearBox
}; 
 
 


//Class KartDrift.ClientVerifier Size 312
// Inherited 48 bytes 
class UClientVerifier : public UKdPostInitializer
{

 public: 
	char pad_48[264];  // Offset: 48 Size: 264



 // Functions 
 public:
	void VerifyStandbyClient(); // Function KartDrift.ClientVerifier.VerifyStandbyClient
}; 
 
 


//Class KartDrift.CommonPopup Size 936
// Inherited 816 bytes 
class UCommonPopup : public UDialogTemplate
{

 public: 
	char pad_816[32];  // Offset: 816 Size: 32
	struct TMap<enum class ECommonPopupButtonType, struct TSoftClassPtr<UObject>> ButtonClassMap;  // Offset: 848 Size: 80
	char pad_928[8];  // Offset: 928 Size: 8



 // Functions 
 public:
	void DoClose(int32_t InIndex); // Function KartDrift.CommonPopup.DoClose
}; 
 
 


//Class KartDrift.HideUICheatEmptyWidget Size 608
// Inherited 608 bytes 
class UHideUICheatEmptyWidget : public UUserWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSeasonDataSet Size 208
// Inherited 48 bytes 
class UKtSeasonDataSet : public UKxObject
{

 public: 
	struct TMap<struct FString, struct FKtSeasonStaticInfo> season;  // Offset: 48 Size: 80
	struct TMap<struct FString, struct UObject*> racingPass;  // Offset: 128 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtGameSettings Size 48
// Inherited 48 bytes 
class UKtGameSettings : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtRaceSettings Size 80
// Inherited 48 bytes 
class UKtRaceSettings : public UKtGameSettings
{

 public: 
	struct FString Track;  // Offset: 48 Size: 16
	enum class ERaceType raceType;  // Offset: 64 Size: 1
	enum class ERaceMode raceMode;  // Offset: 65 Size: 1
	char pad_66[2];  // Offset: 66 Size: 2
	int32_t teamMemberCount;  // Offset: 68 Size: 4
	int32_t teamCount;  // Offset: 72 Size: 4
	int32_t Lap;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtGameDetails Size 48
// Inherited 48 bytes 
class UKtGameDetails : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_EndRetireCountdown_WaitForResult Size 88
// Inherited 80 bytes 
class UTransition_EndRetireCountdown_WaitForResult : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtRaceDetails Size 144
// Inherited 48 bytes 
class UKtRaceDetails : public UKtGameDetails
{

 public: 
	struct TArray<struct FKtRacePlayerSummary> players;  // Offset: 48 Size: 16
	struct TMap<struct FString, struct FKtItemPreview> Previews;  // Offset: 64 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtRacingPassSet Size 128
// Inherited 48 bytes 
class UKtRacingPassSet : public UKxObject
{

 public: 
	struct FString shop_stockID;  // Offset: 48 Size: 16
	struct FString shop_PackagestockID;  // Offset: 64 Size: 16
	struct FString shop_LevelstockID;  // Offset: 80 Size: 16
	struct TArray<struct FKtTrophySaleDef> saleRateVector;  // Offset: 96 Size: 16
	struct TArray<struct FKtRacingPassDef> tiers;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryLogicComponent Size 1128
// Inherited 224 bytes 
class ULiveryLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[40];  // Offset: 224 Size: 40
	struct UTexture2D* LiveryEditTexture;  // Offset: 264 Size: 8
	struct FTickUpdateLiveryInfo TickUpdateLiveryInfo;  // Offset: 272 Size: 80
	struct FLiveryDesignDesc PreviewLiveryDesignDesc;  // Offset: 352 Size: 64
	int32_t PreviewEditId;  // Offset: 416 Size: 4
	char pad_420[22];  // Offset: 420 Size: 22
	enum class ELiveryCategoryType LiveryCategory;  // Offset: 442 Size: 1
	enum class ELiveryCategoryType LiveryEditStartCategory;  // Offset: 443 Size: 1
	enum class ELiveryPaintType LiveryEditPaintType;  // Offset: 444 Size: 1
	enum class ELiveryWrappingCategory CurrentShapeCategory;  // Offset: 445 Size: 1
	char pad_446[2];  // Offset: 446 Size: 2
	struct FKtItemPreset CurrentPreset;  // Offset: 448 Size: 160
	int32_t FocusEditLiveryId;  // Offset: 608 Size: 4
	int32_t CurrentEditLiveryId;  // Offset: 612 Size: 4
	int32_t CurrentSaveLiveryId;  // Offset: 616 Size: 4
	char pad_620[148];  // Offset: 620 Size: 148
	struct TArray<struct FStickerStock> DownloadStickerStockList;  // Offset: 768 Size: 16
	struct TArray<struct FLiveryItemInfo> MyStickerItemList;  // Offset: 784 Size: 16
	struct TArray<struct FLiveryItemInfo> DownloadStickerItemList;  // Offset: 800 Size: 16
	struct TArray<struct FLiveryItemInfo> LiveryEditItemList;  // Offset: 816 Size: 16
	struct TArray<struct FLiveryPaintDesc> EquippedLiveryPaint;  // Offset: 832 Size: 16
	struct TArray<struct FLiveryWrappingDesc> BackupWrappingDesc;  // Offset: 848 Size: 16
	struct TArray<struct FLiveryItemInfo> WrappingItemInfoList;  // Offset: 864 Size: 16
	int32_t LiveryEditItemSlotStart;  // Offset: 880 Size: 4
	int32_t LiveryEditItemSlot;  // Offset: 884 Size: 4
	int32_t LiveryEditIndex;  // Offset: 888 Size: 4
	int32_t ColorFocusIndex;  // Offset: 892 Size: 4
	char pad_896_1 : 7;  // Offset: 896 Size: 1
	bool bIsGrouping : 1;  // Offset: 896 Size: 1
	char pad_897[7];  // Offset: 897 Size: 7
	struct TArray<int32_t> TempGroupingIndexList;  // Offset: 904 Size: 16
	struct FLiveryDesignDesc OriginalLiveryDesign;  // Offset: 920 Size: 64
	struct FLiveryDesignDesc CurrentEditDesignDesc;  // Offset: 984 Size: 64
	char pad_1048_1 : 7;  // Offset: 1048 Size: 1
	bool bNewCreateLiveryLayer : 1;  // Offset: 1048 Size: 1
	char pad_1049[7];  // Offset: 1049 Size: 7
	struct TArray<struct FLiveryWrappingDesc> ClipBoardWrappingDescArray;  // Offset: 1056 Size: 16
	enum class ELiveryPaintType ClipBoardPaintType;  // Offset: 1072 Size: 1
	char pad_1073[1];  // Offset: 1073 Size: 1
	char pad_1074_1 : 7;  // Offset: 1074 Size: 1
	bool bPauseLiveryEdit : 1;  // Offset: 1074 Size: 1
	char pad_1075_1 : 7;  // Offset: 1075 Size: 1
	bool bUseFineTuning : 1;  // Offset: 1075 Size: 1
	char pad_1076_1 : 7;  // Offset: 1076 Size: 1
	bool bUseLayerMoveX : 1;  // Offset: 1076 Size: 1
	char pad_1077_1 : 7;  // Offset: 1077 Size: 1
	bool bUseLayerMoveY : 1;  // Offset: 1077 Size: 1
	char pad_1078_1 : 7;  // Offset: 1078 Size: 1
	bool bUseLiveryScaleSingle : 1;  // Offset: 1078 Size: 1
	char pad_1079_1 : 7;  // Offset: 1079 Size: 1
	bool bUseLayerScaleX : 1;  // Offset: 1079 Size: 1
	char pad_1080_1 : 7;  // Offset: 1080 Size: 1
	bool bUseLayerScaleY : 1;  // Offset: 1080 Size: 1
	char pad_1081_1 : 7;  // Offset: 1081 Size: 1
	bool bUseLayerRotate : 1;  // Offset: 1081 Size: 1
	char pad_1082_1 : 7;  // Offset: 1082 Size: 1
	bool bFixedUnit : 1;  // Offset: 1082 Size: 1
	enum class ELiveryEditAutoRotateMode EditAutoRotateMode;  // Offset: 1083 Size: 1
	char pad_1084[12];  // Offset: 1084 Size: 12
	struct FVector2D AccumulateMove;  // Offset: 1096 Size: 8
	struct FVector2D AccumulateSingleScale;  // Offset: 1104 Size: 8
	struct FVector2D AccumulateScale;  // Offset: 1112 Size: 8
	float AccumulateRotate;  // Offset: 1120 Size: 4
	char pad_1124[4];  // Offset: 1124 Size: 4



 // Functions 
 public:
	void OnDeletedSticker(int32_t ID); // Function KartDrift.LiveryLogicComponent.OnDeletedSticker
	void OnDeletedLivery(int32_t InLiveryId); // Function KartDrift.LiveryLogicComponent.OnDeletedLivery
}; 
 
 


//Class KartDrift.KtStockDataSet Size 128
// Inherited 48 bytes 
class UKtStockDataSet : public UKxObject
{

 public: 
	struct TMap<struct FString, struct FKtStockDef> stockDef;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMessageElementWidget Size 616
// Inherited 608 bytes 
class ULicenseMessageElementWidget : public UUserWidget
{

 public: 
	struct UKdImageTextBlock* V_TextBlock_Message;  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseItemComponent Size 1120
// Inherited 1104 bytes 
class ULicenseItemComponent : public UItemComponent
{

 public: 
	struct AActor* Pawn;  // Offset: 1104 Size: 8
	struct ULicenseItemSpawnData* Data;  // Offset: 1112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CommunityFriendObject Size 232
// Inherited 40 bytes 
class UCommunityFriendObject : public UObject
{

 public: 
	char pad_40[192];  // Offset: 40 Size: 192



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ContentManagerComponent Size 352
// Inherited 176 bytes 
class UContentManagerComponent : public UActorComponent
{

 public: 
	char pad_176[176];  // Offset: 176 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ContextMenuTemplate Size 840
// Inherited 816 bytes 
class UContextMenuTemplate : public UDialogTemplate
{

 public: 
	UButtonTemplate* ContextMenuButtonClass;  // Offset: 816 Size: 8
	struct UPanelWidget* ParentsPanel;  // Offset: 824 Size: 8
	char pad_832[8];  // Offset: 832 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMissionListEntry Size 192
// Inherited 40 bytes 
class ULicenseMissionListEntry : public UObject
{

 public: 
	int32_t ListIndex;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4
	struct FString GroupID;  // Offset: 48 Size: 16
	struct FString missionId;  // Offset: 64 Size: 16
	struct FText MissionTitle;  // Offset: 80 Size: 24
	struct TArray<struct FString> rewardStockIdList;  // Offset: 104 Size: 16
	struct TArray<int32_t> starScoreList;  // Offset: 120 Size: 16
	char CompletedStarCount;  // Offset: 136 Size: 1
	char pad_137[7];  // Offset: 137 Size: 7
	struct TArray<enum class EItemType> ItemTypeList;  // Offset: 144 Size: 16
	enum class ELicenseMissionScoreType ScoreType;  // Offset: 160 Size: 1
	char pad_161[7];  // Offset: 161 Size: 7
	struct FText MissionTip;  // Offset: 168 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SmsProvider Size 56
// Inherited 40 bytes 
class USmsProvider : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTargetActorSpawnComponent Size 488
// Inherited 176 bytes 
class ULicenseTargetActorSpawnComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseTargetActorData* Data;  // Offset: 192 Size: 8
	struct TMap<struct AActor*, enum class EItemType> SpawnedActors;  // Offset: 200 Size: 80
	char pad_280_1 : 7;  // Offset: 280 Size: 1
	bool bSuccess : 1;  // Offset: 280 Size: 1
	char pad_281[3];  // Offset: 281 Size: 3
	float EventLastTime;  // Offset: 284 Size: 4
	int32_t PatternIndex;  // Offset: 288 Size: 4
	float PatternChangeTime;  // Offset: 292 Size: 4
	struct FString CurrentPattern;  // Offset: 296 Size: 16
	struct UCurveFloat* SpawnCurve;  // Offset: 312 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 320 Size: 8
	struct AActor* Pawn;  // Offset: 328 Size: 8
	char pad_336[32];  // Offset: 336 Size: 32
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 368 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 408 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 448 Size: 40



 // Functions 
 public:
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.LicenseTargetActorSpawnComponent.OnAffectedBy
}; 
 
 


//Class KartDrift.ControlDirectingWidget Size 752
// Inherited 608 bytes 
class UControlDirectingWidget : public UUserWidget
{

 public: 
	struct FMulticastInlineDelegate OnReleased_MajorIntroSequenceDelegate;  // Offset: 608 Size: 16
	struct FMulticastInlineDelegate OnReleased_MajorFinishSequenceDelegate;  // Offset: 624 Size: 16
	struct FMulticastInlineDelegate OnReleased_MajorPodiumSequenceDelegate;  // Offset: 640 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_MajorIntroSequenceDelegate;  // Offset: 656 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_MajorFinishSequenceDelegate;  // Offset: 672 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_MajorPodiumSequenceDelegate;  // Offset: 688 Size: 16
	struct UComboBoxStringExpand* ComboBoxString_MajorIntroSequence;  // Offset: 704 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_MajorFinishSequence;  // Offset: 712 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_MajorPodiumSequence;  // Offset: 720 Size: 8
	struct UButton* Button_MajorIntroAction;  // Offset: 728 Size: 8
	struct UButton* Button_MajorFinishAction;  // Offset: 736 Size: 8
	struct UButton* Button_MajorPodiumAction;  // Offset: 744 Size: 8



 // Functions 
 public:
	void OnComboBoxSelection_MajorPodiumSequence(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlDirectingWidget.OnComboBoxSelection_MajorPodiumSequence
	void OnComboBoxSelection_MajorIntroSequence(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlDirectingWidget.OnComboBoxSelection_MajorIntroSequence
	void OnComboBoxSelection_MajorFinishSequence(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlDirectingWidget.OnComboBoxSelection_MajorFinishSequence
	void OnButtonReleased_MajorPodiumSequence(); // Function KartDrift.ControlDirectingWidget.OnButtonReleased_MajorPodiumSequence
	void OnButtonReleased_MajorIntroSequence(); // Function KartDrift.ControlDirectingWidget.OnButtonReleased_MajorIntroSequence
	void OnButtonReleased_MajorFinishSequence(); // Function KartDrift.ControlDirectingWidget.OnButtonReleased_MajorFinishSequence
}; 
 
 


//Class KartDrift.ItemSpawnComponent Size 320
// Inherited 176 bytes 
class UItemSpawnComponent : public UActorComponent
{

 public: 
	char pad_176[144];  // Offset: 176 Size: 144



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseBarricadeComponent Size 232
// Inherited 176 bytes 
class ULicenseBarricadeComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct UBarricadeDistanceItemSpawnInAdvance* Data;  // Offset: 184 Size: 8
	char pad_192[40];  // Offset: 192 Size: 40



 // Functions 
 public:
	void OnBarricadeHit(); // Function KartDrift.LicenseBarricadeComponent.OnBarricadeHit
}; 
 
 


//Class KartDrift.ControlPawnEquipWidget Size 992
// Inherited 608 bytes 
class UControlPawnEquipWidget : public UUserWidget
{

 public: 
	struct FMulticastInlineDelegate OnSelectionChanged_CharacterDelegate;  // Offset: 608 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_CostumeDelegate;  // Offset: 624 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_KartDelegate;  // Offset: 640 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_PartsDelegate;  // Offset: 656 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_BoosterDelegate;  // Offset: 672 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_WheelDelegate;  // Offset: 688 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_PlateDelegate;  // Offset: 704 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_BalloonDelegate;  // Offset: 720 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_SkidMarkDelegate;  // Offset: 736 Size: 16
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Character;  // Offset: 752 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Costume;  // Offset: 760 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Kart;  // Offset: 768 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Parts;  // Offset: 776 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Booster;  // Offset: 784 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Plate;  // Offset: 792 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Wheel;  // Offset: 800 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_Balloon;  // Offset: 808 Size: 8
	struct UComboBoxStringExpandWithSearch* ComboBoxStringExpand_SkidMark;  // Offset: 816 Size: 8
	char pad_824[168];  // Offset: 824 Size: 168



 // Functions 
 public:
	void OnComboBoxSelectionChanged_Wheel(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Wheel
	void OnComboBoxSelectionChanged_SkidMark(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_SkidMark
	void OnComboBoxSelectionChanged_Plate(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Plate
	void OnComboBoxSelectionChanged_Parts(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Parts
	void OnComboBoxSelectionChanged_Kart(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Kart
	void OnComboBoxSelectionChanged_Costume(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Costume
	void OnComboBoxSelectionChanged_Character(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Character
	void OnComboBoxSelectionChanged_Booster(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Booster
	void OnComboBoxSelectionChanged_Balloon(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnEquipWidget.OnComboBoxSelectionChanged_Balloon
}; 
 
 


//Class KartDrift.ControlPawnFXWidget Size 800
// Inherited 608 bytes 
class UControlPawnFXWidget : public UUserWidget
{

 public: 
	struct FMulticastInlineDelegate OnReleased_SitActionDelegate;  // Offset: 608 Size: 16
	struct FMulticastInlineDelegate OnReleased_ThrowActionDelegate;  // Offset: 624 Size: 16
	struct FMulticastInlineDelegate OnReleased_SufferActionDelegate;  // Offset: 640 Size: 16
	struct FMulticastInlineDelegate OnReleased_ItemAffectByActionDelegate;  // Offset: 656 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_SitMotionDelegate;  // Offset: 672 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_ThrowMotionDelegate;  // Offset: 688 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_SufferMotionDelegate;  // Offset: 704 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_ItemAffectByDelegate;  // Offset: 720 Size: 16
	struct UComboBoxStringExpand* ComboBoxString_SitMotion;  // Offset: 736 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_ThrowMotion;  // Offset: 744 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_SufferMotion;  // Offset: 752 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_ItemAffectBy;  // Offset: 760 Size: 8
	struct UButton* Button_SitAction;  // Offset: 768 Size: 8
	struct UButton* Button_ThrowAction;  // Offset: 776 Size: 8
	struct UButton* Button_SufferAction;  // Offset: 784 Size: 8
	struct UButton* Button_ItemAffectByAction;  // Offset: 792 Size: 8



 // Functions 
 public:
	void OnComboBoxSelection_Throw(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnFXWidget.OnComboBoxSelection_Throw
	void OnComboBoxSelection_Suffer(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnFXWidget.OnComboBoxSelection_Suffer
	void OnComboBoxSelection_Sit(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnFXWidget.OnComboBoxSelection_Sit
	void OnComboBoxSelection_ItemAffectBy(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlPawnFXWidget.OnComboBoxSelection_ItemAffectBy
	void OnButtonReleased_Throw(); // Function KartDrift.ControlPawnFXWidget.OnButtonReleased_Throw
	void OnButtonReleased_Suffer(); // Function KartDrift.ControlPawnFXWidget.OnButtonReleased_Suffer
	void OnButtonReleased_Sit(); // Function KartDrift.ControlPawnFXWidget.OnButtonReleased_Sit
	void OnButtonReleased_ItemAffectBy(); // Function KartDrift.ControlPawnFXWidget.OnButtonReleased_ItemAffectBy
}; 
 
 


//Class KartDrift.WallAssistSpline Size 984
// Inherited 544 bytes 
class AWallAssistSpline : public AActor
{

 public: 
	enum class EBCWallType BeginnerCareWallType;  // Offset: 544 Size: 1
	enum class EBCWallThemeType ThemeType;  // Offset: 545 Size: 1
	char pad_546[6];  // Offset: 546 Size: 6
	struct UMaterialInterface* WallMaterial;  // Offset: 552 Size: 8
	struct USplineComponent* SplineComp;  // Offset: 560 Size: 8
	int32_t MeshCount;  // Offset: 568 Size: 4
	char pad_572_1 : 7;  // Offset: 572 Size: 1
	bool bDebugCollision : 1;  // Offset: 572 Size: 1
	char pad_573_1 : 7;  // Offset: 573 Size: 1
	bool bActorMerge : 1;  // Offset: 573 Size: 1
	char pad_574[2];  // Offset: 574 Size: 2
	struct FString BasePackageName;  // Offset: 576 Size: 16
	char pad_592[32];  // Offset: 592 Size: 32
	struct TSoftObjectPtr<UStaticMesh> SplineMesh;  // Offset: 624 Size: 40
	struct TSoftObjectPtr<UStaticMesh> SplineMesh_Collision;  // Offset: 664 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> WallCollisionMaterial;  // Offset: 704 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_ShortCut;  // Offset: 744 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_00;  // Offset: 784 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_01;  // Offset: 824 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_02;  // Offset: 864 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Corner_Type_00;  // Offset: 904 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Corner_Type_01;  // Offset: 944 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ControlTrackWidget Size 752
// Inherited 608 bytes 
class UControlTrackWidget : public UUserWidget
{

 public: 
	struct FMulticastInlineDelegate OnSelectionChanged_LevelDelegate;  // Offset: 608 Size: 16
	struct FMulticastInlineDelegate OnSelectionChanged_RaceModeDelegate;  // Offset: 624 Size: 16
	struct UComboBoxStringExpand* ComboBoxString_Level;  // Offset: 640 Size: 8
	struct UComboBoxStringExpand* ComboBoxString_RaceMode;  // Offset: 648 Size: 8
	struct UEditableText* EditableText_ModeParam;  // Offset: 656 Size: 8
	struct UButton* Button_PlayLevel;  // Offset: 664 Size: 8
	char pad_672[80];  // Offset: 672 Size: 80



 // Functions 
 public:
	void OnComboBoxSelection_RaceMode(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlTrackWidget.OnComboBoxSelection_RaceMode
	void OnComboBoxSelection_Level(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.ControlTrackWidget.OnComboBoxSelection_Level
	void OnButtonReleased_PlayLevel(); // Function KartDrift.ControlTrackWidget.OnButtonReleased_PlayLevel
}; 
 
 


//Class KartDrift.PrCouponUse Size 128
// Inherited 72 bytes 
class UPrCouponUse : public UPrPacket
{

 public: 
	struct FString couponId;  // Offset: 72 Size: 16
	int32_t resultCode;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct TArray<struct FKtItem> Items;  // Offset: 96 Size: 16
	struct TArray<struct FString> duplicatedItems;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NXPToy Size 48
// Inherited 48 bytes 
class UNXPToy : public UGameInstanceSubsystem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcVivoxJoinCustomRoom Size 96
// Inherited 48 bytes 
class UPcVivoxJoinCustomRoom : public UPcPacket
{

 public: 
	struct FString vivoxChannelName;  // Offset: 48 Size: 16
	struct FString vivoxJoinToken;  // Offset: 64 Size: 16
	struct FString vivoxTranscriptionToken;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CubeMapViewer Size 560
// Inherited 544 bytes 
class ACubeMapViewer : public AActor
{

 public: 
	struct UMaterialInstanceDynamic* MatInstanceDynamic;  // Offset: 544 Size: 8
	struct FName CubeParam;  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LapCompletedWidget Size 688
// Inherited 608 bytes 
class ULapCompletedWidget : public UUserWidget
{

 public: 
	int32_t TotalLapCount;  // Offset: 608 Size: 4
	char pad_612[4];  // Offset: 612 Size: 4
	struct UWidgetSwitcher* V_WidgetSwitcher_Lab;  // Offset: 616 Size: 8
	struct FText GoCount2ndText;  // Offset: 624 Size: 24
	struct FText GoCountFinalText;  // Offset: 648 Size: 24
	struct UFMODEvent* LapCountSoundAsset;  // Offset: 672 Size: 8
	struct UFMODEvent* LapFinalSoundAsset;  // Offset: 680 Size: 8



 // Functions 
 public:
	void SetMaxLapCount(int32_t MaxCount); // Function KartDrift.LapCompletedWidget.SetMaxLapCount
	void SetCurrentLapCount(int32_t LapCount); // Function KartDrift.LapCompletedWidget.SetCurrentLapCount
}; 
 
 


//Class KartDrift.CustomGameLogicComponent Size 384
// Inherited 224 bytes 
class UCustomGameLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[160];  // Offset: 224 Size: 160



 // Functions 
 public:
	void OnUpdateCustomGame(); // Function KartDrift.CustomGameLogicComponent.OnUpdateCustomGame
	void OnInviteBannedUser(); // Function KartDrift.CustomGameLogicComponent.OnInviteBannedUser
}; 
 
 


//Class KartDrift.TrackDefEntryObject Size 392
// Inherited 40 bytes 
class UTrackDefEntryObject : public UObject
{

 public: 
	struct FKtClientTrackDef TrackDef;  // Offset: 40 Size: 352



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomHUDData Size 72
// Inherited 40 bytes 
class UCustomHUDData : public UObject
{

 public: 
	struct TArray<struct FHUDWidgetCustomData> WidgetCustomDataList;  // Offset: 40 Size: 16
	struct FVector2D DeviceResolution;  // Offset: 56 Size: 8
	enum class EPresetType PresetType;  // Offset: 64 Size: 4
	enum class ECustomHUDDataSlotIndex SlotIndex;  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultDetailTabWidget Size 736
// Inherited 608 bytes 
class UMajorResultDetailTabWidget : public UUserWidget
{

 public: 
	struct UDetailLevelProgressWidget* V_PlayerLevelProgress;  // Offset: 608 Size: 8
	struct UDetailLevelProgressWidget* V_KartLevelProgress;  // Offset: 616 Size: 8
	struct UDetailLevelProgressWidget* V_GrandPrixProgress;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* V_ModeInfoSwitcher;  // Offset: 632 Size: 8
	struct UKdTextBlock* V_LapTime;  // Offset: 640 Size: 8
	struct UKdTextBlock* V_Rank;  // Offset: 648 Size: 8
	struct UKdTextBlock* V_Overtake;  // Offset: 656 Size: 8
	struct UKdTextBlock* V_Crash;  // Offset: 664 Size: 8
	struct UKdTextBlock* V_GetItem;  // Offset: 672 Size: 8
	struct UKdTextBlock* V_AttackSuccess;  // Offset: 680 Size: 8
	struct UKdTextBlock* V_DefenceSuccess;  // Offset: 688 Size: 8
	struct UKdTextBlock* V_AttackedBy;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_Boost;  // Offset: 704 Size: 8
	struct UKdTextBlock* V_Drift;  // Offset: 712 Size: 8
	struct UKdTextBlock* V_SmallBoost;  // Offset: 720 Size: 8
	struct UKdTextBlock* V_Draft;  // Offset: 728 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomizableWidget Size 1040
// Inherited 608 bytes 
class UCustomizableWidget : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	struct UCanvasPanel* ParentPanel;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcher_Selected;  // Offset: 632 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcher_Drag;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_Selected;  // Offset: 648 Size: 8
	char pad_656[384];  // Offset: 656 Size: 384



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomGameSetting Size 48
// Inherited 48 bytes 
class UCustomGameSetting : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CsRaceGame Size 96
// Inherited 48 bytes 
class UCsRaceGame : public UCustomGameSetting
{

 public: 
	struct FString Track;  // Offset: 48 Size: 16
	enum class ERaceType raceType;  // Offset: 64 Size: 1
	char pad_65[3];  // Offset: 65 Size: 3
	int32_t teamMemberCount;  // Offset: 68 Size: 4
	int32_t teamCount;  // Offset: 72 Size: 4
	int32_t Lap;  // Offset: 76 Size: 4
	struct FString levelOption;  // Offset: 80 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSlotComponent Size 320
// Inherited 176 bytes 
class UItemSlotComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96
	struct TArray<struct AItem*> AuthItems;  // Offset: 272 Size: 16
	struct TArray<struct FItemSlot> Items;  // Offset: 288 Size: 16
	char pad_304[16];  // Offset: 304 Size: 16



 // Functions 
 public:
	void Multicast_UseSlotChanger(int32_t InSlotChangerCount); // Function KartDrift.ItemSlotComponent.Multicast_UseSlotChanger
	void Multicast_UseItem(int32_t Index); // Function KartDrift.ItemSlotComponent.Multicast_UseItem
	void Multicast_SpawnItem(struct AItem* NewItem, enum class EItemType ItemType, int32_t Index, int32_t ItemSequence); // Function KartDrift.ItemSlotComponent.Multicast_SpawnItem
	void Multicast_ResetItem(); // Function KartDrift.ItemSlotComponent.Multicast_ResetItem
	void Multicast_ChangeItemUsable(bool Value); // Function KartDrift.ItemSlotComponent.Multicast_ChangeItemUsable
}; 
 
 


//Class KartDrift.PqCreateCustomGame Size 72
// Inherited 56 bytes 
class UPqCreateCustomGame : public UPqPacket
{

 public: 
	struct UObject* setting;  // Offset: 56 Size: 8
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool observerMode : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPromoteCustomGameMaster Size 72
// Inherited 56 bytes 
class UPqPromoteCustomGameMaster : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackRecorderStart Size 72
// Inherited 72 bytes 
class UTimeAttackRecorderStart : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSwapCustomGameMemberSlot Size 64
// Inherited 56 bytes 
class UPqSwapCustomGameMemberSlot : public UPqPacket
{

 public: 
	int32_t slot1;  // Offset: 56 Size: 4
	int32_t slot2;  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqKickCustomGameMember Size 64
// Inherited 56 bytes 
class UPqKickCustomGameMember : public UPqPacket
{

 public: 
	int32_t Slot;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorGameLoadingWidget Size 976
// Inherited 672 bytes 
class UMajorGameLoadingWidget : public UGameTipLoadingWidget
{

 public: 
	struct UWidgetSwitcher* Switcher_Top;  // Offset: 672 Size: 8
	struct ULoadingGameInformationWidget* LoadingGameInformation;  // Offset: 680 Size: 8
	struct ULoadingAdvertisingWidget* LoadingAdvertising;  // Offset: 688 Size: 8
	struct UOverlay* Overlay_Bottom;  // Offset: 696 Size: 8
	struct UHorizontalBox* HB_Tips;  // Offset: 704 Size: 8
	struct UProgressBar* LoadingProgressBar;  // Offset: 712 Size: 8
	struct UProgressBar* LoadingProgressBarRightDeco;  // Offset: 720 Size: 8
	struct USpacer* LeftIndentSpace;  // Offset: 728 Size: 8
	struct USpacer* RightIndentSpace;  // Offset: 736 Size: 8
	struct UUserWidget* CrossPlayToast;  // Offset: 744 Size: 8
	struct ULoadingPresetWidget* PresetWidget;  // Offset: 752 Size: 8
	enum class ERaceMode GameType;  // Offset: 760 Size: 1
	char pad_761[7];  // Offset: 761 Size: 7
	struct TMap<enum class ERaceMode, ULoadingPresetWidget*> PlayersWidgetContainer;  // Offset: 768 Size: 80
	char pad_848[128];  // Offset: 848 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LobbyLogicComponent Size 1328
// Inherited 224 bytes 
class ULobbyLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[24];  // Offset: 224 Size: 24
	struct TArray<struct UKeyIconWidget*> KeyIconBlackList;  // Offset: 248 Size: 16
	char pad_264[992];  // Offset: 264 Size: 992
	struct UModeSelectSaveGame* ModeSelectSaveGame;  // Offset: 1256 Size: 8
	char pad_1264[56];  // Offset: 1264 Size: 56
	struct ULicenseNoticeSaveGame* LicenseNoticeSaveGame;  // Offset: 1320 Size: 8



 // Functions 
 public:
	void UpdateEventAlarmState(); // Function KartDrift.LobbyLogicComponent.UpdateEventAlarmState
	void UpdateCommunityAlarmState(); // Function KartDrift.LobbyLogicComponent.UpdateCommunityAlarmState
	void UpdateBlockListUserInfo(); // Function KartDrift.LobbyLogicComponent.UpdateBlockListUserInfo
	void SetLucci(int32_t LucciCount); // Function KartDrift.LobbyLogicComponent.SetLucci
	void SetKcoin(int32_t KcoinCount); // Function KartDrift.LobbyLogicComponent.SetKcoin
	void OnUpdateStartButton(); // Function KartDrift.LobbyLogicComponent.OnUpdateStartButton
	void OnUpdateRiderInfo(enum class EUserLevelUpdatedType InType, int32_t InLevel); // Function KartDrift.LobbyLogicComponent.OnUpdateRiderInfo
	void OnUpdateRider(); // Function KartDrift.LobbyLogicComponent.OnUpdateRider
	void OnUpdatePartyPawn(); // Function KartDrift.LobbyLogicComponent.OnUpdatePartyPawn
	void OnUpdatePartyMember(enum class EPartyChageState ChangeState); // Function KartDrift.LobbyLogicComponent.OnUpdatePartyMember
	void OnUpdateMatchWaitState(); // Function KartDrift.LobbyLogicComponent.OnUpdateMatchWaitState
	void OnUpdateLobbyPawnNameTag(); // Function KartDrift.LobbyLogicComponent.OnUpdateLobbyPawnNameTag
	void OnUpdateLobbyPawn(bool bEquipment); // Function KartDrift.LobbyLogicComponent.OnUpdateLobbyPawn
	void OnUpdateGrandPrixFinalResult(); // Function KartDrift.LobbyLogicComponent.OnUpdateGrandPrixFinalResult
	void OnUpdatedPartyJoinRequest(); // Function KartDrift.LobbyLogicComponent.OnUpdatedPartyJoinRequest
	void OnUpdatedPartyInviteStatus(bool bRefused); // Function KartDrift.LobbyLogicComponent.OnUpdatedPartyInviteStatus
	void OnUpdateCompletedAchievement(); // Function KartDrift.LobbyLogicComponent.OnUpdateCompletedAchievement
	void OnUpdateButtonEnableState(); // Function KartDrift.LobbyLogicComponent.OnUpdateButtonEnableState
	void OnUpdateBeginnerBalloon(); // Function KartDrift.LobbyLogicComponent.OnUpdateBeginnerBalloon
	void OnStartMatch(struct TArray<enum class ERaceMode> GameType); // Function KartDrift.LobbyLogicComponent.OnStartMatch
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.LobbyLogicComponent.OnSeasonUpdated
	void OnPlayForceFeedbackEffect(); // Function KartDrift.LobbyLogicComponent.OnPlayForceFeedbackEffect
	void OnMissionStateChanged(); // Function KartDrift.LobbyLogicComponent.OnMissionStateChanged
	void OnMatchingMakedAndWaitForServer(); // Function KartDrift.LobbyLogicComponent.OnMatchingMakedAndWaitForServer
	void OnMatchingCompleted(); // Function KartDrift.LobbyLogicComponent.OnMatchingCompleted
	void OnMatchingCanceled(); // Function KartDrift.LobbyLogicComponent.OnMatchingCanceled
	void OnLoginEventReceived(); // Function KartDrift.LobbyLogicComponent.OnLoginEventReceived
	void OnEmoticonReceived(struct FString accountId, enum class EEmoticonType emoticonType, struct FString EmoticonItemId, bool bHasEmotion); // Function KartDrift.LobbyLogicComponent.OnEmoticonReceived
	void OnAttendanceEventReceived(); // Function KartDrift.LobbyLogicComponent.OnAttendanceEventReceived
}; 
 
 


//Class KartDrift.PqAddCustomGameAiMember Size 64
// Inherited 56 bytes 
class UPqAddCustomGameAiMember : public UPqPacket
{

 public: 
	int32_t Slot;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcInviteCustomGame Size 176
// Inherited 48 bytes 
class UPcInviteCustomGame : public UPcPacket
{

 public: 
	struct FKtAccountProfile Inviter;  // Offset: 48 Size: 96
	struct FString InviterAccountId;  // Offset: 144 Size: 16
	struct FString SessionId;  // Offset: 160 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCustomGameMessage Size 72
// Inherited 56 bytes 
class UPqCustomGameMessage : public UPqPacket
{

 public: 
	struct FString Message;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeSelectTravelData Size 64
// Inherited 48 bytes 
class UModeSelectTravelData : public UGameInstanceSubsystem
{

 public: 
	char pad_48[16];  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqPlayCustomGame Size 64
// Inherited 56 bytes 
class UPqPlayCustomGame : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool hostMode : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SceneCaptureActor Size 560
// Inherited 544 bytes 
class ASceneCaptureActor : public AActor
{

 public: 
	struct UTextureRenderTarget2D* RenderTarget;  // Offset: 544 Size: 8
	struct USceneCaptureComponent2D* SceneCaptureComponent;  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LODPerformanceTestWidget Size 800
// Inherited 608 bytes 
class ULODPerformanceTestWidget : public UUserWidget
{

 public: 
	struct TMap<struct USkeletalMesh*, struct UCharacterMontageAsset*> CharacterMontageMap;  // Offset: 608 Size: 80
	struct UComboBoxStringExpand* AnimComboBox;  // Offset: 688 Size: 8
	struct TArray<struct ASkeletalMeshActor*> SkeletalMeshActorList;  // Offset: 696 Size: 16
	char pad_712_1 : 7;  // Offset: 712 Size: 1
	bool bPlayAnimation : 1;  // Offset: 712 Size: 1
	enum class ECharacterMontage SelectedMontage;  // Offset: 713 Size: 1
	char pad_714[6];  // Offset: 714 Size: 6
	struct TMap<struct FString, enum class ECharacterMontage> MontageListMap;  // Offset: 720 Size: 80



 // Functions 
 public:
	void SetLODSkeletalMesh(int32_t LODIndex); // Function KartDrift.LODPerformanceTestWidget.SetLODSkeletalMesh
	void OnAnimationSelectionChanged(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.LODPerformanceTestWidget.OnAnimationSelectionChanged
	int32_t GetNumVertices(int32_t LODIndex); // Function KartDrift.LODPerformanceTestWidget.GetNumVertices
	int32_t GetNumTriangles(int32_t LODIndex); // Function KartDrift.LODPerformanceTestWidget.GetNumTriangles
}; 
 
 


//Class KartDrift.PcCustomGamePrepareSession Size 96
// Inherited 48 bytes 
class UPcCustomGamePrepareSession : public UPcPacket
{

 public: 
	struct FCsSessionPreparationInfo Info;  // Offset: 48 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqChangeCustomGameSetting Size 64
// Inherited 56 bytes 
class UPqChangeCustomGameSetting : public UPqPacket
{

 public: 
	struct UObject* setting;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftTutorialComponent Size 696
// Inherited 176 bytes 
class ULicenseDriftTutorialComponent : public UActorComponent
{

 public: 
	struct ULicenseDriftTutorialData* Data;  // Offset: 176 Size: 8
	struct APlayerController* PlayerController;  // Offset: 184 Size: 8
	struct AKdPawn* Pawn;  // Offset: 192 Size: 8
	struct UKartMovementComponent* Movement;  // Offset: 200 Size: 8
	struct ULicenseDriftMissionWidget* MissionWidget;  // Offset: 208 Size: 8
	struct ULicenseStartTitleWidget* TitleWidget;  // Offset: 216 Size: 8
	struct ALicenseNextChapterZone* NextChapterZone;  // Offset: 224 Size: 8
	struct TSoftObjectPtr<UCurveFloat> TeleportStartWeightCurve;  // Offset: 232 Size: 40
	struct TSoftObjectPtr<UCurveFloat> TeleportStartCycleCurve;  // Offset: 272 Size: 40
	struct TSoftObjectPtr<UCurveFloat> TeleportEndWeightCurve;  // Offset: 312 Size: 40
	struct TSoftObjectPtr<UCurveFloat> TeleportEndCycleCurve;  // Offset: 352 Size: 40
	struct TSoftObjectPtr<UParticleSystem> TeleportParticleClass;  // Offset: 392 Size: 40
	struct UParticleSystemComponent* TeleportParticle;  // Offset: 432 Size: 8
	struct UFMODEvent* TeleportInSound;  // Offset: 440 Size: 8
	struct UFMODEvent* TeleportOutSound;  // Offset: 448 Size: 8
	struct UFMODEvent* WarpZoneSound;  // Offset: 456 Size: 8
	char pad_464[232];  // Offset: 464 Size: 232



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcCustomGameCheckAlive Size 56
// Inherited 48 bytes 
class UPcCustomGameCheckAlive : public UPcPacket
{

 public: 
	int32_t timeLimitSec;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MinimapWidget Size 1040
// Inherited 608 bytes 
class UMinimapWidget : public UUserWidget
{

 public: 
	struct UImage* MapImg;  // Offset: 608 Size: 8
	struct UImage* ArrowImg;  // Offset: 616 Size: 8
	struct UPanelWidget* DotPanelWidget;  // Offset: 624 Size: 8
	struct UImage* BirdViewMinimapImg;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_Intro;  // Offset: 640 Size: 8
	struct AMinimapActor* Minimap;  // Offset: 648 Size: 8
	struct UCameraComponent* KdPawnCameraComponent;  // Offset: 656 Size: 8
	struct TArray<struct TSoftObjectPtr<UTexture2D>> PlayerArrows;  // Offset: 664 Size: 16
	struct TArray<struct AKdPawn*> PawnList;  // Offset: 680 Size: 16
	int32_t InitialUserCount;  // Offset: 696 Size: 4
	char pad_700[4];  // Offset: 700 Size: 4
	struct APawn* PossessedPawn;  // Offset: 704 Size: 8
	int32_t PossessedPawnTeamIndex;  // Offset: 712 Size: 4
	char pad_716[132];  // Offset: 716 Size: 132
	struct TArray<struct FName> DotIdxMapNameList;  // Offset: 848 Size: 16
	struct TArray<struct FName> DotPosMapNameList;  // Offset: 864 Size: 16
	struct TMap<struct FName, float> DotIdxMap;  // Offset: 880 Size: 80
	struct TMap<struct FName, struct FVector> DotPosMap;  // Offset: 960 Size: 80



 // Functions 
 public:
	void Show(); // Function KartDrift.MinimapWidget.Show
	void ManagedTick(float inDeltaTime); // Function KartDrift.MinimapWidget.ManagedTick
	void Hide(); // Function KartDrift.MinimapWidget.Hide
}; 
 
 


//Class KartDrift.LicenseSelectMissionClearRewardInfo_ItemWidget Size 624
// Inherited 608 bytes 
class ULicenseSelectMissionClearRewardInfo_ItemWidget : public UUserWidget
{

 public: 
	int32_t Inst_StarCount;  // Offset: 608 Size: 4
	char pad_612[4];  // Offset: 612 Size: 4
	struct UWidgetSwitcher* V_WS_StarCount;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StrokeEscapeWidget Size 720
// Inherited 608 bytes 
class UStrokeEscapeWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* V_PlatformSwitcher;  // Offset: 608 Size: 8
	struct UKdButtonImage* V_XboxKeyImage;  // Offset: 616 Size: 8
	struct UKdButtonImage* V_PSKeyImage;  // Offset: 624 Size: 8
	struct UKeyTextureMap2* Key_Keyboard;  // Offset: 632 Size: 8
	struct UKeyTextureMap2* Key_XBOX;  // Offset: 640 Size: 8
	struct UKeyTextureMap2* Key_DualShock;  // Offset: 648 Size: 8
	struct UWidgetSwitcher* V_LeftSwitcher;  // Offset: 656 Size: 8
	struct UKdButtonImage* V_LeftKeyBG;  // Offset: 664 Size: 8
	struct UKdTextBlock* V_LeftKeyText;  // Offset: 672 Size: 8
	struct UKdButtonImage* V_LeftKeyImage;  // Offset: 680 Size: 8
	struct UWidgetSwitcher* V_RightSwitcher;  // Offset: 688 Size: 8
	struct UKdButtonImage* V_RightKeyBG;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_RightKeyText;  // Offset: 704 Size: 8
	struct UKdButtonImage* V_RightKeyImage;  // Offset: 712 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediNxLogInMatchEnd Size 248
// Inherited 152 bytes 
class UDqDediNxLogInMatchEnd : public UDqDediNxLogUser
{

 public: 
	struct FString MatchID;  // Offset: 152 Size: 16
	struct FString matchtype;  // Offset: 168 Size: 16
	int32_t record;  // Offset: 184 Size: 4
	int32_t SequenceID;  // Offset: 188 Size: 4
	int32_t userlevel;  // Offset: 192 Size: 4
	int32_t userlevel2;  // Offset: 196 Size: 4
	char pad_200_1 : 7;  // Offset: 200 Size: 1
	bool usePremiumPass : 1;  // Offset: 200 Size: 1
	char pad_201[7];  // Offset: 201 Size: 7
	struct FString usernickname;  // Offset: 208 Size: 16
	struct FString grandPrixId;  // Offset: 224 Size: 16
	enum class EKtItemGrade KartGrade;  // Offset: 240 Size: 1
	char pad_241[7];  // Offset: 241 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultProgressWidget Size 648
// Inherited 608 bytes 
class UMajorResultProgressWidget : public UUserWidget
{

 public: 
	struct UImage* Image_PrevProgressGauge;  // Offset: 608 Size: 8
	struct UImage* Image_GainedProgressGauge;  // Offset: 616 Size: 8
	struct UImage* Image_CompleteProgressGauge;  // Offset: 624 Size: 8
	struct UTextBlock* Text_CurrentValue;  // Offset: 632 Size: 8
	struct UTextBlock* Text_MaxValue;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCustomGameAlive Size 64
// Inherited 56 bytes 
class UPqCustomGameAlive : public UPqPacket
{

 public: 
	int32_t check;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HostGameCreated Size 80
// Inherited 48 bytes 
class UHostGameCreated : public UKxObject
{

 public: 
	struct FString hostUrl;  // Offset: 48 Size: 16
	struct FString hostPlayerId;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultWidgetComponentTestPC Size 1408
// Inherited 1408 bytes 
class AMajorResultWidgetComponentTestPC : public APlayerController
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HostGameCloseRace Size 48
// Inherited 48 bytes 
class UHostGameCloseRace : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopChargeUrlKrPc Size 88
// Inherited 72 bytes 
class UPrShopChargeUrlKrPc : public UPrPacket
{

 public: 
	struct FString URL;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingGameInformationWidget Size 832
// Inherited 608 bytes 
class ULoadingGameInformationWidget : public UUserWidget
{

 public: 
	struct UTextBlock* TextBlock_GameType;  // Offset: 608 Size: 8
	struct UTextBlock* TextBlock_ModeType;  // Offset: 616 Size: 8
	struct UTextBlock* TextBlock_TeamType;  // Offset: 624 Size: 8
	struct UTextBlock* TextBlock_TrackName;  // Offset: 632 Size: 8
	struct UImage* Image_Track;  // Offset: 640 Size: 8
	struct UTrackDifficultWidget* TrackDifficult;  // Offset: 648 Size: 8
	struct UModeVictoryGuideWidget* BP_CommonPopupGuide;  // Offset: 656 Size: 8
	enum class ERaceMode raceMode;  // Offset: 664 Size: 1
	char pad_665[7];  // Offset: 665 Size: 7
	struct TMap<enum class ERaceMode, struct FText> RaceModeTextContainer;  // Offset: 672 Size: 80
	struct TMap<enum class ERaceMode, struct FText> RaceTypeTextContainer;  // Offset: 752 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCustomGameSetGameData Size 184
// Inherited 56 bytes 
class UPqCustomGameSetGameData : public UPqPacket
{

 public: 
	struct FCsGameData gameData;  // Offset: 56 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdTextBlock Size 1928
// Inherited 1656 bytes 
class UKdTextBlock : public URichTextBlock
{

 public: 
	char pad_1656[8];  // Offset: 1656 Size: 8
	struct FButtonStyleTag TextStyleTag;  // Offset: 1664 Size: 56
	struct UDataTable* TextSetTable;  // Offset: 1720 Size: 8
	struct FTextScrollInfo TextScrollInfo;  // Offset: 1728 Size: 24
	struct FAutoFillInsideInfo AutoFillInsideInfo;  // Offset: 1752 Size: 24
	struct TMap<struct FName, struct FTextBlockStyle> TextBlockStyleMap;  // Offset: 1776 Size: 80
	struct FString StringTableAtlasKey;  // Offset: 1856 Size: 16
	char pad_1872[56];  // Offset: 1872 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftMissionListEntryData Size 56
// Inherited 40 bytes 
class ULicenseDriftMissionListEntryData : public UObject
{

 public: 
	struct FLicenseDriftTutorialMission Data;  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DashboardWidget Size 752
// Inherited 608 bytes 
class UDashboardWidget : public UUserWidget
{

 public: 
	char pad_608[40];  // Offset: 608 Size: 40
	struct UKdTextBlock* V_ModeText;  // Offset: 648 Size: 8
	struct UKdTextBlock* V_ModeTextWithIcon;  // Offset: 656 Size: 8
	struct UWidgetSwitcher* V_TitleWS;  // Offset: 664 Size: 8
	struct UWidgetSwitcher* V_TitleBackWS;  // Offset: 672 Size: 8
	struct UWidgetSwitcher* V_ModeIconWS;  // Offset: 680 Size: 8
	struct UImage* V_Thumbnail;  // Offset: 688 Size: 8
	struct UImage* V_TrackMapImg;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_TrackText;  // Offset: 704 Size: 8
	struct UHorizontalBox* V_DifficultStarPanel;  // Offset: 712 Size: 8
	struct UKdTextBlock* V_ModeGuideText;  // Offset: 720 Size: 8
	struct UWidgetAnimation* V_IntrotAnim;  // Offset: 728 Size: 8
	struct UWidgetAnimation* V_IntrotAnim_Guide;  // Offset: 736 Size: 8
	struct UWidgetAnimation* V_ExitAnim;  // Offset: 744 Size: 8



 // Functions 
 public:
	void OnExitFinished(); // Function KartDrift.DashboardWidget.OnExitFinished
}; 
 
 


//Class KartDrift.PersonalResultWidget Size 40
// Inherited 40 bytes 
class UPersonalResultWidget : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DataAssetManager Size 128
// Inherited 48 bytes 
class UDataAssetManager : public UEngineSubsystem
{

 public: 
	struct TMap<enum class EDataAssetType, struct UDataAsset*> DataAssetMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbyGameSession Size 568
// Inherited 568 bytes 
class ADedicatedLobbyGameSession : public AGameSession
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_EventChallengePageWidget Size 744
// Inherited 744 bytes 
class UM_EventChallengePageWidget : public UEventChallengePageWidget
{

 public: 



 // Functions 
 public:
	void OnGoToMissionClicked(int32_t IndexInList); // Function KartDrift.M_EventChallengePageWidget.OnGoToMissionClicked
}; 
 
 


//Class KartDrift.DedicatedLobbyGameState Size 728
// Inherited 624 bytes 
class ADedicatedLobbyGameState : public AGameStateBase
{

 public: 
	char pad_624[88];  // Offset: 624 Size: 88
	struct UKtRaceSettings* RaceSettings;  // Offset: 712 Size: 8
	struct UKtRaceDetails* RaceDetails;  // Offset: 720 Size: 8



 // Functions 
 public:
	void Multicast_RaceDesc(struct FString InTrackAlias, enum class ERaceMode InRaceMode); // Function KartDrift.DedicatedLobbyGameState.Multicast_RaceDesc
	void Multicast_AddLog(struct FText InLog); // Function KartDrift.DedicatedLobbyGameState.Multicast_AddLog
	void Multicast_AddChat(struct FText InChat); // Function KartDrift.DedicatedLobbyGameState.Multicast_AddChat
}; 
 
 


//Class KartDrift.DedicatedLobbyPlayerState Size 1112
// Inherited 800 bytes 
class ADedicatedLobbyPlayerState : public APlayerState
{

 public: 
	char pad_800[16];  // Offset: 800 Size: 16
	struct FDedicatedLobbyPlayerDesc PlayerDesc;  // Offset: 816 Size: 288
	char pad_1104_1 : 7;  // Offset: 1104 Size: 1
	bool bReceivedRaceDesc : 1;  // Offset: 1104 Size: 1
	char pad_1105_1 : 7;  // Offset: 1105 Size: 1
	bool bRoomLeader : 1;  // Offset: 1105 Size: 1
	char pad_1106[2];  // Offset: 1106 Size: 2
	int32_t Index;  // Offset: 1108 Size: 4



 // Functions 
 public:
	void Server_SendClientDesc(struct FDedicatedLobbyPlayerDesc InDesc); // Function KartDrift.DedicatedLobbyPlayerState.Server_SendClientDesc
	void Server_RequestJourney(struct FString InTrackAlias, enum class ERaceMode InRaceMode, struct FString InGameMode, struct FString InTrackPackageName, struct FString InParams); // Function KartDrift.DedicatedLobbyPlayerState.Server_RequestJourney
	void Server_NotifyReceivingRaceData(); // Function KartDrift.DedicatedLobbyPlayerState.Server_NotifyReceivingRaceData
	void OnRep_PlayerDesc(); // Function KartDrift.DedicatedLobbyPlayerState.OnRep_PlayerDesc
}; 
 
 


//Class KartDrift.KtSessionRequestBody Size 136
// Inherited 48 bytes 
class UKtSessionRequestBody : public UKxObject
{

 public: 
	struct FString gameId;  // Offset: 48 Size: 16
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool terminateServerAfterGame : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7
	struct FString logUploadUrl;  // Offset: 72 Size: 16
	struct FString gameLogUploadUrl;  // Offset: 88 Size: 16
	struct FString devConfigParam;  // Offset: 104 Size: 16
	struct FString additionalOptions;  // Offset: 120 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbySubsystem Size 160
// Inherited 48 bytes 
class UDedicatedLobbySubsystem : public UGameInstanceSubsystem
{

 public: 
	char pad_48[96];  // Offset: 48 Size: 96
	struct UKtRaceSettings* RaceSettings;  // Offset: 144 Size: 8
	struct UKtRaceDetails* RaceDetails;  // Offset: 152 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FreeRaceConnectRuleComponent Size 312
// Inherited 200 bytes 
class UFreeRaceConnectRuleComponent : public UBaseConnectRuleComponent
{

 public: 
	struct TArray<struct APlayerStart*> StartSpotContainer;  // Offset: 200 Size: 16
	struct TMap<struct FString, struct APawn*> PawnContainer;  // Offset: 216 Size: 80
	char pad_296[16];  // Offset: 296 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DedicatedLobbyWidget Size 736
// Inherited 608 bytes 
class UDedicatedLobbyWidget : public UUserWidget
{

 public: 
	char pad_608[48];  // Offset: 608 Size: 48
	struct UControlPawnEquipWidget* ControlPawnWidget;  // Offset: 656 Size: 8
	struct UControlTrackWidget* ControlTrackWidget;  // Offset: 664 Size: 8
	struct UTextBlock* Text_PlayerNum;  // Offset: 672 Size: 8
	struct UScrollBox* ScrollBox_Log;  // Offset: 680 Size: 8
	struct UScrollBox* ScrollBox_Chat;  // Offset: 688 Size: 8
	struct UButton* Button_Journey;  // Offset: 696 Size: 8
	struct UButton* Button_ChangeItem;  // Offset: 704 Size: 8
	struct UEditableText* EditableText_Chat;  // Offset: 712 Size: 8
	struct UOverlay* Overlay_Journey;  // Offset: 720 Size: 8
	char pad_728[8];  // Offset: 728 Size: 8



 // Functions 
 public:
	void OnEditableTextCommitted_Enter(struct FText& InText, enum class ETextCommit InCommitMethod); // Function KartDrift.DedicatedLobbyWidget.OnEditableTextCommitted_Enter
	void OnButtonReleased_Journey(); // Function KartDrift.DedicatedLobbyWidget.OnButtonReleased_Journey
	void OnButtonReleased_ChangeItem(); // Function KartDrift.DedicatedLobbyWidget.OnButtonReleased_ChangeItem
	void AddLog(struct FText InText); // Function KartDrift.DedicatedLobbyWidget.AddLog
}; 
 
 


//Class KartDrift.DelegateBarrierMany Size 136
// Inherited 40 bytes 
class UDelegateBarrierMany : public UObject
{

 public: 
	struct TMap<int32_t, struct UDelegateBarrier*> PendingBarriers;  // Offset: 40 Size: 80
	struct UDelegateBarrier* BarrierUnderConstruction;  // Offset: 120 Size: 8
	char pad_128[8];  // Offset: 128 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DetailViewPopup Size 936
// Inherited 816 bytes 
class UDetailViewPopup : public UDialogTemplate
{

 public: 
	char pad_816[88];  // Offset: 816 Size: 88
	float PitchMin;  // Offset: 904 Size: 4
	float PitchMax;  // Offset: 908 Size: 4
	float YawMin;  // Offset: 912 Size: 4
	float YawMax;  // Offset: 916 Size: 4
	float RollMin;  // Offset: 920 Size: 4
	float RollMax;  // Offset: 924 Size: 4
	float BaseTurnRate;  // Offset: 928 Size: 4
	float BaseLookUpRate;  // Offset: 932 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddLapWidget Size 112
// Inherited 72 bytes 
class UAddLapWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LapWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DevCheatWidget Size 728
// Inherited 608 bytes 
class UDevCheatWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UControlPawnEquipWidget* ControlPawnEquipWidget;  // Offset: 616 Size: 8
	struct UControlPawnFXWidget* ControlPawnFXWidget;  // Offset: 624 Size: 8
	struct UControlDirectingWidget* ControlDirectingWidget;  // Offset: 632 Size: 8
	struct UControlTrackWidget* ControlTrackWidget;  // Offset: 640 Size: 8
	struct UButton* Button_Travel;  // Offset: 648 Size: 8
	struct UButton* Button_Travel2;  // Offset: 656 Size: 8
	struct UButton* Button_SfxOn;  // Offset: 664 Size: 8
	struct UButton* Button_SfxOff;  // Offset: 672 Size: 8
	struct UButton* Button_BgmOn;  // Offset: 680 Size: 8
	struct UButton* Button_BgmOff;  // Offset: 688 Size: 8
	struct UButton* Button_KartOn;  // Offset: 696 Size: 8
	struct UButton* Button_KartOff;  // Offset: 704 Size: 8
	struct UButton* Button_NXBuildCaptureOn;  // Offset: 712 Size: 8
	struct UButton* Button_NXBuildCaptureOff;  // Offset: 720 Size: 8



 // Functions 
 public:
	void OnComboBoxSelectionChanged_Wheel(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Wheel
	void OnComboBoxSelectionChanged_SkidMark(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_SkidMark
	void OnComboBoxSelectionChanged_Plate(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Plate
	void OnComboBoxSelectionChanged_Parts(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Parts
	void OnComboBoxSelectionChanged_Costume(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Costume
	void OnComboBoxSelectionChanged_Booster(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Booster
	void OnComboBoxSelectionChanged_Balloon(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.DevCheatWidget.OnComboBoxSelectionChanged_Balloon
	void OnButtonReleased_Travel(); // Function KartDrift.DevCheatWidget.OnButtonReleased_Travel
	void OnButtonReleased_SfxOn(); // Function KartDrift.DevCheatWidget.OnButtonReleased_SfxOn
	void OnButtonReleased_SfxOff(); // Function KartDrift.DevCheatWidget.OnButtonReleased_SfxOff
	void OnButtonReleased_ServerTravel(); // Function KartDrift.DevCheatWidget.OnButtonReleased_ServerTravel
	void OnButtonReleased_Motion(char InMontage); // Function KartDrift.DevCheatWidget.OnButtonReleased_Motion
	void OnButtonReleased_MajorPodiumSequence(char InSequenceType); // Function KartDrift.DevCheatWidget.OnButtonReleased_MajorPodiumSequence
	void OnButtonReleased_MajorIntroSequence(char InSequenceType); // Function KartDrift.DevCheatWidget.OnButtonReleased_MajorIntroSequence
	void OnButtonReleased_MajorFinishSequence(char InSequenceType); // Function KartDrift.DevCheatWidget.OnButtonReleased_MajorFinishSequence
	void OnButtonReleased_KartOn(); // Function KartDrift.DevCheatWidget.OnButtonReleased_KartOn
	void OnButtonReleased_KartOff(); // Function KartDrift.DevCheatWidget.OnButtonReleased_KartOff
	void OnButtonReleased_ItemAffectBy(char InItemType); // Function KartDrift.DevCheatWidget.OnButtonReleased_ItemAffectBy
	void OnButtonReleased_BgmOn(); // Function KartDrift.DevCheatWidget.OnButtonReleased_BgmOn
	void OnButtonReleased_BgmOff(); // Function KartDrift.DevCheatWidget.OnButtonReleased_BgmOff
}; 
 
 


//Class KartDrift.AttendanceEventObject Size 72
// Inherited 40 bytes 
class UAttendanceEventObject : public UObject
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DevResolutionWidget Size 720
// Inherited 608 bytes 
class UDevResolutionWidget : public UUserWidget
{

 public: 
	struct UComboBoxStringExpand* V_LaptopComboBox;  // Offset: 608 Size: 8
	struct UComboBoxStringExpand* V_MonitorComboBox;  // Offset: 616 Size: 8
	struct UComboBoxStringExpand* V_PhoneComboBox;  // Offset: 624 Size: 8
	struct UComboBoxStringExpand* V_TabletComboBox;  // Offset: 632 Size: 8
	struct UComboBoxStringExpand* V_TelevisionComboBox;  // Offset: 640 Size: 8
	struct UCheckBox* V_InvertCheckBox;  // Offset: 648 Size: 8
	struct UEditableTextBox* V_WidthText;  // Offset: 656 Size: 8
	struct UEditableTextBox* V_HeightText;  // Offset: 664 Size: 8
	struct UButton* V_ApplyButton;  // Offset: 672 Size: 8
	struct UButton* V_MinimizeButton;  // Offset: 680 Size: 8
	struct UButton* V_CloseButton;  // Offset: 688 Size: 8
	struct UImage* V_Background;  // Offset: 696 Size: 8
	struct UVerticalBox* V_MainVerticalBox;  // Offset: 704 Size: 8
	char pad_712[8];  // Offset: 712 Size: 8



 // Functions 
 public:
	void ResolutionSelected(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function KartDrift.DevResolutionWidget.ResolutionSelected
	void MinimizeButtonClicked(); // Function KartDrift.DevResolutionWidget.MinimizeButtonClicked
	void CloseButtonClicked(); // Function KartDrift.DevResolutionWidget.CloseButtonClicked
	void ApplyButtonClicked(); // Function KartDrift.DevResolutionWidget.ApplyButtonClicked
}; 
 
 


//Class KartDrift.SubDialogTemplate Size 624
// Inherited 608 bytes 
class USubDialogTemplate : public UUserWidget
{

 public: 
	struct UWidgetAnimation* Anim_Open;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Close;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DragForceBuff Size 80
// Inherited 40 bytes 
class UDragForceBuff : public UKartMovementBuff
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct AActor* InvokingZone;  // Offset: 48 Size: 8
	struct AActor* TargetPawn;  // Offset: 56 Size: 8
	char pad_64[16];  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriftGaugeInterface Size 40
// Inherited 40 bytes 
class UDriftGaugeInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WidgetAnimationGraph Size 112
// Inherited 40 bytes 
class UWidgetAnimationGraph : public UObject
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72



 // Functions 
 public:
	void ProcessCommand(); // Function KartDrift.WidgetAnimationGraph.ProcessCommand
}; 
 
 


//Class KartDrift.DriftGaugeSingleWidget Size 648
// Inherited 608 bytes 
class UDriftGaugeSingleWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UImage* SingleGaugeImage;  // Offset: 616 Size: 8
	struct UMaterialInstanceDynamic* SingleGaugeMaterial;  // Offset: 624 Size: 8
	char pad_632[16];  // Offset: 632 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemFeedSceneCaptureActor Size 560
// Inherited 560 bytes 
class AItemFeedSceneCaptureActor : public ASceneCaptureActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DriveCameraComponent Size 4352
// Inherited 2144 bytes 
class UDriveCameraComponent : public UCameraComponent
{

 public: 
	char pad_2144[16];  // Offset: 2144 Size: 16
	struct UMaterialInstance* BlurMaterialInstance;  // Offset: 2160 Size: 8
	char pad_2168[8];  // Offset: 2168 Size: 8
	struct FPostProcessSettings OriginPostProcessSettings;  // Offset: 2176 Size: 1488
	float BlendTime;  // Offset: 3664 Size: 4
	char pad_3668_1 : 7;  // Offset: 3668 Size: 1
	bool ForceCalcViewTarget : 1;  // Offset: 3668 Size: 1
	char pad_3669[407];  // Offset: 3669 Size: 407
	float NormalFov;  // Offset: 4076 Size: 4
	float NormalFovChangeFactor;  // Offset: 4080 Size: 4
	float BoostFov;  // Offset: 4084 Size: 4
	float BoostFovChangeFactor;  // Offset: 4088 Size: 4
	float MomentBoostFov;  // Offset: 4092 Size: 4
	float MomentBoostFovChangeFactor;  // Offset: 4096 Size: 4
	float ZoneBoostFov;  // Offset: 4100 Size: 4
	float ZoneBoostFovChangeFactor;  // Offset: 4104 Size: 4
	float RailAndBoostFov;  // Offset: 4108 Size: 4
	float RailAndBoostFovChangeFactor;  // Offset: 4112 Size: 4
	float MomentBoostFovSpeedMultiplier;  // Offset: 4116 Size: 4
	float MinCameraPitchRadians;  // Offset: 4120 Size: 4
	float CameraPitchSpeedCoefficient;  // Offset: 4124 Size: 4
	float AdditionalZ;  // Offset: 4128 Size: 4
	float UpDownFactor;  // Offset: 4132 Size: 4
	float ZLagSpeed;  // Offset: 4136 Size: 4
	char pad_4140_1 : 7;  // Offset: 4140 Size: 1
	bool bDebug : 1;  // Offset: 4140 Size: 1
	char pad_4141[3];  // Offset: 4141 Size: 3
	float ArmSpeedForwardCoefficient;  // Offset: 4144 Size: 4
	float ArmSpeedBackwardCoefficient;  // Offset: 4148 Size: 4
	float DistanceCoefficient;  // Offset: 4152 Size: 4
	float MinLength;  // Offset: 4156 Size: 4
	float MaxLength;  // Offset: 4160 Size: 4
	float MinHeight;  // Offset: 4164 Size: 4
	float MaxHeight;  // Offset: 4168 Size: 4
	float HeightCoefficient;  // Offset: 4172 Size: 4
	float CameraLagSpeed;  // Offset: 4176 Size: 4
	float DropFactor;  // Offset: 4180 Size: 4
	float RefreshRate;  // Offset: 4184 Size: 4
	float CameraRotationLagSpeed;  // Offset: 4188 Size: 4
	struct FRotator RotatorForEditorView;  // Offset: 4192 Size: 12
	char pad_4204[132];  // Offset: 4204 Size: 132
	struct AActor* CameraTarget;  // Offset: 4336 Size: 8
	char pad_4344[8];  // Offset: 4344 Size: 8



 // Functions 
 public:
	void EditorView_Yaw(); // Function KartDrift.DriveCameraComponent.EditorView_Yaw
	void DevEnableBlur(); // Function KartDrift.DriveCameraComponent.DevEnableBlur
	void DevDisableBlur(); // Function KartDrift.DriveCameraComponent.DevDisableBlur
	void Dev_Unpossess(); // Function KartDrift.DriveCameraComponent.Dev_Unpossess
	void Dev_ChangeTarget(); // Function KartDrift.DriveCameraComponent.Dev_ChangeTarget
}; 
 
 


//Class KartDrift.DriveVisualizer Size 1168
// Inherited 1136 bytes 
class UDriveVisualizer : public UPrimitiveComponent
{

 public: 
	char pad_1136[32];  // Offset: 1136 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGameSession Size 568
// Inherited 568 bytes 
class AKdGameSession : public AGameSession
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DynamicComponentInterface Size 40
// Inherited 40 bytes 
class UDynamicComponentInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMailReadMarker Size 64
// Inherited 48 bytes 
class UPcMailReadMarker : public UPcPacket
{

 public: 
	struct TArray<struct FString> mailIds;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForceFeedbackCrashLevelDataAsset Size 80
// Inherited 48 bytes 
class UForceFeedbackCrashLevelDataAsset : public UDataAsset
{

 public: 
	struct TArray<float> HitImpulse;  // Offset: 48 Size: 16
	struct TArray<float> HitImpulse_Surface;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TMIRecordPawnEventComponent Size 384
// Inherited 176 bytes 
class UTMIRecordPawnEventComponent : public UActorComponent
{

 public: 
	struct FString OwnerUniqueIdentifier;  // Offset: 176 Size: 16
	struct FReplicatedKartState KartState;  // Offset: 192 Size: 16
	struct UTMIOvertakeEventProducer* OvertakeEventProducer;  // Offset: 208 Size: 8
	char pad_216[168];  // Offset: 216 Size: 168



 // Functions 
 public:
	void ServerSendTMIRaceEventData(struct FTMIRaceEventData InTMIRaceEventData); // Function KartDrift.TMIRecordPawnEventComponent.ServerSendTMIRaceEventData
}; 
 
 


//Class KartDrift.EmoticonLogicComponent Size 264
// Inherited 224 bytes 
class UEmoticonLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[40];  // Offset: 224 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnvironmentPoint Size 544
// Inherited 544 bytes 
class AEnvironmentPoint : public APassableBox
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EventChallengeLogicComponent Size 304
// Inherited 296 bytes 
class UEventChallengeLogicComponent : public UChallengeLogicComponent
{

 public: 
	char pad_296[8];  // Offset: 296 Size: 8



 // Functions 
 public:
	void OnUpdatePartyState(enum class EPartyChageState ChangeState); // Function KartDrift.EventChallengeLogicComponent.OnUpdatePartyState
	void OnUpdatePartyRequestState(); // Function KartDrift.EventChallengeLogicComponent.OnUpdatePartyRequestState
	void OnQuestSetDataUpdated(); // Function KartDrift.EventChallengeLogicComponent.OnQuestSetDataUpdated
}; 
 
 


//Class KartDrift.ShowTimeAttackResult Size 112
// Inherited 72 bytes 
class UShowTimeAttackResult : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> TimeAttackResultWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqDeleteMail Size 72
// Inherited 56 bytes 
class UPqDeleteMail : public UPqPacket
{

 public: 
	struct FString mailId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EventLogicComponent Size 264
// Inherited 224 bytes 
class UEventLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[16];  // Offset: 224 Size: 16
	struct UEventSaveGame* SaveGame;  // Offset: 240 Size: 8
	char pad_248[16];  // Offset: 248 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemFeedWidget Size 664
// Inherited 608 bytes 
class UItemFeedWidget : public UUserWidget
{

 public: 
	struct UImage* V_SceneImage;  // Offset: 608 Size: 8
	struct UOverlay* V_ItemFeedOverlay;  // Offset: 616 Size: 8
	struct UWidgetAnimation* DefaultAppearingAnimation;  // Offset: 624 Size: 8
	struct UWidgetAnimation* DefaultDisappearingAnimation;  // Offset: 632 Size: 8
	char pad_640[24];  // Offset: 640 Size: 24



 // Functions 
 public:
	void OnNewActorAdded(enum class EItemType UsedItemType, int32_t UsedItemId, struct AActor* TargetActor); // Function KartDrift.ItemFeedWidget.OnNewActorAdded
	void OnItemFeed(enum class EItemType UsedItemType, int32_t UsedItemId, struct TSoftObjectPtr<ULevelSequence> FeedMirrorSequence, float FeedMirrorTime, struct FTransform SpawnTransform, struct AActor* TargetActor); // Function KartDrift.ItemFeedWidget.OnItemFeed
	void OnCutoff(enum class EItemType UsedItemType, int32_t UsedItemId); // Function KartDrift.ItemFeedWidget.OnCutoff
}; 
 
 


//Class KartDrift.LicenseSpeedInterface Size 40
// Inherited 40 bytes 
class ULicenseSpeedInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifiedItemSpawn Size 384
// Inherited 104 bytes 
class UNotifiedItemSpawn : public UItemSpawningRule
{

 public: 
	char pad_104[8];  // Offset: 104 Size: 8
	struct TArray<float> Distance;  // Offset: 112 Size: 16
	float DistanceFromCubeSpawnLine;  // Offset: 128 Size: 4
	float DistanceFromItemCube;  // Offset: 132 Size: 4
	float DistanceFromNotifier;  // Offset: 136 Size: 4
	float DistanceFromAttack;  // Offset: 140 Size: 4
	int32_t Index;  // Offset: 144 Size: 4
	char pad_148[4];  // Offset: 148 Size: 4
	struct TArray<enum class EItemType> RandomType;  // Offset: 152 Size: 16
	struct TArray<enum class EItemType> TempRandomType;  // Offset: 168 Size: 16
	char pad_184_1 : 7;  // Offset: 184 Size: 1
	bool bNeedNotify : 1;  // Offset: 184 Size: 1
	char pad_185[7];  // Offset: 185 Size: 7
	struct AActor* Notifier;  // Offset: 192 Size: 8
	struct TArray<enum class EItemType> ItemTypeList;  // Offset: 200 Size: 16
	int32_t CubeCount;  // Offset: 216 Size: 4
	char pad_220[4];  // Offset: 220 Size: 4
	struct TSoftClassPtr<UObject> NotifierClass;  // Offset: 224 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject1;  // Offset: 264 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject2;  // Offset: 304 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject3;  // Offset: 344 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyTextureMap2 Size 128
// Inherited 48 bytes 
class UKeyTextureMap2 : public UDataAsset
{

 public: 
	struct TMap<struct FKey, struct FKeyTexture2> KeyTextureMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EventInfoItemDefEntryObject Size 168
// Inherited 40 bytes 
class UEventInfoItemDefEntryObject : public UObject
{

 public: 
	struct FEventData EventData;  // Offset: 40 Size: 120
	char pad_160[8];  // Offset: 160 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ADTEventObject Size 104
// Inherited 40 bytes 
class UADTEventObject : public UObject
{

 public: 
	char pad_40[64];  // Offset: 40 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FlatReaction Size 624
// Inherited 528 bytes 
class UFlatReaction : public USceneComponent
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> FlatSoundAsset;  // Offset: 528 Size: 40
	struct TSoftObjectPtr<UCurveFloat> ScaleCurveObj;  // Offset: 568 Size: 40
	char pad_608[4];  // Offset: 608 Size: 4
	float ReactionTime;  // Offset: 612 Size: 4
	char pad_616[8];  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FocusInterface Size 40
// Inherited 40 bytes 
class UFocusInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskPSN Size 576
// Inherited 560 bytes 
class UKdServerLoginTaskPSN : public UKdServerLoginTaskOSS
{

 public: 
	char pad_560[16];  // Offset: 560 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FollowTGMoveComponent Size 336
// Inherited 184 bytes 
class UFollowTGMoveComponent : public UKartAIBaseComponent
{

 public: 
	struct UKartMovementComponent* Movement;  // Offset: 184 Size: 8
	struct UItemComponent* ItemComponent;  // Offset: 192 Size: 8
	char pad_200[104];  // Offset: 200 Size: 104
	struct UAIManageComponent* ManageComponent;  // Offset: 304 Size: 8
	int32_t SplineIndex;  // Offset: 312 Size: 4
	char pad_316_1 : 7;  // Offset: 316 Size: 1
	bool bUseSubPath : 1;  // Offset: 316 Size: 1
	char pad_317[3];  // Offset: 317 Size: 3
	float LastPathChangeTime;  // Offset: 320 Size: 4
	float LastKartCrashTime;  // Offset: 324 Size: 4
	char pad_328[8];  // Offset: 328 Size: 8



 // Functions 
 public:
	void OnReset(); // Function KartDrift.FollowTGMoveComponent.OnReset
	void OnCrashKart(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.FollowTGMoveComponent.OnCrashKart
}; 
 
 


//Class KartDrift.PawnStateComponent Size 768
// Inherited 176 bytes 
class UPawnStateComponent : public UActorComponent
{

 public: 
	char pad_176[56];  // Offset: 176 Size: 56
	struct FString UniqueIdentifier;  // Offset: 232 Size: 16
	int32_t SlotNumber;  // Offset: 248 Size: 4
	int32_t TeamIndex;  // Offset: 252 Size: 4
	struct FRacePlayerEquipDesc EquipDesc;  // Offset: 256 Size: 304
	struct FKtAccountProfile Profile;  // Offset: 560 Size: 96
	struct FKdLevelExpProp kartExp;  // Offset: 656 Size: 8
	struct FKdLevelExpProp PlayerExp;  // Offset: 664 Size: 8
	char pad_672_1 : 7;  // Offset: 672 Size: 1
	bool bUseBeginnerCare : 1;  // Offset: 672 Size: 1
	char pad_673_1 : 7;  // Offset: 673 Size: 1
	bool bIsAiPlayer : 1;  // Offset: 673 Size: 1
	enum class EKtRaceAiType aiType;  // Offset: 674 Size: 1
	char pad_675[5];  // Offset: 675 Size: 5
	enum class EConnectionStatus ConnectionStatus;  // Offset: 680 Size: 1
	char pad_681[87];  // Offset: 681 Size: 87



 // Functions 
 public:
	void ServerSetRaceGameResult(struct FRaceGameResult InRaceGameResult); // Function KartDrift.PawnStateComponent.ServerSetRaceGameResult
	void OnRep_ConnectionStatus(); // Function KartDrift.PawnStateComponent.OnRep_ConnectionStatus
	void CheckLogout(struct APawn* InPawn); // Function KartDrift.PawnStateComponent.CheckLogout
	void CheckLoadingCrash(); // Function KartDrift.PawnStateComponent.CheckLoadingCrash
}; 
 
 


//Class KartDrift.CreateLicenseOverlay Size 120
// Inherited 72 bytes 
class UCreateLicenseOverlay : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseOverlayClass;  // Offset: 72 Size: 40
	struct UUserWidget* LicenseOverlay;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartForceFeedbackTable Size 128
// Inherited 48 bytes 
class UKartForceFeedbackTable : public UDataAsset
{

 public: 
	struct TMap<struct FName, struct FKartForceFeedbackTableRow> ForceFeedbackData;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopKoinProductList Size 56
// Inherited 56 bytes 
class UPqShopKoinProductList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FreeRaceGameSession Size 736
// Inherited 568 bytes 
class AFreeRaceGameSession : public AKdGameSession
{

 public: 
	char pad_568[8];  // Offset: 568 Size: 8
	struct TMap<struct FString, struct UKdGameSessionPlayer*> players;  // Offset: 576 Size: 80
	char pad_656[80];  // Offset: 656 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdGameSessionInfoStore Size 168
// Inherited 48 bytes 
class UKdGameSessionInfoStore : public UGameInstanceSubsystem
{

 public: 
	char pad_48[120];  // Offset: 48 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FreeRaceGameState Size 1152
// Inherited 1152 bytes 
class AFreeRaceGameState : public ASpeedSingleGameState
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FreeRacePhaseComponent Size 432
// Inherited 432 bytes 
class UFreeRacePhaseComponent : public USpeedSinglePhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TMIMulticastHelperComponent Size 176
// Inherited 176 bytes 
class UTMIMulticastHelperComponent : public UMulticastHelperComponent
{

 public: 



 // Functions 
 public:
	void MulticastRelaySendResultData(struct UObject* RelayTarget, struct TArray<struct FMajorGamePlayerData> InPlayerContainer, struct TArray<struct FMajorGameTeamData> InTeamContainer); // Function KartDrift.TMIMulticastHelperComponent.MulticastRelaySendResultData
	void ClientRelaySendResultData(struct UObject* RelayTarget, struct TArray<struct FMajorGamePlayerData> InPlayerContainer, struct TArray<struct FMajorGameTeamData> InTeamContainer); // Function KartDrift.TMIMulticastHelperComponent.ClientRelaySendResultData
}; 
 
 


//Class KartDrift.LicenseDriftMissionInterface Size 40
// Inherited 40 bytes 
class ULicenseDriftMissionInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TeamColorDataAsset Size 160
// Inherited 48 bytes 
class UTeamColorDataAsset : public UDataAsset
{

 public: 
	struct TArray<struct FTeamColor> TeamColorInfo;  // Offset: 48 Size: 16
	struct FTeamColor IndividualMyColor;  // Offset: 64 Size: 48
	struct FTeamColor IndividualOthersColor;  // Offset: 112 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FuncLib_Blueprint Size 40
// Inherited 40 bytes 
class UFuncLib_Blueprint : public UObject
{

 public: 



 // Functions 
 public:
	struct FTeamColor TeamColorOf(enum class ERaceTeamType TeamID); // Function KartDrift.FuncLib_Blueprint.TeamColorOf
	void RemoveRowsBelow(struct UGridPanel* GridPanel, int32_t BeginRowInclusive); // Function KartDrift.FuncLib_Blueprint.RemoveRowsBelow
	void MoveGridSlots(struct UGridPanel* FromRow, struct UGridPanel* ToPanel, int32_t ToRow, struct FVector2D AddNudge); // Function KartDrift.FuncLib_Blueprint.MoveGridSlots
	void MoveGridHeader(struct UGridPanel* FromHeader, struct UGridPanel* ToPanel); // Function KartDrift.FuncLib_Blueprint.MoveGridHeader
	struct FTeamColor IndividualOthersColor(); // Function KartDrift.FuncLib_Blueprint.IndividualOthersColor
	struct FTeamColor IndividualMyColor(); // Function KartDrift.FuncLib_Blueprint.IndividualMyColor
	void BP_MessageDialog(struct FText Message); // Function KartDrift.FuncLib_Blueprint.BP_MessageDialog
}; 
 
 


//Class KartDrift.KartNavMoveComponent Size 464
// Inherited 184 bytes 
class UKartNavMoveComponent : public UKartAIBaseComponent
{

 public: 
	char pad_184[8];  // Offset: 184 Size: 8
	struct UKartMovementComponent* Movement;  // Offset: 192 Size: 8
	struct UItemComponent* ItemComponent;  // Offset: 200 Size: 8
	struct USplineComponent* SplineGuide;  // Offset: 208 Size: 8
	struct TArray<struct USplineComponent*> SplineList;  // Offset: 216 Size: 16
	struct TArray<struct USplineComponent*> Spline_SubPath;  // Offset: 232 Size: 16
	struct TMap<struct FString, struct USplineComponent*> ShortCutSplineGuide;  // Offset: 248 Size: 80
	struct USplineComponent* CurrentShortCut;  // Offset: 328 Size: 8
	char pad_336[96];  // Offset: 336 Size: 96
	struct USplineComponent* DriftSpline;  // Offset: 432 Size: 8
	char pad_440[8];  // Offset: 440 Size: 8
	struct FVector RailEndDirection;  // Offset: 448 Size: 12
	char pad_460[4];  // Offset: 460 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSequenceComponent Size 272
// Inherited 176 bytes 
class UScenarioSequenceComponent : public USequenceBaseComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct TArray<struct ALevelSequenceActor*> PlayingSequenceContainer;  // Offset: 200 Size: 16
	struct TSoftClassPtr<UObject> SkipWidgetClass;  // Offset: 216 Size: 40
	struct UUserWidget* SkipWidget;  // Offset: 256 Size: 8
	char pad_264[8];  // Offset: 264 Size: 8



 // Functions 
 public:
	void OnFinished(); // Function KartDrift.ScenarioSequenceComponent.OnFinished
}; 
 
 


//Class KartDrift.FuncLib_Widget Size 40
// Inherited 40 bytes 
class UFuncLib_Widget : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeVictoryGuideWidget Size 632
// Inherited 608 bytes 
class UModeVictoryGuideWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_GuideDescText;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Open;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_Close;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameLiftRequest Size 128
// Inherited 48 bytes 
class UGameLiftRequest : public UKxObject
{

 public: 
	struct TMap<struct FString, struct FString> playerSessionId2PlayerId;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopBalanceNxA Size 56
// Inherited 56 bytes 
class UPqShopBalanceNxA : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionPlayMission Size 144
// Inherited 48 bytes 
class UKtSessionPlayMission : public UKxObject
{

 public: 
	struct FKtPlayMissionDef def;  // Offset: 48 Size: 64
	struct FKtPlayMissionRewardDef reward;  // Offset: 112 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSequenceKart Size 560
// Inherited 544 bytes 
class AKdSequenceKart : public AActor
{

 public: 
	int32_t Index;  // Offset: 544 Size: 4
	char pad_548_1 : 7;  // Offset: 548 Size: 1
	bool isWin : 1;  // Offset: 548 Size: 1
	char pad_549[3];  // Offset: 549 Size: 3
	struct UKartSkeletalMeshComponent* KartSkeletalMeshComponent;  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionCreateRace Size 584
// Inherited 136 bytes 
class UKtSessionCreateRace : public UKtSessionRequestBody
{

 public: 
	struct FString Track;  // Offset: 136 Size: 16
	enum class EGameType GameType;  // Offset: 152 Size: 1
	enum class ERaceType raceType;  // Offset: 153 Size: 1
	enum class ERaceMode raceMode;  // Offset: 154 Size: 1
	char pad_155_1 : 7;  // Offset: 155 Size: 1
	bool observerMode : 1;  // Offset: 155 Size: 1
	struct FKtKartChannelParam channelParam;  // Offset: 156 Size: 72
	int32_t teams;  // Offset: 228 Size: 4
	int32_t teammembers;  // Offset: 232 Size: 4
	int32_t Lap;  // Offset: 236 Size: 4
	char pad_240_1 : 7;  // Offset: 240 Size: 1
	bool hideKart : 1;  // Offset: 240 Size: 1
	char pad_241_1 : 7;  // Offset: 241 Size: 1
	bool hideCharacter : 1;  // Offset: 241 Size: 1
	char pad_242[6];  // Offset: 242 Size: 6
	struct TArray<struct FString> teamNames;  // Offset: 248 Size: 16
	struct FString sessionAPIEndpoint;  // Offset: 264 Size: 16
	struct FString sessionAPIKey;  // Offset: 280 Size: 16
	struct FString sessionAPIAuthToken;  // Offset: 296 Size: 16
	struct FString redisChannelName;  // Offset: 312 Size: 16
	struct TArray<struct FKtSessionRacePlayerRequest> players;  // Offset: 328 Size: 16
	struct TArray<struct FKtSessionRaceObserverRequest> observers;  // Offset: 344 Size: 16
	struct TMap<struct FString, struct FString> packEncKeys;  // Offset: 360 Size: 80
	struct TMap<struct FString, int32_t> party;  // Offset: 440 Size: 80
	char pad_520_1 : 7;  // Offset: 520 Size: 1
	bool raceLog : 1;  // Offset: 520 Size: 1
	char pad_521[7];  // Offset: 521 Size: 7
	struct FString nxlogServiceId;  // Offset: 528 Size: 16
	int32_t nxlogCountPerPack;  // Offset: 544 Size: 4
	char pad_548[4];  // Offset: 548 Size: 4
	struct FString nxlogMatchType;  // Offset: 552 Size: 16
	struct FString grandPrixId;  // Offset: 568 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqLoginQueueStatus Size 56
// Inherited 56 bytes 
class UPqLoginQueueStatus : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameSessionDataConnectInfo Size 192
// Inherited 128 bytes 
class UGameSessionDataConnectInfo : public UGameLiftRequest
{

 public: 
	struct FString gameId;  // Offset: 128 Size: 16
	struct FString sessionAPIEndpoint;  // Offset: 144 Size: 16
	struct FString sessionAPIKey;  // Offset: 160 Size: 16
	struct FString sessionAPIAuthToken;  // Offset: 176 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameTipPool Size 128
// Inherited 40 bytes 
class UGameTipPool : public UObject
{

 public: 
	char pad_40[88];  // Offset: 40 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemListPopupEntry Size 88
// Inherited 40 bytes 
class UItemListPopupEntry : public UObject
{

 public: 
	struct FString ItemId;  // Offset: 40 Size: 16
	struct FString stockId;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bLicenseReward : 1;  // Offset: 72 Size: 1
	char pad_73[3];  // Offset: 73 Size: 3
	int32_t NumStars;  // Offset: 76 Size: 4
	char pad_80_1 : 7;  // Offset: 80 Size: 1
	bool bShowBottomLine : 1;  // Offset: 80 Size: 1
	char pad_81[7];  // Offset: 81 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemModelComponent Size 4016
// Inherited 3856 bytes 
class UItemModelComponent : public USkeletalMeshComponent
{

 public: 
	char pad_3856[16];  // Offset: 3856 Size: 16
	struct USkeletalMeshComponent* BalloonSkeletalMeshComponent;  // Offset: 3872 Size: 8
	char pad_3880[136];  // Offset: 3880 Size: 136



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OptionDropDownItem Size 72
// Inherited 40 bytes 
class UOptionDropDownItem : public UObject
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameLiftPlayer Size 64
// Inherited 48 bytes 
class UGameLiftPlayer : public UKxObject
{

 public: 
	struct FString playerId;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PersonalResultWidgetComponent Size 288
// Inherited 176 bytes 
class UPersonalResultWidgetComponent : public UActorComponent
{

 public: 
	UMajorPersonalResultWidget* ResultWidgetClass;  // Offset: 176 Size: 8
	UVoiceChatWidget* VoiceChatWidgetClass;  // Offset: 184 Size: 8
	struct UMajorPersonalResultWidget* ResultWidget;  // Offset: 192 Size: 8
	char pad_200[88];  // Offset: 200 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_TimeAttackTrackChangeDialog Size 912
// Inherited 896 bytes 
class UM_TimeAttackTrackChangeDialog : public UTimeAttackTrackChangeDialog
{

 public: 
	struct TWeakObjectPtr<UListView> TrackTileView;  // Offset: 896 Size: 8
	struct UTimeAttackTrackDefEntryObject* PrevSelectionObject;  // Offset: 904 Size: 8



 // Functions 
 public:
	void OnFinalSelectButtonClicked(int32_t ButtonIndex); // Function KartDrift.M_TimeAttackTrackChangeDialog.OnFinalSelectButtonClicked
}; 
 
 


//Class KartDrift.KtSessionReady Size 72
// Inherited 48 bytes 
class UKtSessionReady : public UKxObject
{

 public: 
	struct FString Version;  // Offset: 48 Size: 16
	int32_t Port;  // Offset: 64 Size: 4
	int32_t queryPort;  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionPing Size 48
// Inherited 48 bytes 
class UKtSessionPing : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartChannelParamList Size 64
// Inherited 48 bytes 
class UKartChannelParamList : public UDataAsset
{

 public: 
	struct TArray<struct UKartChannelParam*> ParamList;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionPlayerConnect Size 64
// Inherited 48 bytes 
class UKtSessionPlayerConnect : public UKxObject
{

 public: 
	struct FString playerSessionId;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionPlayerDisconnect Size 72
// Inherited 48 bytes 
class UKtSessionPlayerDisconnect : public UKxObject
{

 public: 
	struct FString playerSessionId;  // Offset: 48 Size: 16
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool unfinished : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RequestTMIPlayerResultData Size 72
// Inherited 72 bytes 
class URequestTMIPlayerResultData : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchNotifyCancel Size 48
// Inherited 48 bytes 
class UMatchNotifyCancel : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionHackDetected Size 136
// Inherited 48 bytes 
class UKtSessionHackDetected : public UKxObject
{

 public: 
	struct FString playerId;  // Offset: 48 Size: 16
	struct FString riderName;  // Offset: 64 Size: 16
	enum class ERaceMode raceMode;  // Offset: 80 Size: 1
	char pad_81[7];  // Offset: 81 Size: 7
	struct FString trackId;  // Offset: 88 Size: 16
	struct FString gameId;  // Offset: 104 Size: 16
	struct FString Msg;  // Offset: 120 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameModeAsset Size 128
// Inherited 48 bytes 
class UGameModeAsset : public UDataAsset
{

 public: 
	struct TMap<struct FString, struct FGameModeData> GameModeData;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SQTimeDistanceWidget Size 712
// Inherited 608 bytes 
class USQTimeDistanceWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* Text_DistanceNormal;  // Offset: 608 Size: 8
	struct UKdTextBlock* Text_DistanceWarning;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* WS_Back;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* WS_Distance;  // Offset: 632 Size: 8
	struct UKdTextBlock* Text_TimeNormal;  // Offset: 640 Size: 8
	struct UKdTextBlock* Text_TimeWarning;  // Offset: 648 Size: 8
	struct UWidgetSwitcher* WS_Time;  // Offset: 656 Size: 8
	struct UWidgetAnimation* Anim_Alert;  // Offset: 664 Size: 8
	struct UWidgetAnimation* Anim_Alert_Distance;  // Offset: 672 Size: 8
	char pad_680[32];  // Offset: 680 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameplayControlTypeSelectDialog Size 944
// Inherited 816 bytes 
class UGameplayControlTypeSelectDialog : public UDialogTemplate
{

 public: 
	char pad_816[24];  // Offset: 816 Size: 24
	struct TArray<struct FName> MediaOpenedAnims;  // Offset: 840 Size: 16
	struct TArray<struct FText> MediaOpenedSubTitleTexts;  // Offset: 856 Size: 16
	struct TArray<struct FText> MediaOpenedAutoTipTexts;  // Offset: 872 Size: 16
	struct TArray<struct FText> MediaOpenedManualTipTexts;  // Offset: 888 Size: 16
	struct TArray<struct FName> MediaEndReachedAnims;  // Offset: 904 Size: 16
	struct TArray<float> MediaEndReachedAnimOffsets;  // Offset: 920 Size: 16
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void OnClickedGameplayControlTypeConfirm(int32_t InIndex); // Function KartDrift.GameplayControlTypeSelectDialog.OnClickedGameplayControlTypeConfirm
}; 
 
 


//Class KartDrift.KartWheelComponent Size 3856
// Inherited 3856 bytes 
class UKartWheelComponent : public USkeletalMeshComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemDefEntryObject Size 216
// Inherited 40 bytes 
class UItemDefEntryObject : public UObject
{

 public: 
	char pad_40[176];  // Offset: 40 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GfsServer Size 104
// Inherited 40 bytes 
class UGfsServer : public UObject
{

 public: 
	struct UGfsServerConnection* Connection;  // Offset: 40 Size: 8
	struct UGameInstance* GameInstance;  // Offset: 48 Size: 8
	struct UKdAccount* Account;  // Offset: 56 Size: 8
	struct FTimerHandle PingTimer;  // Offset: 64 Size: 8
	struct FString MyGfsId;  // Offset: 72 Size: 16
	struct FString MyNexonTag;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GoItem_Cube Size 744
// Inherited 544 bytes 
class AGoItem_Cube : public AActor
{

 public: 
	char pad_544[24];  // Offset: 544 Size: 24
	struct UStaticMeshComponent* CubeMesh;  // Offset: 568 Size: 8
	struct USphereComponent* CollisionComponent;  // Offset: 576 Size: 8
	struct UDecalComponent* Decal;  // Offset: 584 Size: 8
	struct UParticleSystemComponent* GetParticle;  // Offset: 592 Size: 8
	float CubeRotationSpeed;  // Offset: 600 Size: 4
	float CubeLocationHeight;  // Offset: 604 Size: 4
	struct FName ItemFeedForceFeedbackName;  // Offset: 608 Size: 8
	enum class EStateDesc CubeState;  // Offset: 616 Size: 1
	char pad_617[3];  // Offset: 617 Size: 3
	float EatenTime;  // Offset: 620 Size: 4
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bMovableCube : 1;  // Offset: 624 Size: 1
	enum class EItemType OverrideItemType;  // Offset: 625 Size: 1
	char pad_626[6];  // Offset: 626 Size: 6
	struct UFMODEvent* ItemFx;  // Offset: 632 Size: 8
	char pad_640[56];  // Offset: 640 Size: 56
	struct UItemCubesComponent* CubeComponent;  // Offset: 696 Size: 8
	char pad_704[40];  // Offset: 704 Size: 40



 // Functions 
 public:
	void Respawn(); // Function KartDrift.GoItem_Cube.Respawn
	void OnMulticastRespawn(); // Function KartDrift.GoItem_Cube.OnMulticastRespawn
}; 
 
 


//Class KartDrift.PqGetGrandPrixSeasonData Size 72
// Inherited 56 bytes 
class UPqGetGrandPrixSeasonData : public UPqPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseItemCubeData Size 288
// Inherited 64 bytes 
class ULicenseItemCubeData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<struct FLicenseItemCubeInfo> LicenseItemCubeData;  // Offset: 72 Size: 16
	struct TSoftClassPtr<UObject> ItemCubeClass;  // Offset: 88 Size: 40
	struct TSoftObjectPtr<UStaticMesh> ItemCubeMeshClass;  // Offset: 128 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject1;  // Offset: 168 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject2;  // Offset: 208 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject3;  // Offset: 248 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceLevelScriptActor Size 560
// Inherited 560 bytes 
class ARaceLevelScriptActor : public AKdLevelScriptActor
{

 public: 



 // Functions 
 public:
	void OnSubLevelAllLoadComplete(); // Function KartDrift.RaceLevelScriptActor.OnSubLevelAllLoadComplete
}; 
 
 


//Class KartDrift.PrGetGrandPrixSeasonData Size 192
// Inherited 72 bytes 
class UPrGetGrandPrixSeasonData : public UPrPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 72 Size: 16
	int32_t gpp;  // Offset: 88 Size: 4
	enum class EKtGrandPrixSubTier tier;  // Offset: 92 Size: 1
	char pad_93[3];  // Offset: 93 Size: 3
	int32_t statRank1;  // Offset: 96 Size: 4
	int32_t statRank2;  // Offset: 100 Size: 4
	int32_t statRank3;  // Offset: 104 Size: 4
	int32_t statTeamWin;  // Offset: 108 Size: 4
	int32_t statTeamLose;  // Offset: 112 Size: 4
	int32_t statTeamDraw;  // Offset: 116 Size: 4
	int32_t statRetire;  // Offset: 120 Size: 4
	int32_t statRaceCount;  // Offset: 124 Size: 4
	struct FKtRankerInfo myRank;  // Offset: 128 Size: 56
	float percentage;  // Offset: 184 Size: 4
	char pad_188[4];  // Offset: 188 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultWidgetComponentTestPawn Size 808
// Inherited 640 bytes 
class AMajorResultWidgetComponentTestPawn : public APawn
{

 public: 
	char pad_640[168];  // Offset: 640 Size: 168



 // Functions 
 public:
	void Next(); // Function KartDrift.MajorResultWidgetComponentTestPawn.Next
}; 
 
 


//Class KartDrift.PqGetGrandPrixData Size 72
// Inherited 56 bytes 
class UPqGetGrandPrixData : public UPqPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceReplayComponent Size 280
// Inherited 176 bytes 
class URaceReplayComponent : public UActorComponent
{

 public: 
	char pad_176[104];  // Offset: 176 Size: 104



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetGrandPrixData Size 192
// Inherited 72 bytes 
class UPrGetGrandPrixData : public UPrPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 72 Size: 16
	int32_t gpp;  // Offset: 88 Size: 4
	enum class EKtGrandPrixSubTier tier;  // Offset: 92 Size: 1
	char pad_93[3];  // Offset: 93 Size: 3
	int32_t statRank1;  // Offset: 96 Size: 4
	int32_t statRank2;  // Offset: 100 Size: 4
	int32_t statRank3;  // Offset: 104 Size: 4
	int32_t statTeamWin;  // Offset: 108 Size: 4
	int32_t statTeamLose;  // Offset: 112 Size: 4
	int32_t statTeamDraw;  // Offset: 116 Size: 4
	int32_t statRetire;  // Offset: 120 Size: 4
	int32_t statRaceCount;  // Offset: 124 Size: 4
	struct FKtRankerInfo myRank;  // Offset: 128 Size: 56
	float percentage;  // Offset: 184 Size: 4
	char pad_188[4];  // Offset: 188 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WaterReaction Size 880
// Inherited 528 bytes 
class UWaterReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UParticleSystem> LockEffect;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<UFMODEvent> LockSound;  // Offset: 576 Size: 40
	struct TSoftObjectPtr<UParticleSystem> SplashEffect;  // Offset: 616 Size: 40
	struct TSoftObjectPtr<UFMODEvent> SplashSound;  // Offset: 656 Size: 40
	struct TSoftClassPtr<UObject> StrokeWidget;  // Offset: 696 Size: 40
	struct TSoftObjectPtr<ULevelSequence> HitLevelSequence;  // Offset: 736 Size: 40
	char pad_776[32];  // Offset: 776 Size: 32
	struct UItemComponent* LocalVictim;  // Offset: 808 Size: 8
	struct UItemComponent* LocalUser;  // Offset: 816 Size: 8
	char pad_824[8];  // Offset: 824 Size: 8
	struct UKdLevelSequencePlayer* SequencePlayer;  // Offset: 832 Size: 8
	struct UUserWidget* WaterStroke;  // Offset: 840 Size: 8
	struct UParticleSystemComponent* LockEffectComponent;  // Offset: 848 Size: 8
	struct UParticleSystemComponent* SplashEffectComponent;  // Offset: 856 Size: 8
	struct UParticleSystemComponent* FastEscapeEffectComponent;  // Offset: 864 Size: 8
	char pad_872[8];  // Offset: 872 Size: 8



 // Functions 
 public:
	void StrokeByAxis(float Value); // Function KartDrift.WaterReaction.StrokeByAxis
	void StrokeByAction(); // Function KartDrift.WaterReaction.StrokeByAction
}; 
 
 


//Class KartDrift.LicenseBossData Size 816
// Inherited 64 bytes 
class ULicenseBossData : public ULicenseContents
{

 public: 
	struct FKartDesc KartDesc;  // Offset: 64 Size: 184
	struct FCharacterDesc CharacterDesc;  // Offset: 248 Size: 96
	float InitDistance;  // Offset: 344 Size: 4
	float MaxHP;  // Offset: 348 Size: 4
	float SlipRadius;  // Offset: 352 Size: 4
	float RageTime;  // Offset: 356 Size: 4
	float RocketDamage;  // Offset: 360 Size: 4
	float FirstRocketDamage;  // Offset: 364 Size: 4
	int32_t LockItemCount;  // Offset: 368 Size: 4
	char pad_372[4];  // Offset: 372 Size: 4
	struct TArray<float> RageThreshold;  // Offset: 376 Size: 16
	float AttackDistanceInterval;  // Offset: 392 Size: 4
	float LoseDistance;  // Offset: 396 Size: 4
	float Scale;  // Offset: 400 Size: 4
	char pad_404[4];  // Offset: 404 Size: 4
	struct FLicenseBossBananaPatternSet BossBananaPatternSet;  // Offset: 408 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> Banana_Begin;  // Offset: 448 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Base;  // Offset: 488 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Base2;  // Offset: 528 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Angry;  // Offset: 568 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Attack;  // Offset: 608 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Damage;  // Offset: 648 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Damage2;  // Offset: 688 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Fail;  // Offset: 728 Size: 40
	struct TSoftObjectPtr<UAnimMontage> Montage_Start;  // Offset: 768 Size: 40
	struct UFMODEvent* RageBGM;  // Offset: 808 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopPurchaseNxA Size 128
// Inherited 56 bytes 
class UPqShopPurchaseNxA : public UPqPacket
{

 public: 
	struct FString Language;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bDirectOrder : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	struct FString Category;  // Offset: 80 Size: 16
	struct FString stockId;  // Offset: 96 Size: 16
	struct FString localizedStockName;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcGrandPrixResult Size 80
// Inherited 48 bytes 
class UPcGrandPrixResult : public UPcPacket
{

 public: 
	struct FString grandPrixId;  // Offset: 48 Size: 16
	int32_t gpp;  // Offset: 64 Size: 4
	enum class EKtGrandPrixSubTier tier;  // Offset: 68 Size: 1
	char pad_69[3];  // Offset: 69 Size: 3
	int32_t rank;  // Offset: 72 Size: 4
	float percentage;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqGetRegularGrandPrixData Size 56
// Inherited 56 bytes 
class UPqGetRegularGrandPrixData : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PatcherInterface Size 64
// Inherited 40 bytes 
class UPatcherInterface : public UObject
{

 public: 
	struct UGameInstance* GameInstance;  // Offset: 40 Size: 8
	char pad_48[8];  // Offset: 48 Size: 8
	struct UPatcherEvent* PatcherEvent;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetRegularGrandPrixData Size 88
// Inherited 72 bytes 
class UPrGetRegularGrandPrixData : public UPrPacket
{

 public: 
	struct TArray<struct FKtRegularGrandPrixData> dataList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GravityZone Size 600
// Inherited 576 bytes 
class AGravityZone : public AKdTriggerBox
{

 public: 
	float GravityDivider;  // Offset: 576 Size: 4
	float SpeedReduce;  // Offset: 580 Size: 4
	float MinSpeedKph;  // Offset: 584 Size: 4
	float PitchReduceSpeed;  // Offset: 588 Size: 4
	float Duration;  // Offset: 592 Size: 4
	char pad_596[4];  // Offset: 596 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GravityBuff Size 96
// Inherited 40 bytes 
class UGravityBuff : public UKartMovementBuff
{

 public: 
	char pad_40[56];  // Offset: 40 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HeadlightDataAsset Size 128
// Inherited 48 bytes 
class UHeadlightDataAsset : public UDataAsset
{

 public: 
	struct FHeadlightData HeadlightData;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCoinCounterWidget Size 632
// Inherited 608 bytes 
class ULicenseCoinCounterWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_KoinCount;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Get_Anim;  // Offset: 616 Size: 8
	char pad_624[8];  // Offset: 624 Size: 8



 // Functions 
 public:
	void AddCoin(int32_t Num); // Function KartDrift.LicenseCoinCounterWidget.AddCoin
}; 
 
 


//Class KartDrift.TimeAttackActivateWrongWay Size 72
// Inherited 72 bytes 
class UTimeAttackActivateWrongWay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HitSoundComponent Size 288
// Inherited 176 bytes 
class UHitSoundComponent : public UActorComponent
{

 public: 
	char pad_176[64];  // Offset: 176 Size: 64
	struct TSoftObjectPtr<UFMODEvent> SoundEvent;  // Offset: 240 Size: 40
	struct UFMODAudioComponent* AudioComponent;  // Offset: 280 Size: 8



 // Functions 
 public:
	void OnComponentHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.HitSoundComponent.OnComponentHit
}; 
 
 


//Class KartDrift.WrappingCollectionList Size 64
// Inherited 48 bytes 
class UWrappingCollectionList : public UDataAsset
{

 public: 
	struct TArray<struct FWrappingCollection> CollectionList;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HttpPatcherInterface Size 280
// Inherited 64 bytes 
class UHttpPatcherInterface : public UPatcherInterface
{

 public: 
	struct FString ListFileUrl;  // Offset: 64 Size: 16
	char pad_80[120];  // Offset: 80 Size: 120
	struct ULocalFileCache* FileCache;  // Offset: 200 Size: 8
	char pad_208[72];  // Offset: 208 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemRocketFirstRank Size 1464
// Inherited 856 bytes 
class AItemRocketFirstRank : public AItem
{

 public: 
	char pad_856[8];  // Offset: 856 Size: 8
	struct USceneComponent* RootSceneComponent;  // Offset: 864 Size: 8
	struct USkeletalMeshComponent* BazookaMeshComponent;  // Offset: 872 Size: 8
	struct USkeletalMeshComponent* RocketMeshComponent;  // Offset: 880 Size: 8
	struct UParticleSystemComponent* TailParticleComponent;  // Offset: 888 Size: 8
	struct TSoftObjectPtr<UCurveFloat> CurveDegree;  // Offset: 896 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveY;  // Offset: 936 Size: 40
	struct TSoftObjectPtr<UFMODEvent> ShootSound;  // Offset: 976 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FlySound;  // Offset: 1016 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> RocketMesh;  // Offset: 1056 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> MissileBeginAttackAsset;  // Offset: 1096 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> MissileShootingAsset;  // Offset: 1136 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BazookaBody;  // Offset: 1176 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> RocketHead;  // Offset: 1216 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Booster;  // Offset: 1256 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1296 Size: 40
	struct TSoftClassPtr<UObject> RedAlertWidgetObj;  // Offset: 1336 Size: 40
	char pad_1376[4];  // Offset: 1376 Size: 4
	float RocketTotalFlyTime;  // Offset: 1380 Size: 4
	float ActionDelay;  // Offset: 1384 Size: 4
	float BazookaLifeTime;  // Offset: 1388 Size: 4
	char pad_1392[8];  // Offset: 1392 Size: 8
	struct UItemComponent* AuthVictim;  // Offset: 1400 Size: 8
	struct AActor* LocalTargetActor;  // Offset: 1408 Size: 8
	char pad_1416[48];  // Offset: 1416 Size: 48



 // Functions 
 public:
	void MulticastReachedTarget(struct UItemComponent* User); // Function KartDrift.ItemRocketFirstRank.MulticastReachedTarget
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemRocketFirstRank.MulticastNoTarget
	void MulticastFireTo(struct UItemComponent* User, struct UItemComponent* Target); // Function KartDrift.ItemRocketFirstRank.MulticastFireTo
	void MulticastAffectTo(struct UItemComponent* User); // Function KartDrift.ItemRocketFirstRank.MulticastAffectTo
	void BeginFlying(); // Function KartDrift.ItemRocketFirstRank.BeginFlying
}; 
 
 


//Class KartDrift.HUDComponent Size 296
// Inherited 176 bytes 
class UHUDComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct URaceHudWidget* HUDWidget;  // Offset: 184 Size: 8
	struct TMap<struct FName, struct UContentWidget*> CachedContentWidgets;  // Offset: 192 Size: 80
	struct UCustomHUDData* CustomHUDData;  // Offset: 272 Size: 8
	char pad_280[16];  // Offset: 280 Size: 16



 // Functions 
 public:
	struct UPanelSlot* AddChildToSlot(struct FName SlotName, struct UWidget* Widget); // Function KartDrift.HUDComponent.AddChildToSlot
}; 
 
 


//Class KartDrift.InitializePawnState Size 72
// Inherited 72 bytes 
class UInitializePawnState : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseMessageInterface Size 40
// Inherited 40 bytes 
class ULicenseMessageInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRocketQuestWidgetInst Size 680
// Inherited 608 bytes 
class ULicenseRocketQuestWidgetInst : public UUserWidget
{

 public: 
	struct UImage* CircleBg;  // Offset: 608 Size: 8
	struct UImage* CircleSolid;  // Offset: 616 Size: 8
	struct UImage* CircleStroke;  // Offset: 624 Size: 8
	struct UKdTextBlock* TxtNumber;  // Offset: 632 Size: 8
	struct UKdTextBlock* TxtNumberClear;  // Offset: 640 Size: 8
	struct UWidgetSwitcher* WS_State;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_CurrentTarget;  // Offset: 656 Size: 8
	struct UWidgetAnimation* Anim_ClearTarget;  // Offset: 664 Size: 8
	struct UWidgetAnimation* Anim_ShowTarget;  // Offset: 672 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InfoLogicComponent Size 336
// Inherited 224 bytes 
class UInfoLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[112];  // Offset: 224 Size: 112



 // Functions 
 public:
	void OnUpdateEmblemItem(); // Function KartDrift.InfoLogicComponent.OnUpdateEmblemItem
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.InfoLogicComponent.OnSeasonUpdated
}; 
 
 


//Class KartDrift.KdGameViewportClient Size 888
// Inherited 864 bytes 
class UKdGameViewportClient : public UGameViewportClient
{

 public: 
	struct UUserWidget* WatermarkWidget;  // Offset: 864 Size: 8
	char pad_872[16];  // Offset: 872 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchEscapeWidget Size 648
// Inherited 608 bytes 
class UTouchEscapeWidget : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	struct UWaterReaction* WaterReaction;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Anim_Alert;  // Offset: 632 Size: 8
	struct UButton* V_InputButton;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPlayerController Size 1416
// Inherited 1408 bytes 
class AScenarioPlayerController : public AKdPlayerController
{

 public: 
	char pad_1408[8];  // Offset: 1408 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GrandPrixListEntryObject Size 56
// Inherited 40 bytes 
class UGrandPrixListEntryObject : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InGameVoiceChatComponent Size 184
// Inherited 176 bytes 
class UInGameVoiceChatComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackDifficultUnitWidget Size 624
// Inherited 608 bytes 
class UTrackDifficultUnitWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* UnitSwitcher;  // Offset: 608 Size: 8
	char pad_616[8];  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InstanceBoostAssistWidget Size 672
// Inherited 608 bytes 
class UInstanceBoostAssistWidget : public UUserWidget
{

 public: 
	struct UKartMovementComponent* KartMovement;  // Offset: 608 Size: 8
	struct UImage* Gauge;  // Offset: 616 Size: 8
	struct UImage* BoostImage;  // Offset: 624 Size: 8
	struct UImage* AutoImage;  // Offset: 632 Size: 8
	struct UVerticalBox* RootVerticalBox;  // Offset: 640 Size: 8
	struct UFMODEvent* Drift_Assist;  // Offset: 648 Size: 8
	char pad_656[8];  // Offset: 656 Size: 8
	struct UMovementAssistComponent* Assist;  // Offset: 664 Size: 8



 // Functions 
 public:
	void OnGuideInstanceBoost(bool bReadyInstanceBoost); // Function KartDrift.InstanceBoostAssistWidget.OnGuideInstanceBoost
	void OnAssistEnable(bool bEnable); // Function KartDrift.InstanceBoostAssistWidget.OnAssistEnable
}; 
 
 


//Class KartDrift.ItemAffect Size 40
// Inherited 40 bytes 
class UItemAffect : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemBanana Size 1248
// Inherited 856 bytes 
class AItemBanana : public AItem
{

 public: 
	struct UAnimationAsset* BananaBeginAnimOverride;  // Offset: 856 Size: 8
	struct USphereComponent* OverlapComponent;  // Offset: 864 Size: 8
	struct USkeletalMeshComponent* BananaSkeletalMeshComponent;  // Offset: 872 Size: 8
	struct TSoftObjectPtr<UAnimationAsset> BananaBeginAnimSequence;  // Offset: 880 Size: 40
	struct TSoftObjectPtr<UAnimationAsset> BananaIdleAnimSequence;  // Offset: 920 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 960 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BananaMesh;  // Offset: 1000 Size: 40
	struct TSoftClassPtr<UObject> Banana_Bullet;  // Offset: 1040 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1080 Size: 40
	char pad_1120[128];  // Offset: 1120 Size: 128



 // Functions 
 public:
	void MulticastBorn(struct FVector Location, struct FRotator Rotation, float TargetHeight); // Function KartDrift.ItemBanana.MulticastBorn
	void MulticastBeginOverlap(); // Function KartDrift.ItemBanana.MulticastBeginOverlap
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemBanana.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemBanana.MulticastAffectTo
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemBanana.BeginOverlap
}; 
 
 


//Class KartDrift.KartSkidMark Size 864
// Inherited 544 bytes 
class AKartSkidMark : public AActor
{

 public: 
	struct UMaterialInstance* SkidMarkMaterialInst;  // Offset: 544 Size: 8
	struct TArray<struct USkidMarkMeshComponent*> SkidMarkMeshComponents;  // Offset: 552 Size: 16
	char pad_568[8];  // Offset: 568 Size: 8
	struct TArray<struct UObject*> LoadSkidMarkMaterialList;  // Offset: 576 Size: 16
	char pad_592[272];  // Offset: 592 Size: 272



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemBarricade Size 1616
// Inherited 856 bytes 
class AItemBarricade : public AItem
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 856 Size: 40
	struct TSoftObjectPtr<UFMODEvent> DropSound;  // Offset: 896 Size: 40
	struct TSoftObjectPtr<UFMODEvent> StateEndSound;  // Offset: 936 Size: 40
	struct TSoftObjectPtr<UFMODEvent> StateSetSound;  // Offset: 976 Size: 40
	struct TSoftClassPtr<UObject> Barricade_Bullet;  // Offset: 1016 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1056 Size: 40
	char pad_1096[144];  // Offset: 1096 Size: 144
	struct TArray<int32_t> AuthStates;  // Offset: 1240 Size: 16
	struct TArray<struct USkeletalMeshComponent*> BarricadeSkeletalMeshComponents;  // Offset: 1256 Size: 16
	struct TArray<struct UBoxComponent*> BarricadeOverlapComponents;  // Offset: 1272 Size: 16
	struct TArray<struct UBoxComponent*> BarricadeCollisionComponents;  // Offset: 1288 Size: 16
	struct UAnimMontage* AnimMontage_Start;  // Offset: 1304 Size: 8
	struct UAnimMontage* AnimMontage_TimeOut;  // Offset: 1312 Size: 8
	struct UAnimMontage* AnimMontage_Destruct_UsingPhys;  // Offset: 1320 Size: 8
	struct TSoftObjectPtr<UAnimMontage> BarricadeAnim_Start;  // Offset: 1328 Size: 40
	struct TSoftObjectPtr<UAnimSequenceBase> BarricadeAnim_TimeOut;  // Offset: 1368 Size: 40
	struct TSoftObjectPtr<UAnimSequenceBase> BarricadeAnim_Destruct_UsingPhysics;  // Offset: 1408 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BarricadeMesh;  // Offset: 1448 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> BarricadeMesh_Destruct;  // Offset: 1488 Size: 40
	struct TSoftObjectPtr<UPhysicsAsset> BarricadePhysicsAsset_Destruct;  // Offset: 1528 Size: 40
	char pad_1568[8];  // Offset: 1568 Size: 8
	struct TArray<struct UItemComponent*> OverlapItemComponents;  // Offset: 1576 Size: 16
	struct TArray<struct UItemComponent*> AuthHitItemComponents;  // Offset: 1592 Size: 16
	char pad_1608[8];  // Offset: 1608 Size: 8



 // Functions 
 public:
	void MulticastTimeout(); // Function KartDrift.ItemBarricade.MulticastTimeout
	void MulticastSpawn(struct UItemComponent* User, struct TArray<struct FVector> Locations, struct FRotator Orientation); // Function KartDrift.ItemBarricade.MulticastSpawn
	void MulticastDestructUsingPhysics(int32_t InIndex, struct FVector_NetQuantize ImpulsePoint, float ImpulseSize, struct FVector Location, struct FRotator Rotator, struct UItemComponent* Victim, enum class EItemFilterResult Result); // Function KartDrift.ItemBarricade.MulticastDestructUsingPhysics
	void ClientEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function KartDrift.ItemBarricade.ClientEndOverlap
	void ClientBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemBarricade.ClientBeginOverlap
	void ClientBarricadeHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.ItemBarricade.ClientBarricadeHit
	void AuthTimeout(); // Function KartDrift.ItemBarricade.AuthTimeout
}; 
 
 


//Class KartDrift.Transition_InitGame Size 80
// Inherited 80 bytes 
class UTransition_InitGame : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemBooster Size 856
// Inherited 856 bytes 
class AItemBooster : public AItem
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WaitHelper Size 184
// Inherited 40 bytes 
class UWaitHelper : public UObject
{

 public: 
	struct UDelegateBarrier* Barrier;  // Offset: 40 Size: 8
	char pad_48[136];  // Offset: 48 Size: 136



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemBush Size 1080
// Inherited 856 bytes 
class AItemBush : public AItem
{

 public: 
	struct TArray<struct UStaticMeshComponent*> BushMeshComponents;  // Offset: 856 Size: 16
	struct UBoxComponent* OverlapComponent;  // Offset: 872 Size: 8
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 880 Size: 40
	struct TSoftObjectPtr<UFMODEvent> HitSound;  // Offset: 920 Size: 40
	struct TSoftObjectPtr<UStaticMesh> BushMesh;  // Offset: 960 Size: 40
	char pad_1000[16];  // Offset: 1000 Size: 16
	float ActionDelay;  // Offset: 1016 Size: 4
	float LifeSpanTime;  // Offset: 1020 Size: 4
	float DragForceMultiplier;  // Offset: 1024 Size: 4
	char pad_1028[52];  // Offset: 1028 Size: 52



 // Functions 
 public:
	void MulticastSpawn(struct UItemComponent* User, struct FVector ItemPosition, struct FRotator ItemOrientation, struct TArray<struct FVector> RelativeLocations); // Function KartDrift.ItemBush.MulticastSpawn
	void MulticastAffectTo(struct UItemComponent* Victim, enum class EItemFilterResult Result); // Function KartDrift.ItemBush.MulticastAffectTo
	void MulticastActivate(); // Function KartDrift.ItemBush.MulticastActivate
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemBush.BeginOverlap
}; 
 
 


//Class KartDrift.ItemCloud Size 1048
// Inherited 856 bytes 
class AItemCloud : public AItem
{

 public: 
	struct UParticleSystemComponent* CloudParticleComponent;  // Offset: 856 Size: 8
	struct UBoxComponent* OverlapComponent;  // Offset: 864 Size: 8
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 872 Size: 40
	struct TSoftObjectPtr<UFMODEvent> HitSound;  // Offset: 912 Size: 40
	struct TSoftObjectPtr<UParticleSystem> CloudParticle;  // Offset: 952 Size: 40
	struct TSoftClassPtr<UObject> Cloud_Bullet;  // Offset: 992 Size: 40
	float ActionDelay;  // Offset: 1032 Size: 4
	float LifeSpanTime;  // Offset: 1036 Size: 4
	char pad_1040[8];  // Offset: 1040 Size: 8



 // Functions 
 public:
	void MulticastSpawn(struct UItemComponent* User, struct FVector ItemPosition, struct FRotator ItemOrientation); // Function KartDrift.ItemCloud.MulticastSpawn
	void MulticastAffectTo(struct UItemComponent* Victim); // Function KartDrift.ItemCloud.MulticastAffectTo
	void MulticastActivate(); // Function KartDrift.ItemCloud.MulticastActivate
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemCloud.BeginOverlap
}; 
 
 


//Class KartDrift.PreciseTouchButton Size 1016
// Inherited 1000 bytes 
class UPreciseTouchButton : public UButtonTemplate
{

 public: 
	char pad_1000[16];  // Offset: 1000 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemCommonIconWidget Size 888
// Inherited 608 bytes 
class UItemCommonIconWidget : public UUserWidget
{

 public: 
	char pad_608[16];  // Offset: 608 Size: 16
	struct UWidgetSwitcher* V_WidgetSwitcher_Slot;  // Offset: 624 Size: 8
	struct UOverlay* V_Overlay_Item;  // Offset: 632 Size: 8
	struct UOverlay* V_Overlay_EmptySlot;  // Offset: 640 Size: 8
	struct UOverlay* V_Overlay_many_Item;  // Offset: 648 Size: 8
	struct UOverlay* V_Overlay_EmptyLock;  // Offset: 656 Size: 8
	struct UOverlay* V_Overlay_Add;  // Offset: 664 Size: 8
	struct UImage* V_Thumbnail;  // Offset: 672 Size: 8
	struct UOverlay* V_Overlay_Equipped;  // Offset: 680 Size: 8
	struct UWidgetSwitcher* V_Switcher_equippedText;  // Offset: 688 Size: 8
	struct UWidgetSwitcher* V_Switcher_GradeBG;  // Offset: 696 Size: 8
	struct UPanelWidget* V_HB_GradeDot;  // Offset: 704 Size: 8
	struct UPanelWidget* V_HB_Bundle_GradeDot;  // Offset: 712 Size: 8
	struct UImage* V_Image_Character;  // Offset: 720 Size: 8
	struct UWidgetSwitcher* V_Switcher_RestTimeOrCount;  // Offset: 728 Size: 8
	struct UKdTextBlock* V_KdTextBlock_RestTime;  // Offset: 736 Size: 8
	struct UKdTextBlock* V_KdTextBlock_Count;  // Offset: 744 Size: 8
	struct UImage* V_Image_Bundle_Character;  // Offset: 752 Size: 8
	struct UWidgetSwitcher* V_Switcher_Bundle_RestTimeOrCount;  // Offset: 760 Size: 8
	struct UKdTextBlock* V_KdTextBlock_Bundle_RestTime;  // Offset: 768 Size: 8
	struct UKdTextBlock* V_KdTextBlock_Bundle_Count;  // Offset: 776 Size: 8
	struct UKdImage* V_KdImage_Disable;  // Offset: 784 Size: 8
	struct UKdImage* V_KdImage_Bundle_Disable;  // Offset: 792 Size: 8
	struct UKdImage* V_KdImage_Lock;  // Offset: 800 Size: 8
	struct UKdImage* V_KdImage_Bundle_Lock;  // Offset: 808 Size: 8
	struct UOverlay* V_OV_Block;  // Offset: 816 Size: 8
	struct UKdTextBlock* V_KdTextBlock_BundleCount;  // Offset: 824 Size: 8
	struct UKdImage* V_Image_BundleThumbnail;  // Offset: 832 Size: 8
	struct UWidgetSwitcher* V_Switcher_BundleGrade;  // Offset: 840 Size: 8
	struct FString ItemId;  // Offset: 848 Size: 16
	char pad_864[16];  // Offset: 864 Size: 16
	float RestTimeRefreshSecond;  // Offset: 880 Size: 4
	char pad_884_1 : 7;  // Offset: 884 Size: 1
	bool bIsBundle : 1;  // Offset: 884 Size: 1
	char pad_885[3];  // Offset: 885 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemComponent Size 1104
// Inherited 176 bytes 
class UItemComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct UItemActorTable* ItemActorTable;  // Offset: 192 Size: 8
	struct UItemFilterCollection* ItemFilters;  // Offset: 200 Size: 8
	char pad_208[488];  // Offset: 208 Size: 488
	struct UTargetFinderComponent* TargetFinder;  // Offset: 696 Size: 8
	char pad_704[16];  // Offset: 704 Size: 16
	struct ASoundManager* SoundManager;  // Offset: 720 Size: 8
	struct UTargetFinderComponent* TargetFinderComponent;  // Offset: 728 Size: 8
	struct UItemContextComponent* ItemContext;  // Offset: 736 Size: 8
	struct UItemCubesComponent* ItemCubesComponent;  // Offset: 744 Size: 8
	char pad_752[144];  // Offset: 752 Size: 144
	struct TSoftClassPtr<UObject> RedAlertWidgetObj;  // Offset: 896 Size: 40
	struct UUserWidget* RedAlertWidget;  // Offset: 936 Size: 8
	char pad_944[8];  // Offset: 944 Size: 8
	struct TSoftClassPtr<UObject> BlueAlertWidgetObj;  // Offset: 952 Size: 40
	struct UUserWidget* BlueAlertWidget;  // Offset: 992 Size: 8
	char pad_1000[8];  // Offset: 1000 Size: 8
	struct FMulticastInlineDelegate OnSendHitInfo;  // Offset: 1008 Size: 16
	struct UItemSlotComponent* ItemSlotComponent;  // Offset: 1024 Size: 8
	char pad_1032[72];  // Offset: 1032 Size: 72



 // Functions 
 public:
	void ServerSpawnItem(enum class EItemType ItemType, enum class ESpawnItemReason Reason); // Function KartDrift.ItemComponent.ServerSpawnItem
	void ServerEndCasting(int32_t InItemSequence, enum class EItemType ItemType, struct UItemComponent* Target); // Function KartDrift.ItemComponent.ServerEndCasting
	void ServerBeginCasting(int32_t InItemSequence, enum class EItemType ItemType); // Function KartDrift.ItemComponent.ServerBeginCasting
	void Server_UseSlotChanger(); // Function KartDrift.ItemComponent.Server_UseSlotChanger
	void Server_Taunt(); // Function KartDrift.ItemComponent.Server_Taunt
	void Server_RequestOnAffectedBy(struct FItemAffectParam Param); // Function KartDrift.ItemComponent.Server_RequestOnAffectedBy
	void Server_ReduceTimer(UActorComponent* ComponentClass); // Function KartDrift.ItemComponent.Server_ReduceTimer
	void Server_OverlappedWith(struct AGoItem_Cube* Target); // Function KartDrift.ItemComponent.Server_OverlappedWith
	void Server_GimmickItemAffect(struct UObject* Gimmick, UObject* ReactionClass); // Function KartDrift.ItemComponent.Server_GimmickItemAffect
	void MulticastStopReactionByShield(); // Function KartDrift.ItemComponent.MulticastStopReactionByShield
	void MulticastAffectedBy(struct UItemComponent* User, enum class EItemType Type, int32_t ItemId, enum class EItemFilterResult Result, enum class EItemType BlockType); // Function KartDrift.ItemComponent.MulticastAffectedBy
	void Multicast_Taunt(); // Function KartDrift.ItemComponent.Multicast_Taunt
	void Multicast_ReduceTimer(UActorComponent* ComponentClass); // Function KartDrift.ItemComponent.Multicast_ReduceTimer
	void Multicast_OnSlotLock(float Time); // Function KartDrift.ItemComponent.Multicast_OnSlotLock
	void MultiCast_GimmickItemAffect(struct UObject* Gimmick, UObject* ReactionClass); // Function KartDrift.ItemComponent.MultiCast_GimmickItemAffect
	void InitItemSlot(); // Function KartDrift.ItemComponent.InitItemSlot
	void ClientBlockUseItem(float Time); // Function KartDrift.ItemComponent.ClientBlockUseItem
	void ClientAlertRed(bool bOn, float LifeTime, struct AItem* Item); // Function KartDrift.ItemComponent.ClientAlertRed
	void ClientAlertBlue(bool bOn, float LifeTime, struct AItem* Item); // Function KartDrift.ItemComponent.ClientAlertBlue
}; 
 
 


//Class KartDrift.ItemEmp Size 872
// Inherited 856 bytes 
class AItemEmp : public AItem
{

 public: 
	char pad_856[16];  // Offset: 856 Size: 16



 // Functions 
 public:
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemEmp.MulticastNoTarget
}; 
 
 


//Class KartDrift.ReplayDetailPageWidget Size 752
// Inherited 744 bytes 
class UReplayDetailPageWidget : public UKdPageWidget
{

 public: 
	char pad_744[8];  // Offset: 744 Size: 8



 // Functions 
 public:
	void OnUpdateReplayList(); // Function KartDrift.ReplayDetailPageWidget.OnUpdateReplayList
	void OnPreviousTabClicked(int32_t InIndex); // Function KartDrift.ReplayDetailPageWidget.OnPreviousTabClicked
	void OnNextTabClicked(int32_t InIndex); // Function KartDrift.ReplayDetailPageWidget.OnNextTabClicked
	void OnClickedSelectButton(int32_t InIndex); // Function KartDrift.ReplayDetailPageWidget.OnClickedSelectButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.ReplayDetailPageWidget.OnClickedBackButton
}; 
 
 


//Class KartDrift.AddItemSlotChanger Size 112
// Inherited 72 bytes 
class UAddItemSlotChanger : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ItemSlotChangerWidget;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyWidget Size 1144
// Inherited 1000 bytes 
class UScenarioKeyWidget : public UButtonTemplate
{

 public: 
	struct FKey Key_PC;  // Offset: 1000 Size: 24
	struct FKey Key_Gamepad;  // Offset: 1024 Size: 24
	struct FText Key_Descript;  // Offset: 1048 Size: 24
	struct UKdTextBlock* V_KeyText;  // Offset: 1072 Size: 8
	struct UKdTextBlock* V_KeyDescriptText;  // Offset: 1080 Size: 8
	struct UWidgetSwitcher* V_Switcher;  // Offset: 1088 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcher_Stroke;  // Offset: 1096 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcher_CountDown;  // Offset: 1104 Size: 8
	struct UKeyTextureMap2* Key_Common;  // Offset: 1112 Size: 8
	struct UKeyTextureMap2* Key_XBOX;  // Offset: 1120 Size: 8
	struct UKeyTextureMap2* Key_DualShock;  // Offset: 1128 Size: 8
	enum class EInputDeviceType InputDevice;  // Offset: 1136 Size: 1
	char pad_1137_1 : 7;  // Offset: 1137 Size: 1
	bool bIsPlatformFixed : 1;  // Offset: 1137 Size: 1
	char pad_1138[6];  // Offset: 1138 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpawnReservedItem Size 72
// Inherited 72 bytes 
class USpawnReservedItem : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDraftCheckWidget Size 664
// Inherited 608 bytes 
class ULicenseDraftCheckWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_Show;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_Hide;  // Offset: 624 Size: 8
	struct UKdTextBlock* DraftTime;  // Offset: 632 Size: 8
	char pad_640[24];  // Offset: 640 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddItemFeed Size 112
// Inherited 72 bytes 
class UAddItemFeed : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ItemFeedWidget;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableAimOnMeWidget Size 72
// Inherited 72 bytes 
class UDisableAimOnMeWidget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableItemCube Size 72
// Inherited 72 bytes 
class UEnableItemCube : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemLock Size 1016
// Inherited 856 bytes 
class AItemLock : public AItem
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 856 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Lock_Affect;  // Offset: 896 Size: 40
	struct UParticleSystemComponent* LockEffectComponent;  // Offset: 936 Size: 8
	struct TSoftClassPtr<UObject> Lock_Bullet;  // Offset: 944 Size: 40
	char pad_984[32];  // Offset: 984 Size: 32



 // Functions 
 public:
	void MulticastBeginCasting(struct UItemComponent* User, struct TArray<struct UItemComponent*> Enemies); // Function KartDrift.ItemLock.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* InVictim); // Function KartDrift.ItemLock.MulticastAffectTo
}; 
 
 


//Class KartDrift.KdPawn Size 936
// Inherited 640 bytes 
class AKdPawn : public APawn
{

 public: 
	char pad_640[264];  // Offset: 640 Size: 264
	struct TArray<struct FName> LocalPlayerLODBiasActiveClassList;  // Offset: 904 Size: 16
	struct TArray<struct FName> LocalPlayerParticleActiveClassList;  // Offset: 920 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSinglePawn Size 944
// Inherited 936 bytes 
class AItemSinglePawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void Multicast_Logout(); // Function KartDrift.ItemSinglePawn.Multicast_Logout
}; 
 
 


//Class KartDrift.ItemSinglePhaseComponent Size 432
// Inherited 432 bytes 
class UItemSinglePhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FriendListEntryObject Size 280
// Inherited 40 bytes 
class UFriendListEntryObject : public UObject
{

 public: 
	struct FAccountPlatformData PlatformInfo;  // Offset: 40 Size: 240



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSlotBunch Size 656
// Inherited 608 bytes 
class UItemSlotBunch : public UUserWidget
{

 public: 
	struct UItemSlotWidget* ItemSlot0;  // Offset: 608 Size: 8
	struct UItemSlotWidget* ItemSlot1;  // Offset: 616 Size: 8
	struct UItemSlotWidget* ItemSlot2;  // Offset: 624 Size: 8
	struct UWidgetAnimation* SlotChange_01;  // Offset: 632 Size: 8
	struct UWidgetAnimation* SlotChange_012;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8



 // Functions 
 public:
	void UpdateItemSlotNum(); // Function KartDrift.ItemSlotBunch.UpdateItemSlotNum
	void GuideBoostItem(bool Active); // Function KartDrift.ItemSlotBunch.GuideBoostItem
}; 
 
 


//Class KartDrift.LicenseSpawnObstacleData Size 128
// Inherited 64 bytes 
class ULicenseSpawnObstacleData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<struct FLicenseMovableActorInfo> LicenseSpawnActorDataList;  // Offset: 72 Size: 16
	struct TSoftObjectPtr<UStaticMesh> ItemCubeMesh;  // Offset: 88 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableSounds Size 72
// Inherited 72 bytes 
class UEnableSounds : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemActorTable Size 64
// Inherited 48 bytes 
class UItemActorTable : public UDataAsset
{

 public: 
	char pad_48[16];  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingPresetWidget Size 776
// Inherited 608 bytes 
class ULoadingPresetWidget : public UUserWidget
{

 public: 
	struct ULoadingProfileWidget* LoadingProfile_1;  // Offset: 608 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_2;  // Offset: 616 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_3;  // Offset: 624 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_4;  // Offset: 632 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_5;  // Offset: 640 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_6;  // Offset: 648 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_7;  // Offset: 656 Size: 8
	struct ULoadingProfileWidget* LoadingProfile_8;  // Offset: 664 Size: 8
	struct TArray<struct ULoadingProfileWidget*> PlayerContainer;  // Offset: 672 Size: 16
	struct TArray<struct ULoadingProfileWidget*> SoloTeamContainer;  // Offset: 688 Size: 16
	struct TArray<struct ULoadingProfileWidget*> RedTeamContainer;  // Offset: 704 Size: 16
	struct TArray<struct ULoadingProfileWidget*> BlueTeamContainer;  // Offset: 720 Size: 16
	struct TArray<struct ULoadingProfileWidget*> GreenTeamContainer;  // Offset: 736 Size: 16
	struct TArray<struct ULoadingProfileWidget*> YellowTeamContainer;  // Offset: 752 Size: 16
	char pad_768[8];  // Offset: 768 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSlotWidget Size 768
// Inherited 608 bytes 
class UItemSlotWidget : public UUserWidget
{

 public: 
	int32_t SlotId;  // Offset: 608 Size: 4
	char pad_612[4];  // Offset: 612 Size: 4
	struct UImage* ItemSlot;  // Offset: 616 Size: 8
	struct UImage* ItemSlotBG;  // Offset: 624 Size: 8
	struct UImage* ItemOutgoing;  // Offset: 632 Size: 8
	struct UImage* ItemTransitOut;  // Offset: 640 Size: 8
	struct UWidgetAnimation* ActiveItemAnimation;  // Offset: 648 Size: 8
	struct UWidgetAnimation* SpawnItemAnimation;  // Offset: 656 Size: 8
	struct UWidgetAnimation* DeactiveItemAnimation;  // Offset: 664 Size: 8
	struct UWidgetAnimation* SlideInAnimation;  // Offset: 672 Size: 8
	struct UWidgetAnimation* SlideOutAnimation;  // Offset: 680 Size: 8
	struct UWidgetAnimation* BoostIconTransition;  // Offset: 688 Size: 8
	struct UWidgetAnimation* AssistGuideAnimation;  // Offset: 696 Size: 8
	struct UWidgetAnimation* AimAnimation;  // Offset: 704 Size: 8
	struct UWidget* BackgroundEmpty;  // Offset: 712 Size: 8
	struct UWidget* BackgroundOccupied;  // Offset: 720 Size: 8
	struct UTexture2D* LastItemSlotImage;  // Offset: 728 Size: 8
	struct UImage* Focus;  // Offset: 736 Size: 8
	struct UImage* SlotLockImage;  // Offset: 744 Size: 8
	struct UOverlay* SlotOverlay;  // Offset: 752 Size: 8
	enum class EItemType SlotItem;  // Offset: 760 Size: 1
	char pad_761[7];  // Offset: 761 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSnowstorm Size 1048
// Inherited 856 bytes 
class AItemSnowstorm : public AItem
{

 public: 
	struct UParticleSystemComponent* SnowstormParticleComponent;  // Offset: 856 Size: 8
	struct UBoxComponent* OverlapComponent;  // Offset: 864 Size: 8
	struct TSoftObjectPtr<UFMODEvent> FiringSound;  // Offset: 872 Size: 40
	struct TSoftObjectPtr<UFMODEvent> HitSound;  // Offset: 912 Size: 40
	struct TSoftObjectPtr<UParticleSystem> SnowstormParticle;  // Offset: 952 Size: 40
	float ActionDelay;  // Offset: 992 Size: 4
	float LifeSpanTime;  // Offset: 996 Size: 4
	char pad_1000[48];  // Offset: 1000 Size: 48



 // Functions 
 public:
	void MulticastBeginCasting(struct UItemComponent* User); // Function KartDrift.ItemSnowstorm.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* Victim, enum class EItemFilterResult Result); // Function KartDrift.ItemSnowstorm.MulticastAffectTo
	void MulticastActivate(); // Function KartDrift.ItemSnowstorm.MulticastActivate
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ItemSnowstorm.BeginOverlap
}; 
 
 


//Class KartDrift.ServerTimerComponent Size 264
// Inherited 176 bytes 
class UServerTimerComponent : public UActorComponent
{

 public: 
	char pad_176[88];  // Offset: 176 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSlowdownWidget Size 624
// Inherited 608 bytes 
class ULicenseSlowdownWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimation* Slowdown_Anim;  // Offset: 608 Size: 8
	char pad_616[8];  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTacticalRowWidget Size 856
// Inherited 608 bytes 
class UItemTacticalRowWidget : public UUserWidget
{

 public: 
	int32_t UniqueId;  // Offset: 608 Size: 4
	char pad_612[4];  // Offset: 612 Size: 4
	struct UImage* V_ItemImage;  // Offset: 616 Size: 8
	struct UImage* V_ItemImageSmall;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_NameText;  // Offset: 632 Size: 8
	struct UImage* V_ItemImageRight;  // Offset: 640 Size: 8
	struct USizeBox* V_RightSizeBox;  // Offset: 648 Size: 8
	struct USizeBox* V_LeftSizeBox;  // Offset: 656 Size: 8
	struct UKdTextBlock* V_TacticalStateText;  // Offset: 664 Size: 8
	struct UWidgetAnimation* Anim_In;  // Offset: 672 Size: 8
	struct UWidgetAnimation* Anim_Out;  // Offset: 680 Size: 8
	struct UWidgetAnimation* Anim_SlideUp;  // Offset: 688 Size: 8
	struct TMap<enum class EHitState, struct FText> TacticalStateTextContainer;  // Offset: 696 Size: 80
	struct TMap<enum class EHitState, struct FLinearColor> TacticalStateTextColorContainer;  // Offset: 776 Size: 80



 // Functions 
 public:
	void Succeeded(enum class EHitState HitState, struct UTexture2D* Texture, struct UTexture2D* TextureSmall, struct FText& Name); // Function KartDrift.ItemTacticalRowWidget.Succeeded
	void Failed(enum class EHitState HitState, struct UTexture2D* Texture, struct FText& Name); // Function KartDrift.ItemTacticalRowWidget.Failed
	void Clear(int32_t ID); // Function KartDrift.ItemTacticalRowWidget.Clear
}; 
 
 


//Class KartDrift.KdAccount Size 6080
// Inherited 40 bytes 
class UKdAccount : public UObject
{

 public: 
	char pad_40[328];  // Offset: 40 Size: 328
	struct UKdService* KartInst;  // Offset: 368 Size: 8
	struct UGameInstance* GameInstance;  // Offset: 376 Size: 8
	char pad_384[216];  // Offset: 384 Size: 216
	struct FServerSettingToClient serverSetting;  // Offset: 600 Size: 48
	char pad_648[104];  // Offset: 648 Size: 104
	struct UKdAccountCheatHandler* CheatHandler;  // Offset: 752 Size: 8
	struct UAccountFuncLibImpl* FuncLib;  // Offset: 760 Size: 8
	char pad_768[264];  // Offset: 768 Size: 264
	struct UKtRacingPassSet* SeasonRacingPassSet;  // Offset: 1032 Size: 8
	char pad_1040[1960];  // Offset: 1040 Size: 1960
	struct UServerConnection* ServerConnection;  // Offset: 3000 Size: 8
	char pad_3008[48];  // Offset: 3008 Size: 48
	struct UKdServerLoginTask* LoginTask;  // Offset: 3056 Size: 8
	char pad_3064[2016];  // Offset: 3064 Size: 2016
	struct UGfsServerConnection* GfsServerConnection;  // Offset: 5080 Size: 8
	struct UGfsServer* GfsServer;  // Offset: 5088 Size: 8
	char pad_5096[352];  // Offset: 5096 Size: 352
	enum class EClientState PrevClientState;  // Offset: 5448 Size: 1
	enum class EClientState NowClientState;  // Offset: 5449 Size: 1
	char pad_5450[94];  // Offset: 5450 Size: 94
	struct TMap<struct FString, struct FRaceGameResult> RaceGameResults;  // Offset: 5544 Size: 80
	char pad_5624[456];  // Offset: 5624 Size: 456



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamAiPawn Size 944
// Inherited 936 bytes 
class AItemTeamAiPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopInventoryPickupNxA Size 104
// Inherited 72 bytes 
class UPrShopInventoryPickupNxA : public UPrPacket
{

 public: 
	struct FString requestedTransactionId;  // Offset: 72 Size: 16
	struct TArray<struct FInventoryItemNxA> pickedupItems;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamGameMode Size 824
// Inherited 824 bytes 
class AItemTeamGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamGameState Size 1160
// Inherited 1144 bytes 
class AItemTeamGameState : public AKdGameState
{

 public: 
	char pad_1144[16];  // Offset: 1144 Size: 16



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.ItemTeamGameState.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.LicenseDriftCheckData Size 136
// Inherited 64 bytes 
class ULicenseDriftCheckData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<float> Distance;  // Offset: 72 Size: 16
	struct TArray<struct FVector> LeftPosition;  // Offset: 88 Size: 16
	struct TArray<struct FVector> RightPosition;  // Offset: 104 Size: 16
	float GateSize;  // Offset: 120 Size: 4
	int32_t Index;  // Offset: 124 Size: 4
	AActor* GateActorClass;  // Offset: 128 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BarricadeDistanceItemSpawn Size 136
// Inherited 104 bytes 
class UBarricadeDistanceItemSpawn : public UItemSpawningRule
{

 public: 
	char pad_104[8];  // Offset: 104 Size: 8
	struct TArray<float> Distance;  // Offset: 112 Size: 16
	int32_t Index;  // Offset: 128 Size: 4
	char pad_132[4];  // Offset: 132 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemTeamPhaseComponent Size 432
// Inherited 432 bytes 
class UItemTeamPhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemUfo Size 1424
// Inherited 856 bytes 
class AItemUfo : public AItem
{

 public: 
	struct USkeletalMeshComponent* UfoMeshComponent;  // Offset: 856 Size: 8
	struct TSoftObjectPtr<UFMODEvent> UsingSound;  // Offset: 864 Size: 40
	struct TSoftObjectPtr<UFMODEvent> AffectSound;  // Offset: 904 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> UfoMesh;  // Offset: 944 Size: 40
	struct TSoftObjectPtr<UAnimSequence> AttackBeginAnim;  // Offset: 984 Size: 40
	struct TSoftObjectPtr<UAnimSequence> AttackLoopAnim;  // Offset: 1024 Size: 40
	struct TSoftObjectPtr<UAnimSequence> AttackEndAnim;  // Offset: 1064 Size: 40
	struct TSoftObjectPtr<UAnimSequence> DefenseAnim;  // Offset: 1104 Size: 40
	struct TSoftObjectPtr<UAnimSequence> UfoUseAnim;  // Offset: 1144 Size: 40
	struct TSoftObjectPtr<UCurveFloat> HeightCurveAsset_Water;  // Offset: 1184 Size: 40
	struct TSoftObjectPtr<UCurveFloat> HeightCurveAsset_Rocket;  // Offset: 1224 Size: 40
	struct TSoftClassPtr<UObject> UFO_Bullet;  // Offset: 1264 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1304 Size: 40
	struct UCurveFloat* HeightCurve;  // Offset: 1344 Size: 8
	char pad_1352[32];  // Offset: 1352 Size: 32
	struct UItemComponent* AuthTarget;  // Offset: 1384 Size: 8
	struct UItemComponent* LocalUser;  // Offset: 1392 Size: 8
	struct UUfoReaction* AuthReaction;  // Offset: 1400 Size: 8
	struct UUfoReaction* LocalReaction;  // Offset: 1408 Size: 8
	char pad_1416[8];  // Offset: 1416 Size: 8



 // Functions 
 public:
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemUfo.MulticastNoTarget
	void MulticastEnding(); // Function KartDrift.ItemUfo.MulticastEnding
	void MulticastDefense(); // Function KartDrift.ItemUfo.MulticastDefense
	void MulticastCasting(struct UItemComponent* User, struct UItemComponent* InVictim); // Function KartDrift.ItemUfo.MulticastCasting
	void MulticastAffecting(struct UItemComponent* InVictim); // Function KartDrift.ItemUfo.MulticastAffecting
}; 
 
 


//Class KartDrift.ItemWaterfly Size 1296
// Inherited 856 bytes 
class AItemWaterfly : public AItem
{

 public: 
	char pad_856[8];  // Offset: 856 Size: 8
	struct USkeletalMeshComponent* WaterflyMeshComponent;  // Offset: 864 Size: 8
	struct UItemComponent* AuthVictim;  // Offset: 872 Size: 8
	struct TSoftObjectPtr<USkeletalMesh> WaterflyMeshAsset;  // Offset: 880 Size: 40
	struct TSoftObjectPtr<UCurveFloat> WaterflyCurveAsset;  // Offset: 920 Size: 40
	struct TSoftObjectPtr<UAnimSequence> WingAnimAsset;  // Offset: 960 Size: 40
	struct TSoftObjectPtr<UFMODEvent> FireSoundAsset;  // Offset: 1000 Size: 40
	struct TSoftObjectPtr<UFMODEvent> HitSoundAsset;  // Offset: 1040 Size: 40
	struct TSoftClassPtr<UObject> Waterfly_Bullet;  // Offset: 1080 Size: 40
	struct TSoftObjectPtr<ULevelSequence> ItemFeedSequence;  // Offset: 1120 Size: 40
	struct TSoftClassPtr<UObject> BlueAlertWidgetObj;  // Offset: 1160 Size: 40
	char pad_1200[88];  // Offset: 1200 Size: 88
	struct UItemComponent* LocalVictim;  // Offset: 1288 Size: 8



 // Functions 
 public:
	void MulticastOnHit(struct UItemComponent* InVictim); // Function KartDrift.ItemWaterfly.MulticastOnHit
	void MulticastNoTarget(struct UItemComponent* User); // Function KartDrift.ItemWaterfly.MulticastNoTarget
	void MulticastBeginCasting(struct UItemComponent* Attacker, struct UItemComponent* Victim); // Function KartDrift.ItemWaterfly.MulticastBeginCasting
	void MulticastAffectTo(struct UItemComponent* User, struct UItemComponent* Target); // Function KartDrift.ItemWaterfly.MulticastAffectTo
}; 
 
 


//Class KartDrift.JumpBuff Size 72
// Inherited 40 bytes 
class UJumpBuff : public UKartMovementBuff
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartBodyParam Size 264
// Inherited 48 bytes 
class UKartBodyParam : public UDataAsset
{

 public: 
	float Mass;  // Offset: 48 Size: 4
	float forwardAccelForce;  // Offset: 52 Size: 4
	float driftEscapeForce;  // Offset: 56 Size: 4
	float backwardAccelForce;  // Offset: 60 Size: 4
	float gripBrake;  // Offset: 64 Size: 4
	float slipBrake;  // Offset: 68 Size: 4
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool useTransformBooster : 1;  // Offset: 72 Size: 1
	char pad_73[3];  // Offset: 73 Size: 3
	float transAccelFactor;  // Offset: 76 Size: 4
	float boostAccelFactor;  // Offset: 80 Size: 4
	float normalBoosterTime;  // Offset: 84 Size: 4
	float teamBoosterTime;  // Offset: 88 Size: 4
	float animalBoosterTime;  // Offset: 92 Size: 4
	float startBoosterTime;  // Offset: 96 Size: 4
	float startBoosterTimeItem;  // Offset: 100 Size: 4
	float startBoosterTimeSpeed;  // Offset: 104 Size: 4
	float startForwardAccelFactor;  // Offset: 108 Size: 4
	float startForwardAccelFactorItem;  // Offset: 112 Size: 4
	float startForwardAccelFactorSpeed;  // Offset: 116 Size: 4
	float maxSteerDeg;  // Offset: 120 Size: 4
	float steerConstraint;  // Offset: 124 Size: 4
	float frontGripFactor;  // Offset: 128 Size: 4
	float rearGripFactor;  // Offset: 132 Size: 4
	float driftTrigFactor;  // Offset: 136 Size: 4
	float driftTrigTime;  // Offset: 140 Size: 4
	float driftSlipFactor;  // Offset: 144 Size: 4
	float cornerDrawFactor;  // Offset: 148 Size: 4
	float driftLeanFactor;  // Offset: 152 Size: 4
	float steerLeanFactor;  // Offset: 156 Size: 4
	float driftMaxGauge;  // Offset: 160 Size: 4
	float driftGaugePreservePercent;  // Offset: 164 Size: 4
	float airFriction;  // Offset: 168 Size: 4
	float dragFactor;  // Offset: 172 Size: 4
	float antiCollideBalance;  // Offset: 176 Size: 4
	float draftMulAccelFactor;  // Offset: 180 Size: 4
	uint32_t draftTick;  // Offset: 184 Size: 4
	float driftBoostMulAccelFactor;  // Offset: 188 Size: 4
	uint32_t driftBoostTick;  // Offset: 192 Size: 4
	float chargeBoostBySpeed;  // Offset: 196 Size: 4
	char pad_200_1 : 7;  // Offset: 200 Size: 1
	bool bUseExtendedAfterBooster : 1;  // Offset: 200 Size: 1
	char pad_201[3];  // Offset: 201 Size: 3
	float boostAccelFactorOnlyItem;  // Offset: 204 Size: 4
	float evadeForce;  // Offset: 208 Size: 4
	char pad_212_1 : 7;  // Offset: 212 Size: 1
	bool bMotorCycleType : 1;  // Offset: 212 Size: 1
	char pad_213[3];  // Offset: 213 Size: 3
	uint32_t speedSlotCapacity;  // Offset: 216 Size: 4
	uint32_t itemSlotCapacity;  // Offset: 220 Size: 4
	uint32_t specialSlotCapacity;  // Offset: 224 Size: 4
	float autoChargeLowSpeed;  // Offset: 228 Size: 4
	char pad_232_1 : 7;  // Offset: 232 Size: 1
	bool bTransformAutoCharge : 1;  // Offset: 232 Size: 1
	char pad_233[3];  // Offset: 233 Size: 3
	float descEngineGrade;  // Offset: 236 Size: 4
	float descBalance;  // Offset: 240 Size: 4
	float descStability;  // Offset: 244 Size: 4
	float descEnchantCap;  // Offset: 248 Size: 4
	float descCornering;  // Offset: 252 Size: 4
	float TransformTime;  // Offset: 256 Size: 4
	char pad_260[4];  // Offset: 260 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartChannelParam Size 120
// Inherited 48 bytes 
class UKartChannelParam : public UDataAsset
{

 public: 
	float Mass;  // Offset: 48 Size: 4
	float airFriction;  // Offset: 52 Size: 4
	float dragFactor;  // Offset: 56 Size: 4
	float forwardAccelForce;  // Offset: 60 Size: 4
	float backwardAccelForce;  // Offset: 64 Size: 4
	float gripBrake;  // Offset: 68 Size: 4
	float slipBrake;  // Offset: 72 Size: 4
	float maxSteerDeg;  // Offset: 76 Size: 4
	float steerConstraint;  // Offset: 80 Size: 4
	float frontGripFactor;  // Offset: 84 Size: 4
	float rearGripFactor;  // Offset: 88 Size: 4
	float driftTrigFactor;  // Offset: 92 Size: 4
	float driftTrigTime;  // Offset: 96 Size: 4
	float driftSlipFactor;  // Offset: 100 Size: 4
	float driftEscapeForce;  // Offset: 104 Size: 4
	float cornerDrawFactor;  // Offset: 108 Size: 4
	float driftMaxGauge;  // Offset: 112 Size: 4
	float transAccelFactor;  // Offset: 116 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartEffectComponent Size 1440
// Inherited 176 bytes 
class UKartEffectComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct UKartMovementReplication* Replication;  // Offset: 184 Size: 8
	char pad_192[64];  // Offset: 192 Size: 64
	struct TArray<struct UMaterialInstanceDynamic*> BoostMaterials;  // Offset: 256 Size: 16
	char pad_272[144];  // Offset: 272 Size: 144
	struct FLinearColor Rear_Light_Color;  // Offset: 416 Size: 16
	char pad_432[16];  // Offset: 432 Size: 16
	struct TArray<struct UMaterialInstanceDynamic*> AccelMaterials;  // Offset: 448 Size: 16
	char pad_464[32];  // Offset: 464 Size: 32
	struct TArray<struct UMaterialInstanceDynamic*> RearMaterials;  // Offset: 496 Size: 16
	char pad_512[24];  // Offset: 512 Size: 24
	struct AKartSkidMark* SkidMarkActor;  // Offset: 536 Size: 8
	struct UMaterialInstance* SkidMarkMaterial;  // Offset: 544 Size: 8
	struct UParticleSystem* SkidSmokeParticle;  // Offset: 552 Size: 8
	char pad_560[96];  // Offset: 560 Size: 96
	struct UKartSkeletalMeshComponent* KartSkeletalMeshComponent;  // Offset: 656 Size: 8
	struct TArray<struct UParticleSystemComponent*> ArrayAlways;  // Offset: 664 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayIdle;  // Offset: 680 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayIdleWithoutSmoke;  // Offset: 696 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayAccel;  // Offset: 712 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayWind;  // Offset: 728 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayInstanceWind;  // Offset: 744 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTransformAccel;  // Offset: 760 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostByItem_Start;  // Offset: 776 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostByItem_Loop;  // Offset: 792 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostByItem_End;  // Offset: 808 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTransformBoostByItem;  // Offset: 824 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostByDrift;  // Offset: 840 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTransformBoostByDrift;  // Offset: 856 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTrailLeft;  // Offset: 872 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTrailRight;  // Offset: 888 Size: 16
	struct TArray<struct UNiagaraComponent*> ArrayNIATrailLeft;  // Offset: 904 Size: 16
	struct TArray<struct UNiagaraComponent*> ArrayNIATrailRight;  // Offset: 920 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayDrift;  // Offset: 936 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostWheel;  // Offset: 952 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArraySkidMark;  // Offset: 968 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBrake;  // Offset: 984 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArraySlipStream;  // Offset: 1000 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayDrafting;  // Offset: 1016 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayItemCubeOverlapping;  // Offset: 1032 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostZone;  // Offset: 1048 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayBoostDelivery;  // Offset: 1064 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayTransformed;  // Offset: 1080 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArraySurfaceParticle;  // Offset: 1096 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayCrashWeakParticle;  // Offset: 1112 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayCrashStrongParticle;  // Offset: 1128 Size: 16
	struct TArray<struct UParticleSystemComponent*> ArrayLandRoadParticle;  // Offset: 1144 Size: 16
	struct UEffectPreset* EffectPreset;  // Offset: 1160 Size: 8
	struct FKartEffectEvent CurrentKartEffectEvent;  // Offset: 1168 Size: 272



 // Functions 
 public:
	void OnRecvSpec(); // Function KartDrift.KartEffectComponent.OnRecvSpec
	void Dev_SetDriftBoostParam(int32_t DriftBoostParam); // Function KartDrift.KartEffectComponent.Dev_SetDriftBoostParam
}; 
 
 


//Class KartDrift.MainmenuComponent Size 432
// Inherited 224 bytes 
class UMainmenuComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[208];  // Offset: 224 Size: 208



 // Functions 
 public:
	void OnUpdatePartyMember(enum class EPartyChageState ChangeState); // Function KartDrift.MainmenuComponent.OnUpdatePartyMember
	void OnPartyByConsoleActionMoveToLobby(); // Function KartDrift.MainmenuComponent.OnPartyByConsoleActionMoveToLobby
}; 
 
 


//Class KartDrift.KartGameUserSettings Size 1408
// Inherited 312 bytes 
class UKartGameUserSettings : public UGameUserSettings
{

 public: 
	char pad_312[88];  // Offset: 312 Size: 88
	struct FPlayerGraphicSettings GraphicSetting;  // Offset: 400 Size: 128
	struct FPlayerGraphicSettings LastGraphicSetting;  // Offset: 528 Size: 128
	struct FPlayerGameSystemSettings GameSystemSetting;  // Offset: 656 Size: 12
	struct FPlayerGameSystemSettings LastGameSystemSetting;  // Offset: 668 Size: 12
	struct FPlayerConvenienceSettings GameConvenienceSetting;  // Offset: 680 Size: 24
	struct FPlayerConvenienceSettings LastGameConvenienceSetting;  // Offset: 704 Size: 24
	struct FPlayerMobileHUDTypeSettings MobileHUDTypeSetting;  // Offset: 728 Size: 12
	struct FPlayerMobileHUDTypeSettings LastMobileHUDTypeSetting;  // Offset: 740 Size: 12
	enum class ECustomHUDDataSlotIndex LastlySavedCustomHUDDataSlotIndex;  // Offset: 752 Size: 4
	uint32_t KartVersion;  // Offset: 756 Size: 4
	float LastConfirmedFrameRateLimit;  // Offset: 760 Size: 4
	struct FPlayerAudioVolumeSettings AudioVolume;  // Offset: 764 Size: 84
	struct FPlayerAudioVolumeSettings LastAudioVolume;  // Offset: 848 Size: 84
	uint32_t InitBanchMark;  // Offset: 932 Size: 4
	int32_t CultureIndex;  // Offset: 936 Size: 4
	char pad_940_1 : 7;  // Offset: 940 Size: 1
	bool AutoPartyInviteReject : 1;  // Offset: 940 Size: 1
	char pad_941_1 : 7;  // Offset: 941 Size: 1
	bool AutoPartyJoinReject : 1;  // Offset: 941 Size: 1
	char pad_942_1 : 7;  // Offset: 942 Size: 1
	bool AutoFriendReject : 1;  // Offset: 942 Size: 1
	char pad_943[1];  // Offset: 943 Size: 1
	int32_t PlatformCultureIndex;  // Offset: 944 Size: 4
	int32_t LastCultureIndex;  // Offset: 948 Size: 4
	char pad_952_1 : 7;  // Offset: 952 Size: 1
	bool bForceFeedbackEffect : 1;  // Offset: 952 Size: 1
	char pad_953[3];  // Offset: 953 Size: 3
	int32_t LatencyType;  // Offset: 956 Size: 4
	struct FString SoundInputDeviceName;  // Offset: 960 Size: 16
	struct FString SoundOutputDeviceName;  // Offset: 976 Size: 16
	char pad_992_1 : 7;  // Offset: 992 Size: 1
	bool bSaveRecentReplay : 1;  // Offset: 992 Size: 1
	char pad_993[7];  // Offset: 993 Size: 7
	int64_t AIToRacerCheckTick;  // Offset: 1000 Size: 8
	int64_t RacerToAICheckTick;  // Offset: 1008 Size: 8
	char pad_1016_1 : 7;  // Offset: 1016 Size: 1
	bool bMustShowItemGuidePopup : 1;  // Offset: 1016 Size: 1
	char pad_1017_1 : 7;  // Offset: 1017 Size: 1
	bool bMustShowSpeedGuidePopup : 1;  // Offset: 1017 Size: 1
	char IsAlreadyShowLicenseGuidePopup;  // Offset: 1018 Size: 1
	char pad_1019[181];  // Offset: 1019 Size: 181
	struct FString IndividualSettingID;  // Offset: 1200 Size: 16
	char pad_1216[192];  // Offset: 1216 Size: 192



 // Functions 
 public:
	void SetShowOtherRiderNames(bool bEnable); // Function KartDrift.KartGameUserSettings.SetShowOtherRiderNames
	void SetShowOtherRiderLivery(bool bEnable); // Function KartDrift.KartGameUserSettings.SetShowOtherRiderLivery
	void SetReflexMode(enum class EKdReflexMode Mode); // Function KartDrift.KartGameUserSettings.SetReflexMode
	void SetLatencyType(int32_t InLatencyType); // Function KartDrift.KartGameUserSettings.SetLatencyType
	void SetForceFeedbackEffect(bool bEnable); // Function KartDrift.KartGameUserSettings.SetForceFeedbackEffect
	void SetFlashIndicatorEnabled(bool bEnabled); // Function KartDrift.KartGameUserSettings.SetFlashIndicatorEnabled
	void SetCultureIndex(int32_t Index); // Function KartDrift.KartGameUserSettings.SetCultureIndex
	void SetAutoPartyJoinReject(bool bEnable); // Function KartDrift.KartGameUserSettings.SetAutoPartyJoinReject
	void SetAutoPartyInviteReject(bool bEnable); // Function KartDrift.KartGameUserSettings.SetAutoPartyInviteReject
	void SetAutoFriendReject(bool bEnable); // Function KartDrift.KartGameUserSettings.SetAutoFriendReject
	bool GetShowOtherRiderNames(); // Function KartDrift.KartGameUserSettings.GetShowOtherRiderNames
	bool GetShowOtherRiderLivery(); // Function KartDrift.KartGameUserSettings.GetShowOtherRiderLivery
	enum class EKdReflexMode GetReflexMode(); // Function KartDrift.KartGameUserSettings.GetReflexMode
	bool GetReflexAvailable(); // Function KartDrift.KartGameUserSettings.GetReflexAvailable
	int32_t GetLatencyType(); // Function KartDrift.KartGameUserSettings.GetLatencyType
	bool GetForceFeedbackEffect(); // Function KartDrift.KartGameUserSettings.GetForceFeedbackEffect
	int32_t GetCultureIndex(); // Function KartDrift.KartGameUserSettings.GetCultureIndex
	bool GetAutoPartyJoinReject(); // Function KartDrift.KartGameUserSettings.GetAutoPartyJoinReject
	bool GetAutoPartyInviteReject(); // Function KartDrift.KartGameUserSettings.GetAutoPartyInviteReject
	bool GetAutoFriendReject(); // Function KartDrift.KartGameUserSettings.GetAutoFriendReject
	struct FString GetAnnouncementUrl(); // Function KartDrift.KartGameUserSettings.GetAnnouncementUrl
}; 
 
 


//Class KartDrift.SQDistanceWidget Size 672
// Inherited 608 bytes 
class USQDistanceWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* Text_DistanceNormal;  // Offset: 608 Size: 8
	struct UKdTextBlock* Text_DistanceWarning;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* WS_Back;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* WS_Distance;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_Alert;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_Alert_Distance;  // Offset: 648 Size: 8
	char pad_656[16];  // Offset: 656 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiverySubsystem Size 368
// Inherited 48 bytes 
class ULiverySubsystem : public UGameInstanceSubsystem
{

 public: 
	struct ASVGToolsMeshActor* SVGMeshActor;  // Offset: 48 Size: 8
	struct TArray<struct FLiveryCaptureInfo> ReservedCaptureList;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bIsCapturing : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	struct ULiveryPaintCollection* PaintCollection;  // Offset: 80 Size: 8
	char pad_88[16];  // Offset: 88 Size: 16
	struct TMap<struct FString, struct USVGToolsMesh*> SVGMeshPool;  // Offset: 104 Size: 80
	struct TArray<struct FLiveryTextureInfo> LiveryTexturePool;  // Offset: 184 Size: 16
	char pad_200[80];  // Offset: 200 Size: 80
	struct TMap<enum class ELiveryPaintType, struct FLiveryPaintTransform> LiveryPaintTransformMap;  // Offset: 280 Size: 80
	int32_t DrawLiveryFrameSkipIndex;  // Offset: 360 Size: 4
	char pad_364[4];  // Offset: 364 Size: 4



 // Functions 
 public:
	void OnRemovedLevel(struct ULevel* Level, struct UWorld* World); // Function KartDrift.LiverySubsystem.OnRemovedLevel
}; 
 
 


//Class KartDrift.KartInputSettings Size 72
// Inherited 40 bytes 
class UKartInputSettings : public UObject
{

 public: 
	struct TArray<struct FInputActionKeyMapping> DefaultActionMappings;  // Offset: 40 Size: 16
	struct TArray<struct FInputAxisKeyMapping> DefaultAxisMappings;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartMovementComponent Size 3584
// Inherited 312 bytes 
class UKartMovementComponent : public UPawnMovementComponent
{

 public: 
	char pad_312[288];  // Offset: 312 Size: 288
	struct USpecModifier* SpecModifier;  // Offset: 600 Size: 8
	struct FVector Kart_InertiaTensor;  // Offset: 608 Size: 12
	float Kart_Mass;  // Offset: 620 Size: 4
	char pad_624[232];  // Offset: 624 Size: 232
	int32_t AccumForceCount;  // Offset: 856 Size: 4
	float HitAccumStartTime;  // Offset: 860 Size: 4
	char pad_864_1 : 7;  // Offset: 864 Size: 1
	bool bLastCollision : 1;  // Offset: 864 Size: 1
	char pad_865[3];  // Offset: 865 Size: 3
	float LastUpdateCollisionTime;  // Offset: 868 Size: 4
	char pad_872[904];  // Offset: 872 Size: 904
	struct FKartSteeringExperimental KartSteeringExperimental;  // Offset: 1776 Size: 568
	char pad_2344[528];  // Offset: 2344 Size: 528
	struct FKartMovementBuffArray Buffs;  // Offset: 2872 Size: 16
	char pad_2888[328];  // Offset: 2888 Size: 328
	struct UPhysicalMaterial* SurfaceInContact;  // Offset: 3216 Size: 8
	char pad_3224[8];  // Offset: 3224 Size: 8
	struct UPhysicalMaterial* AssistPhysMaterial;  // Offset: 3232 Size: 8
	char pad_3240[344];  // Offset: 3240 Size: 344



 // Functions 
 public:
	void SetGravityFromGroundNormal(bool InActivate); // Function KartDrift.KartMovementComponent.SetGravityFromGroundNormal
	void SetDriveMode(char DriveMode); // Function KartDrift.KartMovementComponent.SetDriveMode
	void OnHitWall(struct FVector NormalImpulse, struct FHitResult& Hit, bool bHitBarricade); // Function KartDrift.KartMovementComponent.OnHitWall
	void OnComponentHitEvent(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.KartMovementComponent.OnComponentHitEvent
	void MakeImpulse(float Multiplier); // Function KartDrift.KartMovementComponent.MakeImpulse
	void DevUseBoost(int32_t Type, float Time); // Function KartDrift.KartMovementComponent.DevUseBoost
}; 
 
 


//Class KartDrift.KartSkeletalMeshComponent Size 4624
// Inherited 3856 bytes 
class UKartSkeletalMeshComponent : public USkeletalMeshComponent
{

 public: 
	char pad_3856[56];  // Offset: 3856 Size: 56
	struct UKartBodyParam* bodyParam;  // Offset: 3912 Size: 8
	char pad_3920[8];  // Offset: 3920 Size: 8
	struct FKartDesc KartDesc;  // Offset: 3928 Size: 184
	char pad_4112[376];  // Offset: 4112 Size: 376
	struct UBelongingDataAssetKartBody* KartBodyAsset;  // Offset: 4488 Size: 8
	struct USkeletalMeshComponent* FrontMesh;  // Offset: 4496 Size: 8
	struct USkeletalMeshComponent* BackMesh;  // Offset: 4504 Size: 8
	struct USkeletalMeshComponent* SideMesh;  // Offset: 4512 Size: 8
	struct TArray<struct UKartWheelComponent*> WheelMeshes;  // Offset: 4520 Size: 16
	struct USkeletalMeshComponent* HandleMesh;  // Offset: 4536 Size: 8
	struct USkeletalMeshComponent* PlateMesh;  // Offset: 4544 Size: 8
	struct UAODecalComponent* AODecalComponent;  // Offset: 4552 Size: 8
	struct UMaterialInstanceDynamic* KartBodyMaterial_ChangeBySpeed;  // Offset: 4560 Size: 8
	struct UBalloonComponent* BalloonComponent;  // Offset: 4568 Size: 8
	char pad_4576[24];  // Offset: 4576 Size: 24
	struct TArray<int32_t> LODToFrameSkip;  // Offset: 4600 Size: 16
	char pad_4616[8];  // Offset: 4616 Size: 8



 // Functions 
 public:
	void OnRep_KartDesc(); // Function KartDrift.KartSkeletalMeshComponent.OnRep_KartDesc
	void OnClientVerified(enum class EClientVerifierOrder InOrder); // Function KartDrift.KartSkeletalMeshComponent.OnClientVerified
}; 
 
 


//Class KartDrift.ScenarioConditionItemWidget Size 632
// Inherited 608 bytes 
class UScenarioConditionItemWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_Text_Title;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Text_TargetValue;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_Text_Value;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SkidMarkMeshComponent Size 1344
// Inherited 1312 bytes 
class USkidMarkMeshComponent : public UProceduralMeshComponent
{

 public: 
	char pad_1312[32];  // Offset: 1312 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdCheatHandlerBase Size 40
// Inherited 40 bytes 
class UKdCheatHandlerBase : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftMissionListEntry Size 848
// Inherited 608 bytes 
class ULicenseDriftMissionListEntry : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct ULicenseKeyGuideWidget* V_KeyGuide;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_CommandText;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Anim_Success_On;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_Success_Off;  // Offset: 640 Size: 8
	char pad_648[200];  // Offset: 648 Size: 200



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseJumpDistanceWidget Size 616
// Inherited 608 bytes 
class ULicenseJumpDistanceWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_MeterText;  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopBalanceNxA Size 104
// Inherited 72 bytes 
class UPrShopBalanceNxA : public UPrPacket
{

 public: 
	struct FString currency;  // Offset: 72 Size: 16
	struct FString totalBalance;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdAssetManager Size 1144
// Inherited 1144 bytes 
class UKdAssetManager : public UAssetManager
{

 public: 



 // Functions 
 public:
	void SetItemID(struct FString inString); // Function KartDrift.KdAssetManager.SetItemID
	void ReScanAll(); // Function KartDrift.KdAssetManager.ReScanAll
	void CreateTrackPrimaryAsset(); // Function KartDrift.KdAssetManager.CreateTrackPrimaryAsset
}; 
 
 


//Class KartDrift.SVGToolsMesh Size 600
// Inherited 40 bytes 
class USVGToolsMesh : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	enum class SVGToolsMeshType Type;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	float antialiasingWidth;  // Offset: 52 Size: 4
	float Scale;  // Offset: 56 Size: 4
	float curveQuality;  // Offset: 60 Size: 4
	float Quality;  // Offset: 64 Size: 4
	float DepthOffset;  // Offset: 68 Size: 4
	char useLight : 1;  // Offset: 72 Size: 1
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	char pad_73[4];  // Offset: 73 Size: 4
	enum class SVGToolsPivotIndex pivotIndex;  // Offset: 76 Size: 1
	char pad_77[3];  // Offset: 77 Size: 3
	struct FVector2D Pivot;  // Offset: 80 Size: 8
	float colliderMargin;  // Offset: 88 Size: 4
	float colliderQuality;  // Offset: 92 Size: 4
	float colliderThickness;  // Offset: 96 Size: 4
	char generateCollider : 1;  // Offset: 100 Size: 1
	char pad_100_1 : 7;  // Offset: 100 Size: 1
	char pad_101[4];  // Offset: 101 Size: 4
	uint32_t materialFlags;  // Offset: 104 Size: 4
	char pad_108[4];  // Offset: 108 Size: 4
	struct FString svgData;  // Offset: 112 Size: 16
	struct UMaterialInterface* pMaterial[2];  // Offset: 128 Size: 16
	struct UTexture2D* pTexture;  // Offset: 144 Size: 8
	struct UBodySetup* pBodySetup;  // Offset: 152 Size: 8
	struct FBoxSphereBounds Bounds;  // Offset: 160 Size: 28
	uint32_t firstIndex[2];  // Offset: 188 Size: 8
	uint32_t numPrimitives[2];  // Offset: 196 Size: 8
	int32_t numMaterials;  // Offset: 204 Size: 4
	int32_t NumVertices;  // Offset: 208 Size: 4
	char use32Bit : 1;  // Offset: 212 Size: 1
	char pad_212_1 : 7;  // Offset: 212 Size: 1
	char pad_213[308];  // Offset: 213 Size: 308
	struct UMaterial* SVG_MATERIAL_PATHObj;  // Offset: 520 Size: 8
	struct UMaterial* SVG_TEX_MATERIAL_PATHObj;  // Offset: 528 Size: 8
	struct UMaterial* SVG_TEX_RAD_MATERIAL_PATHObj;  // Offset: 536 Size: 8
	struct UMaterial* SVG_TEX_FOCAL_MATERIAL_PATHObj;  // Offset: 544 Size: 8
	struct UMaterial* SVG_TEX_RAD_PAD_MATERIAL_PATHObj;  // Offset: 552 Size: 8
	struct UMaterial* SVG_TEX_RAD_REFLECT_MATERIAL_PATHObj;  // Offset: 560 Size: 8
	struct UMaterial* SVG_TEX_RAD_SELECT_MATERIAL_PATHObj;  // Offset: 568 Size: 8
	struct UMaterial* SVG_TEX_FOCAL_PAD_MATERIAL_PATHObj;  // Offset: 576 Size: 8
	struct UMaterial* SVG_TEX_FOCAL_REFLECT_MATERIAL_PATHObj;  // Offset: 584 Size: 8
	struct UMaterial* SVG_TEX_FOCAL_SELECT_MATERIAL_PATHObj;  // Offset: 592 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCoin Size 568
// Inherited 544 bytes 
class ALicenseCoin : public AActor
{

 public: 
	char pad_544[8];  // Offset: 544 Size: 8
	struct USphereComponent* CollisionComponent;  // Offset: 552 Size: 8
	struct UStaticMeshComponent* CoinMesh;  // Offset: 560 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackPrimaryData Size 168
// Inherited 48 bytes 
class UTrackPrimaryData : public UPrimaryDataAsset
{

 public: 
	struct TSoftObjectPtr<UWorld> MainLevel;  // Offset: 48 Size: 40
	struct TSoftObjectPtr<UTexture2D> LoadingTexture;  // Offset: 88 Size: 40
	struct TSoftObjectPtr<UTexture2D> MinimapTexture;  // Offset: 128 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAIMissionActorData Size 128
// Inherited 64 bytes 
class ULicenseAIMissionActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FText> LicenseSpawnActorDataList;  // Offset: 64 Size: 16
	struct TArray<struct FVector> AIPawnOffset;  // Offset: 80 Size: 16
	float AIPawnSpacing_KnockoutMode;  // Offset: 96 Size: 4
	float Speed;  // Offset: 100 Size: 4
	float Delay;  // Offset: 104 Size: 4
	enum class EAIMissionType missionType;  // Offset: 108 Size: 1
	char pad_109[3];  // Offset: 109 Size: 3
	float SuccessDistance;  // Offset: 112 Size: 4
	float WarningDistance;  // Offset: 116 Size: 4
	float KnockOutTime;  // Offset: 120 Size: 4
	char pad_124_1 : 7;  // Offset: 124 Size: 1
	bool bUseShadowIfAvailable : 1;  // Offset: 124 Size: 1
	char pad_125[3];  // Offset: 125 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchSteeringButton Size 712
// Inherited 696 bytes 
class UTouchSteeringButton : public UTouchInputButton
{

 public: 
	char pad_696_1 : 7;  // Offset: 696 Size: 1
	bool bLeft : 1;  // Offset: 696 Size: 1
	char pad_697[7];  // Offset: 697 Size: 7
	struct UNamedSlot* V_KeyGuideSlot;  // Offset: 704 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MiniGameDialog Size 1152
// Inherited 816 bytes 
class UMiniGameDialog : public UDialogTemplate
{

 public: 
	char pad_816[100];  // Offset: 816 Size: 100
	float GameTime;  // Offset: 916 Size: 4
	float AllCardOpenWaitTime;  // Offset: 920 Size: 4
	float AllCardRewindWaitTime;  // Offset: 924 Size: 4
	int32_t MatchedScore;  // Offset: 928 Size: 4
	char pad_932[36];  // Offset: 932 Size: 36
	struct TSoftObjectPtr<UDataTable> GameTimeDataTable;  // Offset: 968 Size: 40
	char pad_1008[16];  // Offset: 1008 Size: 16
	struct TSoftObjectPtr<UDataTable> CardImageDataTable;  // Offset: 1024 Size: 40
	char pad_1064[88];  // Offset: 1064 Size: 88



 // Functions 
 public:
	void StartGame(int32_t InIndex); // Function KartDrift.MiniGameDialog.StartGame
	void OnStartAnimationFinished(); // Function KartDrift.MiniGameDialog.OnStartAnimationFinished
	void OnReStartOffAnimationFinished(); // Function KartDrift.MiniGameDialog.OnReStartOffAnimationFinished
	void OnCardSetAnimationFinished(); // Function KartDrift.MiniGameDialog.OnCardSetAnimationFinished
	void OnCardRewindAnimationFinished(); // Function KartDrift.MiniGameDialog.OnCardRewindAnimationFinished
	void OnCardOpenAnimationFinished(); // Function KartDrift.MiniGameDialog.OnCardOpenAnimationFinished
	void OnCardMatchAnimationFinished(); // Function KartDrift.MiniGameDialog.OnCardMatchAnimationFinished
	void MatchTheCards(int32_t InIndex); // Function KartDrift.MiniGameDialog.MatchTheCards
	void CloseDialog(int32_t InIndex); // Function KartDrift.MiniGameDialog.CloseDialog
	void ButtonOff(int32_t InIndex); // Function KartDrift.MiniGameDialog.ButtonOff
}; 
 
 


//Class KartDrift.KdImage Size 616
// Inherited 528 bytes 
class UKdImage : public UImage
{

 public: 
	struct FMulticastInlineDelegate OnStreamingStarted;  // Offset: 528 Size: 16
	struct FMulticastInlineDelegate OnStreamingComplete;  // Offset: 544 Size: 16
	char pad_560[16];  // Offset: 560 Size: 16
	struct FDataTableRowHandle ColorTableSet;  // Offset: 576 Size: 16
	char pad_592[8];  // Offset: 592 Size: 8
	enum class ESlateVisibility StartStreamingVisibility;  // Offset: 600 Size: 1
	enum class ESlateVisibility CompleteStreamingVisibility;  // Offset: 601 Size: 1
	char pad_602[2];  // Offset: 602 Size: 2
	struct TWeakObjectPtr<UWidget> Throbber;  // Offset: 604 Size: 8
	char pad_612[4];  // Offset: 612 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OptionLogicComponent Size 408
// Inherited 224 bytes 
class UOptionLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[64];  // Offset: 224 Size: 64
	struct UMuteableVolume* MasterVolume;  // Offset: 288 Size: 8
	struct UMuteableVolume* BGMVolume;  // Offset: 296 Size: 8
	struct UMuteableVolume* EffectAllVolume;  // Offset: 304 Size: 8
	struct UMuteableVolume* EffectKartVolume;  // Offset: 312 Size: 8
	struct UMuteableVolume* EffectCharacterVolume;  // Offset: 320 Size: 8
	struct UMuteableVolume* EffectAmbientVolume;  // Offset: 328 Size: 8
	struct UMuteableVolume* EffectInGameVolume;  // Offset: 336 Size: 8
	struct UMuteableVolume* EffectUIVolume;  // Offset: 344 Size: 8
	char pad_352[56];  // Offset: 352 Size: 56



 // Functions 
 public:
	void OnShowToyPlate(bool bPause); // Function KartDrift.OptionLogicComponent.OnShowToyPlate
	void OnAccountUnlinkSucceed(); // Function KartDrift.OptionLogicComponent.OnAccountUnlinkSucceed
}; 
 
 


//Class KartDrift.KdCheatManager Size 568
// Inherited 136 bytes 
class UKdCheatManager : public UCheatManager
{

 public: 
	char pad_136[16];  // Offset: 136 Size: 16
	struct ACheckPoint* Last;  // Offset: 152 Size: 8
	struct UUserWidget* CheatWidget;  // Offset: 160 Size: 8
	struct TSoftClassPtr<UObject> CheatWidgetClass;  // Offset: 168 Size: 40
	char pad_208[40];  // Offset: 208 Size: 40
	struct UBuildCaptureWidget* BuildCaptureWidget;  // Offset: 248 Size: 8
	char pad_256[48];  // Offset: 256 Size: 48
	struct UUserWidget* StartBoostGaugeWidget;  // Offset: 304 Size: 8
	char pad_312[96];  // Offset: 312 Size: 96
	struct USQWidgetCheat* SQWidgetCheat;  // Offset: 408 Size: 8
	char pad_416[40];  // Offset: 416 Size: 40
	struct UUserWidget* ResolutionWidget;  // Offset: 456 Size: 8
	struct UOptionPageWidget* OptionPageWidget;  // Offset: 464 Size: 8
	char pad_472[48];  // Offset: 472 Size: 48
	struct UUserWidget* ProfilerWidget;  // Offset: 520 Size: 8
	struct TSoftClassPtr<UObject> ProfilerWidgetClass;  // Offset: 528 Size: 40



 // Functions 
 public:
	void PsoCollectMap(); // Function KartDrift.KdCheatManager.PsoCollectMap
	void PsoCollectChar(); // Function KartDrift.KdCheatManager.PsoCollectChar
	void Dev_WorldRenderingFlag(bool bInEnable); // Function KartDrift.KdCheatManager.Dev_WorldRenderingFlag
	void Dev_ToggleProfiler(); // Function KartDrift.KdCheatManager.Dev_ToggleProfiler
	void Dev_ToggleCheatWidget(); // Function KartDrift.KdCheatManager.Dev_ToggleCheatWidget
	void Dev_ToggleBuildCaptureWidget(); // Function KartDrift.KdCheatManager.Dev_ToggleBuildCaptureWidget
	void Dev_TMITickLogLatency(float InLatency); // Function KartDrift.KdCheatManager.Dev_TMITickLogLatency
	void Dev_Taunt(); // Function KartDrift.KdCheatManager.Dev_Taunt
	void Dev_StraightWinCount(int32_t InCount); // Function KartDrift.KdCheatManager.Dev_StraightWinCount
	void Dev_StopMoviePlay(); // Function KartDrift.KdCheatManager.Dev_StopMoviePlay
	void Dev_StartUnrealReplay(struct FString ReplayName); // Function KartDrift.KdCheatManager.Dev_StartUnrealReplay
	void Dev_StartReplay(bool bStart); // Function KartDrift.KdCheatManager.Dev_StartReplay
	void Dev_StartRecord(bool bStart); // Function KartDrift.KdCheatManager.Dev_StartRecord
	void Dev_SpeedHack(); // Function KartDrift.KdCheatManager.Dev_SpeedHack
	void Dev_SpawnNXBuildCapture(); // Function KartDrift.KdCheatManager.Dev_SpawnNXBuildCapture
	void Dev_SimpleAODecalVisibility(bool Value); // Function KartDrift.KdCheatManager.Dev_SimpleAODecalVisibility
	void Dev_SimpleAODecalMaxOpacity(float Value); // Function KartDrift.KdCheatManager.Dev_SimpleAODecalMaxOpacity
	void Dev_SimpleAODecalMaxDist(float Value); // Function KartDrift.KdCheatManager.Dev_SimpleAODecalMaxDist
	void Dev_ShowStraightWinCount(); // Function KartDrift.KdCheatManager.Dev_ShowStraightWinCount
	void Dev_ShowStartBoostGaugeWidget(); // Function KartDrift.KdCheatManager.Dev_ShowStartBoostGaugeWidget
	void Dev_ShowSQTimeWidgetWithDistance(float TimeRadius, int32_t DistancePoint, int32_t DistanceRadius); // Function KartDrift.KdCheatManager.Dev_ShowSQTimeWidgetWithDistance
	void Dev_ShowSQTimeWidget(float Radius); // Function KartDrift.KdCheatManager.Dev_ShowSQTimeWidget
	void Dev_ShowSQDistanceWidget(int32_t DistancePoint, int32_t DistanceRadius); // Function KartDrift.KdCheatManager.Dev_ShowSQDistanceWidget
	void Dev_ShowPersonalResultWidget(int32_t PlayerCount); // Function KartDrift.KdCheatManager.Dev_ShowPersonalResultWidget
	void Dev_ShowMiniGameDialog(); // Function KartDrift.KdCheatManager.Dev_ShowMiniGameDialog
	void Dev_ShowLoadingScreen(int32_t TipPoolId); // Function KartDrift.KdCheatManager.Dev_ShowLoadingScreen
	void Dev_SetWinningStreak(int32_t Index); // Function KartDrift.KdCheatManager.Dev_SetWinningStreak
	void Dev_SetWASDInputs(bool bWASD); // Function KartDrift.KdCheatManager.Dev_SetWASDInputs
	void Dev_SetValue(struct FString VariableName, struct FString Value); // Function KartDrift.KdCheatManager.Dev_SetValue
	void Dev_SetSQTime(float Time); // Function KartDrift.KdCheatManager.Dev_SetSQTime
	void Dev_SetSQDistance(int32_t Distance); // Function KartDrift.KdCheatManager.Dev_SetSQDistance
	void Dev_SetRetireCount(int32_t Index); // Function KartDrift.KdCheatManager.Dev_SetRetireCount
	void Dev_SetRandomPlayMission(); // Function KartDrift.KdCheatManager.Dev_SetRandomPlayMission
	void Dev_SetRacerToAICheckTick(int64_t InTick); // Function KartDrift.KdCheatManager.Dev_SetRacerToAICheckTick
	void Dev_SetPlayMission(int32_t playMissionId); // Function KartDrift.KdCheatManager.Dev_SetPlayMission
	void Dev_SetPersonalResultPlayerInfo(int32_t PlayerNumber, int32_t rank, float RemainingDistance); // Function KartDrift.KdCheatManager.Dev_SetPersonalResultPlayerInfo
	void Dev_SetMasterPose(); // Function KartDrift.KdCheatManager.Dev_SetMasterPose
	void Dev_SetHiddenContent(enum class EContentType ContentType, bool bIsHidden); // Function KartDrift.KdCheatManager.Dev_SetHiddenContent
	void Dev_SetDisableContent(enum class EContentType ContentType, bool bIsDisable); // Function KartDrift.KdCheatManager.Dev_SetDisableContent
	void Dev_SetAIToRacerCheckTick(int64_t InTick); // Function KartDrift.KdCheatManager.Dev_SetAIToRacerCheckTick
	void Dev_SetAITeleport(float InputKey, float Speed); // Function KartDrift.KdCheatManager.Dev_SetAITeleport
	void Dev_ServerTravel(); // Function KartDrift.KdCheatManager.Dev_ServerTravel
	void Dev_ScenarioSetConditionCountToActivate(int32_t InValue); // Function KartDrift.KdCheatManager.Dev_ScenarioSetConditionCountToActivate
	void Dev_ScenarioResetScenario(struct FString InCategoryID, struct FString InGroupID, struct FString InScenarioID); // Function KartDrift.KdCheatManager.Dev_ScenarioResetScenario
	void Dev_ScenarioPrintKartBodyData(); // Function KartDrift.KdCheatManager.Dev_ScenarioPrintKartBodyData
	void Dev_ScenarioPawnPhysic(bool bInEnable); // Function KartDrift.KdCheatManager.Dev_ScenarioPawnPhysic
	void Dev_ScenarioPause(bool bPause); // Function KartDrift.KdCheatManager.Dev_ScenarioPause
	void Dev_ScenarioMode(); // Function KartDrift.KdCheatManager.Dev_ScenarioMode
	void Dev_ScenarioGroupStart(struct FString InGroupID); // Function KartDrift.KdCheatManager.Dev_ScenarioGroupStart
	void Dev_ScenarioActivateGroup(struct FString InCategoryID, struct FString InGroupID); // Function KartDrift.KdCheatManager.Dev_ScenarioActivateGroup
	void Dev_SaveRecord(int32_t Index); // Function KartDrift.KdCheatManager.Dev_SaveRecord
	void Dev_RetirePersonalResultPlayer(int32_t PlayerNumber, float RemainingDistance); // Function KartDrift.KdCheatManager.Dev_RetirePersonalResultPlayer
	void Dev_RaceGameEx(struct FName LevelName, int32_t raceType, struct FString Params); // Function KartDrift.KdCheatManager.Dev_RaceGameEx
	void Dev_RaceGame(struct FName LevelName); // Function KartDrift.KdCheatManager.Dev_RaceGame
	void Dev_RaceFinish(); // Function KartDrift.KdCheatManager.Dev_RaceFinish
	void Dev_PretendSTTReceived(struct FString Message, struct FString accountId); // Function KartDrift.KdCheatManager.Dev_PretendSTTReceived
	void Dev_PlayMajorPodiumSequence(enum class EMajorPodiumSequenceType InType); // Function KartDrift.KdCheatManager.Dev_PlayMajorPodiumSequence
	void Dev_PlayMajorIntroSequence(enum class EMajorIntroSequenceType InType); // Function KartDrift.KdCheatManager.Dev_PlayMajorIntroSequence
	void Dev_PlayMajorFinishSequence(); // Function KartDrift.KdCheatManager.Dev_PlayMajorFinishSequence
	void DEV_PlayCharacterMontage(enum class ECharacterMontage InMontage); // Function KartDrift.KdCheatManager.DEV_PlayCharacterMontage
	void Dev_PGOProfile(); // Function KartDrift.KdCheatManager.Dev_PGOProfile
	void Dev_PauseReplay(bool bPause); // Function KartDrift.KdCheatManager.Dev_PauseReplay
	void Dev_PauseGame(bool bPause); // Function KartDrift.KdCheatManager.Dev_PauseGame
	void Dev_OverrideTotalTime(int32_t Minute, int32_t Second, int32_t Millisecond); // Function KartDrift.KdCheatManager.Dev_OverrideTotalTime
	void Dev_OverlapItemCube(int32_t Index); // Function KartDrift.KdCheatManager.Dev_OverlapItemCube
	void Dev_OpenShadowQuest(struct FString ReplayFileName, int32_t SubGameMode, int32_t ShadowStartTime, int32_t MaxDistance, int32_t TimeLimit); // Function KartDrift.KdCheatManager.Dev_OpenShadowQuest
	void Dev_OpenResolution(); // Function KartDrift.KdCheatManager.Dev_OpenResolution
	void Dev_OpenProfiler(); // Function KartDrift.KdCheatManager.Dev_OpenProfiler
	void Dev_OpenOptions(); // Function KartDrift.KdCheatManager.Dev_OpenOptions
	void Dev_OpenLiveryReportViewer(); // Function KartDrift.KdCheatManager.Dev_OpenLiveryReportViewer
	void Dev_OpenLicense(int32_t ID); // Function KartDrift.KdCheatManager.Dev_OpenLicense
	void Dev_OpenAllLevelAutoDrive(); // Function KartDrift.KdCheatManager.Dev_OpenAllLevelAutoDrive
	void Dev_MoveToEndOfReplay(); // Function KartDrift.KdCheatManager.Dev_MoveToEndOfReplay
	void Dev_LogoutReason(struct FString Reason); // Function KartDrift.KdCheatManager.Dev_LogoutReason
	void Dev_LogCurrentPhase(); // Function KartDrift.KdCheatManager.Dev_LogCurrentPhase
	void Dev_LogAccountIdsInChannel(); // Function KartDrift.KdCheatManager.Dev_LogAccountIdsInChannel
	void Dev_LoadTrackAsset(struct FString TrackName); // Function KartDrift.KdCheatManager.Dev_LoadTrackAsset
	void Dev_LoadReplay(int32_t Index); // Function KartDrift.KdCheatManager.Dev_LoadReplay
	void Dev_LoadLocalizedTextFile(); // Function KartDrift.KdCheatManager.Dev_LoadLocalizedTextFile
	void Dev_LicenseNoticePopupReset(); // Function KartDrift.KdCheatManager.Dev_LicenseNoticePopupReset
	void Dev_InitializeTableManager(); // Function KartDrift.KdCheatManager.Dev_InitializeTableManager
	void Dev_HideUIType2(bool bHide); // Function KartDrift.KdCheatManager.Dev_HideUIType2
	void Dev_HideUIType1(bool bHide); // Function KartDrift.KdCheatManager.Dev_HideUIType1
	void Dev_HideUIAll(bool bHide); // Function KartDrift.KdCheatManager.Dev_HideUIAll
	void Dev_HideStartBoostGaugeWidget(); // Function KartDrift.KdCheatManager.Dev_HideStartBoostGaugeWidget
	void Dev_HideNameTag(bool bHide); // Function KartDrift.KdCheatManager.Dev_HideNameTag
	void Dev_HideCategory(int32_t CategoryID, int32_t IsVisible); // Function KartDrift.KdCheatManager.Dev_HideCategory
	void Dev_GoToReplayTimeSeconds(float TargetTimeSecond); // Function KartDrift.KdCheatManager.Dev_GoToReplayTimeSeconds
	void Dev_GetValue(struct FString VariableName); // Function KartDrift.KdCheatManager.Dev_GetValue
	void Dev_GetRightItem(); // Function KartDrift.KdCheatManager.Dev_GetRightItem
	void Dev_GetLeftItem(); // Function KartDrift.KdCheatManager.Dev_GetLeftItem
	void Dev_GetItem(char Type); // Function KartDrift.KdCheatManager.Dev_GetItem
	void Dev_GenerateMajorDummyPodiumData(bool bInDiet); // Function KartDrift.KdCheatManager.Dev_GenerateMajorDummyPodiumData
	void Dev_ForceStart(); // Function KartDrift.KdCheatManager.Dev_ForceStart
	void Dev_ForceForegroundEvent(); // Function KartDrift.KdCheatManager.Dev_ForceForegroundEvent
	void Dev_ForceCrashTest(); // Function KartDrift.KdCheatManager.Dev_ForceCrashTest
	void Dev_ForceBackgroundEvent(); // Function KartDrift.KdCheatManager.Dev_ForceBackgroundEvent
	void Dev_FinishPersonalResultPlayer(int32_t PlayerNumber, int32_t rank, float FinishTime); // Function KartDrift.KdCheatManager.Dev_FinishPersonalResultPlayer
	void Dev_FindUnrealReplay(); // Function KartDrift.KdCheatManager.Dev_FindUnrealReplay
	void Dev_EnableReflex(char Mode); // Function KartDrift.KdCheatManager.Dev_EnableReflex
	void Dev_DropFromAir(float Height); // Function KartDrift.KdCheatManager.Dev_DropFromAir
	void Dev_DisconnectPersonalResultPlayer(int32_t PlayerNumber); // Function KartDrift.KdCheatManager.Dev_DisconnectPersonalResultPlayer
	void Dev_Disconnect(); // Function KartDrift.KdCheatManager.Dev_Disconnect
	void Dev_DestroyNXBuildCapture(); // Function KartDrift.KdCheatManager.Dev_DestroyNXBuildCapture
	void Dev_DebugRecord(); // Function KartDrift.KdCheatManager.Dev_DebugRecord
	void Dev_CommitTrack(); // Function KartDrift.KdCheatManager.Dev_CommitTrack
	void Dev_CloseProfiler(); // Function KartDrift.KdCheatManager.Dev_CloseProfiler
	void Dev_ClearMajorDummyPodiumData(); // Function KartDrift.KdCheatManager.Dev_ClearMajorDummyPodiumData
	void Dev_ChangeSkidMark(int32_t ItemId); // Function KartDrift.KdCheatManager.Dev_ChangeSkidMark
	void Dev_ChangeShadowPawnOpacity(float Opacity); // Function KartDrift.KdCheatManager.Dev_ChangeShadowPawnOpacity
	void Dev_ChangeReplayFriendlyName(struct FString ReplayName, struct FString NewFriendlyName); // Function KartDrift.KdCheatManager.Dev_ChangeReplayFriendlyName
	void Dev_ChangePlatform_All(int32_t platform); // Function KartDrift.KdCheatManager.Dev_ChangePlatform_All
	void Dev_ChangePlatform(int32_t ID1, int32_t ID2, int32_t ID3, int32_t ID4, int32_t ID5, int32_t ID6, int32_t ID7, int32_t ID8); // Function KartDrift.KdCheatManager.Dev_ChangePlatform
	void Dev_ChangeKartParts(enum class ETableType Type, struct FString Key); // Function KartDrift.KdCheatManager.Dev_ChangeKartParts
	void Dev_ChangeID_List(struct FString ID1, struct FString ID2, struct FString ID3, struct FString ID4, struct FString ID5, struct FString ID6, struct FString ID7, struct FString ID8); // Function KartDrift.KdCheatManager.Dev_ChangeID_List
	void Dev_ChangeCostume(struct FString ID); // Function KartDrift.KdCheatManager.Dev_ChangeCostume
	void Dev_BroadcastVoiceStatusChange(struct FString accountId, int32_t status); // Function KartDrift.KdCheatManager.Dev_BroadcastVoiceStatusChange
	void Dev_BoosterDistance(int32_t Distance); // Function KartDrift.KdCheatManager.Dev_BoosterDistance
	void Dev_BeginnerCare(bool bInEnable); // Function KartDrift.KdCheatManager.Dev_BeginnerCare
	void Dev_AssistOptionsAll(bool bEnable); // Function KartDrift.KdCheatManager.Dev_AssistOptionsAll
	void Dev_AssistOptions(int32_t Options, bool bEnable); // Function KartDrift.KdCheatManager.Dev_AssistOptions
	void Dev_AODecalMaxOpacity(float Value); // Function KartDrift.KdCheatManager.Dev_AODecalMaxOpacity
	void Dev_AODecalMaxDist(float Value); // Function KartDrift.KdCheatManager.Dev_AODecalMaxDist
	void Dev_AffectItem(enum class EItemType ItemType); // Function KartDrift.KdCheatManager.Dev_AffectItem
	void Dev_AddNoticeMessage(struct FText NoticeMessage); // Function KartDrift.KdCheatManager.Dev_AddNoticeMessage
}; 
 
 


//Class KartDrift.KdCheatHandler Size 72
// Inherited 40 bytes 
class UKdCheatHandler : public UKdCheatHandlerBase
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdCheatService Size 80
// Inherited 48 bytes 
class UKdCheatService : public UGameInstanceSubsystem
{

 public: 
	struct TArray<struct UKdCheatHandlerBase*> Handlers;  // Offset: 48 Size: 16
	char pad_64[16];  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdCineCameraActor Size 2336
// Inherited 2176 bytes 
class AKdCineCameraActor : public ACineCameraActor
{

 public: 
	enum class ECineCameraActorType LookAtActorType;  // Offset: 2176 Size: 1
	char pad_2177_1 : 7;  // Offset: 2177 Size: 1
	bool LookAtCharacter : 1;  // Offset: 2177 Size: 1
	char pad_2178[2];  // Offset: 2178 Size: 2
	float FOV;  // Offset: 2180 Size: 4
	char pad_2184_1 : 7;  // Offset: 2184 Size: 1
	bool UseUserFOV : 1;  // Offset: 2184 Size: 1
	char pad_2185_1 : 7;  // Offset: 2185 Size: 1
	bool bAttachToDriveCamera : 1;  // Offset: 2185 Size: 1
	enum class ECineCameraActorType PrevLookAtActorType;  // Offset: 2186 Size: 1
	char pad_2187[5];  // Offset: 2187 Size: 5
	struct AActor* LookAtActor;  // Offset: 2192 Size: 8
	struct AActor* DriveCameraActor;  // Offset: 2200 Size: 8
	struct FVector PrevLookAtActorLocation;  // Offset: 2208 Size: 12
	char pad_2220_1 : 7;  // Offset: 2220 Size: 1
	bool bUseLookAtActorByTransfromOriginActor : 1;  // Offset: 2220 Size: 1
	char pad_2221[3];  // Offset: 2221 Size: 3
	struct FTransform TransformOrigin;  // Offset: 2224 Size: 48
	char pad_2272_1 : 7;  // Offset: 2272 Size: 1
	bool bPrevUseLookAtActorByTransformOriginActor : 1;  // Offset: 2272 Size: 1
	char pad_2273[15];  // Offset: 2273 Size: 15
	struct FTransform PrevTransformOrigin;  // Offset: 2288 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovementInterface Size 40
// Inherited 40 bytes 
class UMovementInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdControllerConnection Size 80
// Inherited 48 bytes 
class UKdControllerConnection : public UGameInstanceSubsystem
{

 public: 
	char pad_48[32];  // Offset: 48 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MultiplayTestPlayerController Size 1440
// Inherited 1408 bytes 
class AMultiplayTestPlayerController : public APlayerController
{

 public: 
	struct FString SessionApiAddr;  // Offset: 1408 Size: 16
	struct UHttpServerRequester* SessionApiServer;  // Offset: 1424 Size: 8
	char pad_1432_1 : 7;  // Offset: 1432 Size: 1
	bool bRequestSent : 1;  // Offset: 1432 Size: 1
	char pad_1433[7];  // Offset: 1433 Size: 7



 // Functions 
 public:
	void SendCreateSessionRequest(struct FString RegionId); // Function KartDrift.MultiplayTestPlayerController.SendCreateSessionRequest
}; 
 
 


//Class KartDrift.KdDPICustomScalingRule Size 40
// Inherited 40 bytes 
class UKdDPICustomScalingRule : public UDPICustomScalingRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdForceFeedbackComponent Size 184
// Inherited 176 bytes 
class UKdForceFeedbackComponent : public UActorComponent
{

 public: 
	char pad_176_1 : 7;  // Offset: 176 Size: 1
	bool bActiveForceFeedback : 1;  // Offset: 176 Size: 1
	char pad_177[7];  // Offset: 177 Size: 7



 // Functions 
 public:
	void StopForceFeedback(struct FName Name); // Function KartDrift.KdForceFeedbackComponent.StopForceFeedback
	void SetActiveForceFeedback(bool bActive); // Function KartDrift.KdForceFeedbackComponent.SetActiveForceFeedback
	void PlayForceFeedback(struct FName Name); // Function KartDrift.KdForceFeedbackComponent.PlayForceFeedback
}; 
 
 


//Class KartDrift.KdGameInstance Size 448
// Inherited 424 bytes 
class UKdGameInstance : public UGameInstance
{

 public: 
	struct FString InitCheatConfig;  // Offset: 424 Size: 16
	struct UKdService* KdService;  // Offset: 440 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RequestResultData Size 72
// Inherited 72 bytes 
class URequestResultData : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdImageTextBlock Size 1992
// Inherited 1928 bytes 
class UKdImageTextBlock : public UKdTextBlock
{

 public: 
	struct FName State;  // Offset: 1928 Size: 8
	float ImageScale;  // Offset: 1936 Size: 4
	char pad_1940[4];  // Offset: 1940 Size: 4
	struct UKdTextImageDecoratorAsset* DecoratorAsset;  // Offset: 1944 Size: 8
	struct UKeyTextureMap2* KeyTextureMap;  // Offset: 1952 Size: 8
	struct UKeyTextureMap2* KeyTextureMap_XBox;  // Offset: 1960 Size: 8
	struct UKeyTextureMap2* KeyTextureMap_DualShock;  // Offset: 1968 Size: 8
	UUserWidget* InlineWidgetClass;  // Offset: 1976 Size: 8
	char pad_1984_1 : 7;  // Offset: 1984 Size: 1
	bool bIsButtonText : 1;  // Offset: 1984 Size: 1
	char pad_1985[7];  // Offset: 1985 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackGuide Size 1056
// Inherited 544 bytes 
class ATrackGuide : public AActor
{

 public: 
	struct USplineComponent* SplineGuideComponent;  // Offset: 544 Size: 8
	float ArrowInterval;  // Offset: 552 Size: 4
	char pad_556_1 : 7;  // Offset: 556 Size: 1
	bool IsClosedLoop : 1;  // Offset: 556 Size: 1
	char pad_557_1 : 7;  // Offset: 557 Size: 1
	bool bShowAll : 1;  // Offset: 557 Size: 1
	char pad_558_1 : 7;  // Offset: 558 Size: 1
	bool bUseClosestPoint : 1;  // Offset: 558 Size: 1
	char pad_559[1];  // Offset: 559 Size: 1
	float TrackGuideWidthScale;  // Offset: 560 Size: 4
	int32_t SplitStartIndex;  // Offset: 564 Size: 4
	int32_t SplitIndex;  // Offset: 568 Size: 4
	char pad_572[4];  // Offset: 572 Size: 4
	struct TArray<struct FVector2D> SubPathSpline;  // Offset: 576 Size: 16
	struct FVector SubPathSplineOffset;  // Offset: 592 Size: 12
	char pad_604[4];  // Offset: 604 Size: 4
	struct TSoftObjectPtr<UStaticMesh> SplineMesh;  // Offset: 608 Size: 40
	struct TSoftObjectPtr<UMaterial> SplineMeshMaterial;  // Offset: 648 Size: 40
	struct TSoftObjectPtr<UStaticMesh> MergedSplineMesh;  // Offset: 688 Size: 40
	char pad_728[24];  // Offset: 728 Size: 24
	struct TArray<struct USplineMeshComponent*> SplineMeshComponentArray;  // Offset: 752 Size: 16
	struct TArray<struct USplineComponent*> SplitSplines;  // Offset: 768 Size: 16
	struct TArray<struct USplineComponent*> Spline_SubPath;  // Offset: 784 Size: 16
	struct TMap<struct FString, struct USplineComponent*> ShortCutSplines;  // Offset: 800 Size: 80
	struct USplineComponent* Spline_RecordPath;  // Offset: 880 Size: 8
	int32_t LastSaveTrackGuideVersion;  // Offset: 888 Size: 4
	char pad_892[4];  // Offset: 892 Size: 4
	struct FVector LastPosition;  // Offset: 896 Size: 12
	char pad_908[12];  // Offset: 908 Size: 12
	struct UMaterialInstanceDynamic* MergedSplineMeshMaterialDynamic;  // Offset: 920 Size: 8
	char pad_928[128];  // Offset: 928 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdLevelLoader Size 304
// Inherited 48 bytes 
class UKdLevelLoader : public UGameInstanceSubsystem
{

 public: 
	struct FMulticastInlineDelegate OnAllCompleteLoading;  // Offset: 48 Size: 16
	struct FMulticastInlineDelegate OnSingleCompleteLoading;  // Offset: 64 Size: 16
	struct FMulticastInlineDelegate OnStandbyLoading;  // Offset: 80 Size: 16
	char pad_96[16];  // Offset: 96 Size: 16
	struct TArray<struct ULevelStreaming*> LoadedStreamingLevels;  // Offset: 112 Size: 16
	struct TMap<int32_t, struct ULevelStreaming*> LoadingAllStreamingLevels;  // Offset: 128 Size: 80
	struct TMap<int32_t, struct ULevelStreaming*> LoadingSingleStreamingLevels;  // Offset: 208 Size: 80
	char pad_288[16];  // Offset: 288 Size: 16



 // Functions 
 public:
	void OnUnloadLevelStreamingComplete(int32_t InLinkID); // Function KartDrift.KdLevelLoader.OnUnloadLevelStreamingComplete
	void OnSingleLevelStreamingComplete(int32_t InLinkID); // Function KartDrift.KdLevelLoader.OnSingleLevelStreamingComplete
	void OnAllLevelStreamingComplete(int32_t InLinkID); // Function KartDrift.KdLevelLoader.OnAllLevelStreamingComplete
}; 
 
 


//Class KartDrift.LiveryMarketTagIdCache Size 432
// Inherited 40 bytes 
class ULiveryMarketTagIdCache : public UObject
{

 public: 
	char pad_40[360];  // Offset: 40 Size: 360
	struct UAccountLiveryMarket* AccountLiveryMarket;  // Offset: 400 Size: 8
	char pad_408[24];  // Offset: 408 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdLevelScriptActor Size 560
// Inherited 552 bytes 
class AKdLevelScriptActor : public ALevelScriptActor
{

 public: 
	char pad_552[8];  // Offset: 552 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestPlayFinishBGM Size 72
// Inherited 72 bytes 
class UShadowQuestPlayFinishBGM : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSkeletalMesh Size 720
// Inherited 672 bytes 
class AScenarioSkeletalMesh : public AScenarioMesh
{

 public: 
	struct TSoftObjectPtr<USkeletalMesh> Mesh;  // Offset: 672 Size: 40
	struct USkeletalMeshComponent* MeshComponent;  // Offset: 712 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdListView Size 2168
// Inherited 872 bytes 
class UKdListView : public UListView
{

 public: 
	float FirstPadding;  // Offset: 872 Size: 4
	float LastPadding;  // Offset: 876 Size: 4
	float EntryPadding;  // Offset: 880 Size: 4
	char pad_884_1 : 7;  // Offset: 884 Size: 1
	bool bIsScrollBarVisible : 1;  // Offset: 884 Size: 1
	char pad_885[3];  // Offset: 885 Size: 3
	struct FScrollBarStyle WidgetBarStyle;  // Offset: 888 Size: 1232
	struct FVector2D ScrollBarThickness;  // Offset: 2120 Size: 8
	struct FMargin ScrollBarPadding;  // Offset: 2128 Size: 16
	char pad_2144[24];  // Offset: 2144 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioGameState Size 1144
// Inherited 1144 bytes 
class AScenarioGameState : public AKdGameState
{

 public: 



 // Functions 
 public:
	void OnFirstAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.ScenarioGameState.OnFirstAsyncLoadCompleted
	void Multicast_LogoutPawn(struct APawn* InPawn); // Function KartDrift.ScenarioGameState.Multicast_LogoutPawn
}; 
 
 


//Class KartDrift.LicenseLogicComponent Size 304
// Inherited 224 bytes 
class ULicenseLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[80];  // Offset: 224 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestRemoveResultWidget Size 72
// Inherited 72 bytes 
class UShadowQuestRemoveResultWidget : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPatrolInterface Size 40
// Inherited 40 bytes 
class UKdPatrolInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServicePopup Size 64
// Inherited 48 bytes 
class UKdServicePopup : public UKdPostInitializer
{

 public: 
	char pad_48[16];  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropTeam Size 48
// Inherited 40 bytes 
class UKdPlayerPropTeam : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdPlayerPropPlayMission Size 136
// Inherited 40 bytes 
class UKdPlayerPropPlayMission : public UObject
{

 public: 
	struct FKtPlayMissionDef MissionDef;  // Offset: 40 Size: 64
	struct FKtPlayMissionRewardDef MissionRewardDef;  // Offset: 104 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackReplayerStart Size 72
// Inherited 72 bytes 
class UTimeAttackReplayerStart : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRemovableObstacleData Size 128
// Inherited 64 bytes 
class ULicenseRemovableObstacleData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 72 Size: 40
	struct TArray<struct FLicenseRemovableObstacleInfo> RemovableObstacleInfoList;  // Offset: 112 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSequenceCharacter Size 568
// Inherited 544 bytes 
class AKdSequenceCharacter : public AActor
{

 public: 
	int32_t Index;  // Offset: 544 Size: 4
	char pad_548_1 : 7;  // Offset: 548 Size: 1
	bool isWin : 1;  // Offset: 548 Size: 1
	char pad_549[3];  // Offset: 549 Size: 3
	struct UPodiumRiderNameTagComponent* RiderNameTag;  // Offset: 552 Size: 8
	struct UCharacterSkeletalMeshComponent* CharacterSkeletalMeshComponent;  // Offset: 560 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SequenceForceContextComponent Size 240
// Inherited 176 bytes 
class USequenceForceContextComponent : public UItemContextComponent
{

 public: 
	struct TArray<struct FString> ForceTargetName;  // Offset: 176 Size: 16
	struct FTransform TargetTransform;  // Offset: 192 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePatrolActorData Size 104
// Inherited 64 bytes 
class ULicensePatrolActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FPatrolLineData> LicensePatrolActorDataList;  // Offset: 64 Size: 16
	struct FLinearColor SpecialColor;  // Offset: 80 Size: 16
	float Scale;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTask Size 440
// Inherited 40 bytes 
class UKdServerLoginTask : public UObject
{

 public: 
	char pad_40[24];  // Offset: 40 Size: 24
	struct UServerConnection* AccountServerConn;  // Offset: 64 Size: 8
	char pad_72[88];  // Offset: 72 Size: 88
	struct FKdServerAddrConfig ServerConfig;  // Offset: 160 Size: 112
	struct UServerRequester* LoginServerConn;  // Offset: 272 Size: 8
	char pad_280[8];  // Offset: 280 Size: 8
	struct UPrAuth* ReceivedPrAuth;  // Offset: 288 Size: 8
	char pad_296[144];  // Offset: 296 Size: 144



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WpLiveryWorker Size 616
// Inherited 616 bytes 
class AWpLiveryWorker : public AWpWorker
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateTitleWidget Size 144
// Inherited 72 bytes 
class UCreateTitleWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> CreateTitleWidgetClass;  // Offset: 72 Size: 40
	struct ULicenseStartTitleWidget* TitleWidget;  // Offset: 112 Size: 8
	struct FText ChapterTitleText;  // Offset: 120 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskDev Size 480
// Inherited 440 bytes 
class UKdServerLoginTaskDev : public UKdServerLoginTask
{

 public: 
	char pad_440[40];  // Offset: 440 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskOSS Size 560
// Inherited 440 bytes 
class UKdServerLoginTaskOSS : public UKdServerLoginTask
{

 public: 
	char pad_440[88];  // Offset: 440 Size: 88
	struct UUserWidget* LoginConfirmPopup;  // Offset: 528 Size: 8
	char pad_536[24];  // Offset: 536 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MaterialFxDataAsset Size 128
// Inherited 48 bytes 
class UMaterialFxDataAsset : public UDataAsset
{

 public: 
	struct TMap<struct FString, struct FCustomMaterialFx> CustomMap;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskLive Size 624
// Inherited 560 bytes 
class UKdServerLoginTaskLive : public UKdServerLoginTaskOSS
{

 public: 
	char pad_560[64];  // Offset: 560 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskNxA Size 472
// Inherited 440 bytes 
class UKdServerLoginTaskNxA : public UKdServerLoginTask
{

 public: 
	char pad_440[32];  // Offset: 440 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServerLoginTaskSteam Size 560
// Inherited 560 bytes 
class UKdServerLoginTaskSteam : public UKdServerLoginTaskOSS
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseItemCountWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseItemCountWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseItemCountWidgetClass;  // Offset: 72 Size: 40
	float TotalTime;  // Offset: 112 Size: 4
	char pad_116[4];  // Offset: 116 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSessionComponent Size 216
// Inherited 176 bytes 
class UKdSessionComponent : public UActorComponent
{

 public: 
	struct FString gameId;  // Offset: 176 Size: 16
	char pad_192[24];  // Offset: 192 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrGetMail Size 432
// Inherited 72 bytes 
class UPrGetMail : public UPrPacket
{

 public: 
	struct FKtMail Mail;  // Offset: 72 Size: 360



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdWorldSettings Size 928
// Inherited 928 bytes 
class AKdWorldSettings : public AWorldSettings
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSignificanceManager Size 288
// Inherited 288 bytes 
class UKdSignificanceManager : public USignificanceManager
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSoundComponent Size 696
// Inherited 176 bytes 
class UKdSoundComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct FFMODPlayHelper EngineSoundComp;  // Offset: 184 Size: 32
	struct FFMODPlayHelper DriftSoundComp;  // Offset: 216 Size: 32
	struct FFMODPlayHelper BoostSoundComp;  // Offset: 248 Size: 32
	struct FFMODPlayHelper BurstBoostSoundComp;  // Offset: 280 Size: 32
	struct FFMODPlayHelper StartBoostSoundComp;  // Offset: 312 Size: 32
	struct FFMODPlayHelper SlipStreamSoundComp;  // Offset: 344 Size: 32
	struct FFMODPlayHelper DraftingSoundComp;  // Offset: 376 Size: 32
	struct FFMODPlayHelper ShockSoundComp;  // Offset: 408 Size: 32
	struct FFMODPlayHelper BoosterPlaySoundComp;  // Offset: 440 Size: 32
	struct FFMODPlayHelper CrashSoundComp;  // Offset: 472 Size: 32
	struct FFMODPlayHelper TransformSoundComp;  // Offset: 504 Size: 32
	struct FFMODPlayHelper UnTransformSoundComp;  // Offset: 536 Size: 32
	struct FFMODPlayHelper BoostZoneSoundComp;  // Offset: 568 Size: 32
	struct FFMODPlayHelper JumpZoneSoundComp;  // Offset: 600 Size: 32
	struct FFMODPlayHelper DeliveryZoneSoundComp;  // Offset: 632 Size: 32
	struct FFMODPlayHelper JustStartBoostSoundComp;  // Offset: 664 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdSoundWidget Size 624
// Inherited 608 bytes 
class UKdSoundWidget : public UUserWidget
{

 public: 
	struct UFMODEvent* SoundEvent;  // Offset: 608 Size: 8
	char pad_616[8];  // Offset: 616 Size: 8



 // Functions 
 public:
	void StopFmodSound(); // Function KartDrift.KdSoundWidget.StopFmodSound
	void PlayFmodSound(); // Function KartDrift.KdSoundWidget.PlayFmodSound
}; 
 
 


//Class KartDrift.KdTileView Size 2192
// Inherited 904 bytes 
class UKdTileView : public UTileView
{

 public: 
	char pad_904_1 : 7;  // Offset: 904 Size: 1
	bool bIsScrollBarVisible : 1;  // Offset: 904 Size: 1
	char pad_905[7];  // Offset: 905 Size: 7
	struct FScrollBarStyle WidgetBarStyle;  // Offset: 912 Size: 1232
	struct FVector2D ScrollBarThickness;  // Offset: 2144 Size: 8
	struct FMargin ScrollBarPadding;  // Offset: 2152 Size: 16
	char pad_2168[24];  // Offset: 2168 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdTraveler Size 792
// Inherited 48 bytes 
class UKdTraveler : public UKdPostInitializer
{

 public: 
	char pad_48[208];  // Offset: 48 Size: 208
	struct UKtRaceSettings* MatchGameSettings;  // Offset: 256 Size: 8
	struct UKtRaceDetails* MatchRaceDetails;  // Offset: 264 Size: 8
	char pad_272[56];  // Offset: 272 Size: 56
	struct FKtClientTrackDef MatchTrackDef;  // Offset: 328 Size: 352
	struct ULoadingWidgetBase* LoadingWidget;  // Offset: 680 Size: 8
	struct ULoadingWidgetBase* LoadingMovieWidget;  // Offset: 688 Size: 8
	UUserWidget* LoadingWidgetClass;  // Offset: 696 Size: 8
	UUserWidget* TransitionWidgetClass;  // Offset: 704 Size: 8
	struct UMaterialInstanceConstant* LoadingImageMaterialInstance;  // Offset: 712 Size: 8
	struct TArray<struct UUserWidget*> LoadingWidgetContainer;  // Offset: 720 Size: 16
	struct TArray<struct UUserWidget*> LoadingMovieWidgetContainer;  // Offset: 736 Size: 16
	struct TArray<struct UUserWidget*> LoadingTransitionWidgetContainer;  // Offset: 752 Size: 16
	struct USingleModeLoadingImagePool* SingleModeLoadingImagePool;  // Offset: 768 Size: 8
	char pad_776[16];  // Offset: 776 Size: 16



 // Functions 
 public:
	void StopMoviePlay(); // Function KartDrift.KdTraveler.StopMoviePlay
	void RemoveLoadingWidget(); // Function KartDrift.KdTraveler.RemoveLoadingWidget
}; 
 
 


//Class KartDrift.KdUserObjectListEntry Size 40
// Inherited 40 bytes 
class UKdUserObjectListEntry : public UUserObjectListEntry
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseBossHPWidget Size 648
// Inherited 608 bytes 
class ULicenseBossHPWidget : public UUserWidget
{

 public: 
	struct UProgressBar* V_BossHPGauge;  // Offset: 608 Size: 8
	struct UTextBlock* V_DamageText;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_BossDamage;  // Offset: 624 Size: 8
	struct FVector CharactorPivot;  // Offset: 632 Size: 12
	char pad_644[4];  // Offset: 644 Size: 4



 // Functions 
 public:
	void SetProgress(float Damage, float InProgress); // Function KartDrift.LicenseBossHPWidget.SetProgress
}; 
 
 


//Class KartDrift.KdVersionChecker Size 64
// Inherited 40 bytes 
class UKdVersionChecker : public UObject
{

 public: 
	char pad_40[24];  // Offset: 40 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ParseScenarioOptions Size 232
// Inherited 160 bytes 
class UParseScenarioOptions : public UParseRaceOptions
{

 public: 
	char pad_160[72];  // Offset: 160 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdVersionCheckerNgmConfig Size 56
// Inherited 40 bytes 
class UKdVersionCheckerNgmConfig : public UObject
{

 public: 
	struct TArray<struct FKdVersionCheckerNgmServerInfo> ServerInfos;  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdVersionCheckerNgm Size 168
// Inherited 64 bytes 
class UKdVersionCheckerNgm : public UKdVersionChecker
{

 public: 
	char pad_64[104];  // Offset: 64 Size: 104



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KeyViewerWidget Size 672
// Inherited 608 bytes 
class UKeyViewerWidget : public UUserWidget
{

 public: 
	struct UImage* Up;  // Offset: 608 Size: 8
	struct UImage* Down;  // Offset: 616 Size: 8
	struct UImage* Left;  // Offset: 624 Size: 8
	struct UImage* Right;  // Offset: 632 Size: 8
	struct UImage* shift;  // Offset: 640 Size: 8
	struct UImage* ctrl;  // Offset: 648 Size: 8
	struct AActor* OwningActor;  // Offset: 656 Size: 8
	char pad_664[8];  // Offset: 664 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionObserver Size 256
// Inherited 128 bytes 
class UKtSessionObserver : public UKtSessionMember
{

 public: 
	struct FKtSessionRaceObserverRequest FromRequest;  // Offset: 128 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KtSessionPlayer Size 1000
// Inherited 128 bytes 
class UKtSessionPlayer : public UKtSessionMember
{

 public: 
	char pad_128[8];  // Offset: 128 Size: 8
	struct FKtSessionRacePlayerRequest FromRequest;  // Offset: 136 Size: 856
	char pad_992[8];  // Offset: 992 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LandingPointDecal Size 616
// Inherited 544 bytes 
class ALandingPointDecal : public AActor
{

 public: 
	struct USceneComponent* DefaultSceneRoot;  // Offset: 544 Size: 8
	struct UDecalComponent* DecalComponent;  // Offset: 552 Size: 8
	struct UParticleSystemComponent* ParticleSystemComponent;  // Offset: 560 Size: 8
	struct UParticleSystemComponent* ParticleSystemComponent_End;  // Offset: 568 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 576 Size: 8
	int32_t MaterialIndex;  // Offset: 584 Size: 4
	char pad_588[4];  // Offset: 588 Size: 4
	struct UMaterialInstanceDynamic* MID_Decal;  // Offset: 592 Size: 8
	char pad_600[16];  // Offset: 600 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LapCountWidget Size 672
// Inherited 608 bytes 
class ULapCountWidget : public UUserWidget
{

 public: 
	struct UTextBlock* MaxLapCountText;  // Offset: 608 Size: 8
	struct UTextBlock* LapCountText;  // Offset: 616 Size: 8
	struct UTextBlock* LapCountTextBefore;  // Offset: 624 Size: 8
	struct UTextBlock* FinalLapText;  // Offset: 632 Size: 8
	struct UWidgetAnimation* LapIncreasing;  // Offset: 640 Size: 8
	struct UWidgetAnimation* FinalAppears;  // Offset: 648 Size: 8
	char pad_656[16];  // Offset: 656 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LapWidget Size 656
// Inherited 608 bytes 
class ULapWidget : public UUserWidget
{

 public: 
	struct ULapTimeWidget* LapTimeWidget;  // Offset: 608 Size: 8
	struct ULapCountWidget* LapCountWidget;  // Offset: 616 Size: 8
	int32_t TotalLapCount;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 632 Size: 8
	struct URaceProgressComponent* RaceProgressComponent;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8



 // Functions 
 public:
	void SetMaxLapCount(int32_t MaxCount); // Function KartDrift.LapWidget.SetMaxLapCount
	void SetCurrentLapCount(int32_t LapCount); // Function KartDrift.LapWidget.SetCurrentLapCount
	void Reset(); // Function KartDrift.LapWidget.Reset
	void ManagedTick(float inDeltaTime); // Function KartDrift.LapWidget.ManagedTick
}; 
 
 


//Class KartDrift.SideMirrorWidget Size 696
// Inherited 608 bytes 
class USideMirrorWidget : public UUserWidget
{

 public: 
	struct UImage* SceneImage;  // Offset: 608 Size: 8
	struct ASceneCaptureActor* SceneCaptureActor;  // Offset: 616 Size: 8
	struct USideMirrorCameraComponent* CameraComponent;  // Offset: 624 Size: 8
	char pad_632[16];  // Offset: 632 Size: 16
	struct TArray<struct APawn*> PawnList;  // Offset: 648 Size: 16
	char pad_664[8];  // Offset: 664 Size: 8
	struct UWidgetAnimation* StressInAnimation;  // Offset: 672 Size: 8
	struct UWidgetAnimation* StressOnAnimation;  // Offset: 680 Size: 8
	struct UWidgetAnimation* StressOutAnimation;  // Offset: 688 Size: 8



 // Functions 
 public:
	void ManagedTick(float inDeltaTime); // Function KartDrift.SideMirrorWidget.ManagedTick
}; 
 
 


//Class KartDrift.RacingPassLogicComponent Size 496
// Inherited 224 bytes 
class URacingPassLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[272];  // Offset: 224 Size: 272



 // Functions 
 public:
	void OnUserLevelUpdated(enum class EUserLevelUpdatedType InType, int32_t InLevel); // Function KartDrift.RacingPassLogicComponent.OnUserLevelUpdated
	void OnUpdatePartyState(enum class EPartyChageState ChangeState); // Function KartDrift.RacingPassLogicComponent.OnUpdatePartyState
	void OnUpdatePartyRequestState(); // Function KartDrift.RacingPassLogicComponent.OnUpdatePartyRequestState
	void OnTierLevelUpdated(); // Function KartDrift.RacingPassLogicComponent.OnTierLevelUpdated
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.RacingPassLogicComponent.OnSeasonUpdated
	void OnSeasonInventoryUpdated(); // Function KartDrift.RacingPassLogicComponent.OnSeasonInventoryUpdated
	void OnSeasonChanged(struct UKtSeasonDataSet* Data); // Function KartDrift.RacingPassLogicComponent.OnSeasonChanged
	void OnPurchaseComplete(); // Function KartDrift.RacingPassLogicComponent.OnPurchaseComplete
}; 
 
 


//Class KartDrift.LevelActorResetComponent Size 240
// Inherited 176 bytes 
class ULevelActorResetComponent : public UActorComponent
{

 public: 
	char pad_176[64];  // Offset: 176 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_KartUpgradePageWidget Size 928
// Inherited 928 bytes 
class UM_KartUpgradePageWidget : public UKartUpgradePageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseFailureWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseFailureWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseFailureWidgetClass;  // Offset: 72 Size: 40
	struct UDialogTemplate* LicenseFailureWidget;  // Offset: 112 Size: 8



 // Functions 
 public:
	void OnClickedExitButton(int32_t InIndex); // Function KartDrift.CreateLicenseFailureWidget.OnClickedExitButton
	void OnClickedChallengeButton(int32_t InIndex); // Function KartDrift.CreateLicenseFailureWidget.OnClickedChallengeButton
}; 
 
 


//Class KartDrift.LevelBGMControlComponent Size 208
// Inherited 176 bytes 
class ULevelBGMControlComponent : public UActorComponent
{

 public: 
	struct UFMODAudioComponent* BGMAudioComponent;  // Offset: 176 Size: 8
	struct UFMODEvent* LastEvent;  // Offset: 184 Size: 8
	struct TArray<struct UFMODEvent*> LoadingBGMList;  // Offset: 192 Size: 16



 // Functions 
 public:
	bool RandomBGMPlay(); // Function KartDrift.LevelBGMControlComponent.RandomBGMPlay
	bool PlayLastBGM(); // Function KartDrift.LevelBGMControlComponent.PlayLastBGM
	void PlayAnyOf(bool bForce); // Function KartDrift.LevelBGMControlComponent.PlayAnyOf
	bool ChangePitchMultiplier(float PitchValue); // Function KartDrift.LevelBGMControlComponent.ChangePitchMultiplier
	bool ChangeBGM(struct UFMODEvent* Event, bool bForce); // Function KartDrift.LevelBGMControlComponent.ChangeBGM
}; 
 
 


//Class KartDrift.SideMenuLogicComponent Size 408
// Inherited 224 bytes 
class USideMenuLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[184];  // Offset: 224 Size: 184



 // Functions 
 public:
	void OnReportResultReadyInAccount(enum class EPrSendReportResult Result); // Function KartDrift.SideMenuLogicComponent.OnReportResultReadyInAccount
	void OnRecentGameDataReadyInAccount(struct FKtRecentGame& RecentGame); // Function KartDrift.SideMenuLogicComponent.OnRecentGameDataReadyInAccount
	void OnOSSBlockListReadyInAccount(); // Function KartDrift.SideMenuLogicComponent.OnOSSBlockListReadyInAccount
	void OnGfsBlockListReadyInAccount(); // Function KartDrift.SideMenuLogicComponent.OnGfsBlockListReadyInAccount
	bool IsSideMenuDialogActive(); // Function KartDrift.SideMenuLogicComponent.IsSideMenuDialogActive
	void CloseMainDialog(); // Function KartDrift.SideMenuLogicComponent.CloseMainDialog
}; 
 
 


//Class KartDrift.LevelSequenceTrack Size 576
// Inherited 576 bytes 
class ALevelSequenceTrack : public ALevelTrackBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAIDistanceWidget Size 672
// Inherited 608 bytes 
class ULicenseAIDistanceWidget : public UUserWidget
{

 public: 
	struct UOverlay* V_Overlay;  // Offset: 608 Size: 8
	struct UKdTextBlock* Text_DistanceNormal;  // Offset: 616 Size: 8
	struct UKdTextBlock* Text_DistanceWarning;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* WS_Back;  // Offset: 632 Size: 8
	struct UWidgetSwitcher* WS_Distance;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_Alert;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_Alert_Distance;  // Offset: 656 Size: 8
	char pad_664[8];  // Offset: 664 Size: 8



 // Functions 
 public:
	void OnUpdateAIDistance(float AIDistance, bool bWarning); // Function KartDrift.LicenseAIDistanceWidget.OnUpdateAIDistance
	void OnDisableAIDistance(bool bDisable); // Function KartDrift.LicenseAIDistanceWidget.OnDisableAIDistance
}; 
 
 


//Class KartDrift.LicenseCalcDistanceRule Size 80
// Inherited 64 bytes 
class ULicenseCalcDistanceRule : public ULicenseContents
{

 public: 
	struct FString CheckPointOrTrackLineName;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BarricadeDistanceItemSpawnInAdvance Size 112
// Inherited 80 bytes 
class UBarricadeDistanceItemSpawnInAdvance : public ULicenseCalcDistanceRule
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool bHitLoseRule : 1;  // Offset: 88 Size: 1
	char pad_89[3];  // Offset: 89 Size: 3
	int32_t HitScore;  // Offset: 92 Size: 4
	struct TArray<struct FBarricadeItemSpawnStruct> SpawnList;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioHudWidget Size 608
// Inherited 608 bytes 
class UScenarioHudWidget : public UUserWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCheckDriftBoostData Size 72
// Inherited 64 bytes 
class ULicenseCheckDriftBoostData : public ULicenseContents
{

 public: 
	int32_t DriftBoostScore;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorPodiumWidget Size 696
// Inherited 608 bytes 
class UMajorPodiumWidget : public UUserWidget
{

 public: 
	struct UMediaWallGameInfoWidget* MediaWallGameInfoWidget;  // Offset: 608 Size: 8
	struct TSoftObjectPtr<UMediaPlaylist> TrackMediaPlayList;  // Offset: 616 Size: 40
	struct TSoftObjectPtr<UTexture2D> TrackMediaLoadingImage;  // Offset: 656 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCheckItemUseComponent Size 232
// Inherited 176 bytes 
class ULicenseCheckItemUseComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseCheckItemUseData* Data;  // Offset: 192 Size: 8
	char pad_200[32];  // Offset: 200 Size: 32



 // Functions 
 public:
	void OnUseItem(struct APawn* InPawn, enum class EItemType InType); // Function KartDrift.LicenseCheckItemUseComponent.OnUseItem
}; 
 
 


//Class KartDrift.LicenseContentDebugger Size 40
// Inherited 40 bytes 
class ULicenseContentDebugger : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseItemSpawnData Size 72
// Inherited 64 bytes 
class ULicenseItemSpawnData : public ULicenseContents
{

 public: 
	enum class EItemType ItemType;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SequencerAniActor Size 632
// Inherited 544 bytes 
class ASequencerAniActor : public AActor
{

 public: 
	char pad_544[8];  // Offset: 544 Size: 8
	enum class ENotifyMajorGamePhase Phase;  // Offset: 552 Size: 1
	char pad_553[7];  // Offset: 553 Size: 7
	struct TSoftObjectPtr<ULevelSequence> LevelSequence;  // Offset: 560 Size: 40
	struct FMovieSceneSequencePlaybackSettings SequencePlaybackSettings;  // Offset: 600 Size: 20
	char pad_620[4];  // Offset: 620 Size: 4
	struct ULevelSequencePlayer* LevelSequencePlayer;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ItemSpawningRule Size 104
// Inherited 72 bytes 
class UItemSpawningRule : public ULicenseItemSpawnData
{

 public: 
	struct TArray<struct USceneComponent*> GuideComponents;  // Offset: 72 Size: 16
	struct TArray<struct UTextRenderComponent*> CountDownGuide;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioCollectDataComponent Size 632
// Inherited 176 bytes 
class UScenarioCollectDataComponent : public UActorComponent
{

 public: 
	struct TMap<struct FScenarioIdentifier, struct FScenarioCollectData> CollectDataContainer;  // Offset: 176 Size: 80
	struct UScenarioComponent* CahcedScenarioComponent;  // Offset: 256 Size: 8
	char pad_264[368];  // Offset: 264 Size: 368



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceGameTransition Size 80
// Inherited 72 bytes 
class URaceGameTransition : public URuleObject
{

 public: 
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseAIDistanceInterface Size 40
// Inherited 40 bytes 
class ULicenseAIDistanceInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrafficCone Size 552
// Inherited 544 bytes 
class ALicenseTrafficCone : public AActor
{

 public: 
	char pad_544[8];  // Offset: 544 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSpawnActorData Size 88
// Inherited 64 bytes 
class ULicenseSpawnActorData : public ULicenseContents
{

 public: 
	char pad_64[8];  // Offset: 64 Size: 8
	struct TArray<struct FLicenseStaticActorInfo> LicenseSpawnActorDataList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AttachingModelFactory Size 568
// Inherited 544 bytes 
class AAttachingModelFactory : public AActor
{

 public: 
	struct USkeletalMeshComponent* SkeletalMeshComponent;  // Offset: 544 Size: 8
	char pad_552[16];  // Offset: 552 Size: 16



 // Functions 
 public:
	void DestroyMyselfWhenAnimationEnds(); // Function KartDrift.AttachingModelFactory.DestroyMyselfWhenAnimationEnds
}; 
 
 


//Class KartDrift.LicenseSpeedData Size 64
// Inherited 64 bytes 
class ULicenseSpeedData : public ULicenseContents
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RandomDistanceItemSpawn Size 168
// Inherited 104 bytes 
class URandomDistanceItemSpawn : public UItemSpawningRule
{

 public: 
	char pad_104[8];  // Offset: 104 Size: 8
	struct TArray<float> Distance;  // Offset: 112 Size: 16
	int32_t Index;  // Offset: 128 Size: 4
	char pad_132[4];  // Offset: 132 Size: 4
	struct TArray<enum class EItemType> RandomType;  // Offset: 136 Size: 16
	struct TArray<enum class EItemType> TempRandomType;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SimulationMovementComponent Size 1008
// Inherited 240 bytes 
class USimulationMovementComponent : public UMovementComponent
{

 public: 
	char pad_240[768];  // Offset: 240 Size: 768



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDraftTargetActorData Size 96
// Inherited 64 bytes 
class ULicenseDraftTargetActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FText> LicenseSpawnActorDataList;  // Offset: 64 Size: 16
	float Offset;  // Offset: 80 Size: 4
	float Speed;  // Offset: 84 Size: 4
	float SpawnDistance;  // Offset: 88 Size: 4
	float OvertakingTime;  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDraftTargetSpawnComponent Size 416
// Inherited 176 bytes 
class ULicenseDraftTargetSpawnComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct ULicenseDraftTargetActorData* Data;  // Offset: 192 Size: 8
	float SpawnLastTime;  // Offset: 200 Size: 4
	float DraftLastTime;  // Offset: 204 Size: 4
	char pad_208_1 : 7;  // Offset: 208 Size: 1
	bool ScoreGate : 1;  // Offset: 208 Size: 1
	char pad_209[7];  // Offset: 209 Size: 7
	struct TArray<struct AActor*> SpawnedActors;  // Offset: 216 Size: 16
	struct UCurveFloat* SpawnCurve;  // Offset: 232 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 240 Size: 8
	struct AActor* Pawn;  // Offset: 248 Size: 8
	char pad_256[40];  // Offset: 256 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 296 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 336 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 376 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftGaugeData Size 256
// Inherited 80 bytes 
class ULicenseDriftGaugeData : public ULicenseCalcDistanceRule
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8
	enum class ELicenseGaugeMissionType missionType;  // Offset: 88 Size: 1
	char pad_89[3];  // Offset: 89 Size: 3
	int32_t Score;  // Offset: 92 Size: 4
	struct TSoftObjectPtr<UStaticMesh> GateMeshClass;  // Offset: 96 Size: 40
	float GateSize;  // Offset: 136 Size: 4
	char pad_140[4];  // Offset: 140 Size: 4
	struct TSoftClassPtr<UObject> MissionWidgetClass;  // Offset: 144 Size: 40
	struct TArray<struct FLicenseDriftGaugeDef> LicenseDriftGaugeDefVector;  // Offset: 184 Size: 16
	float ParticleScaleMultiplier;  // Offset: 200 Size: 4
	struct FVector ParticleLocationOffset;  // Offset: 204 Size: 12
	struct TSoftObjectPtr<UParticleSystem> GateParticle;  // Offset: 216 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftGaugeComponent Size 368
// Inherited 176 bytes 
class ULicenseDriftGaugeComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct ULicenseDriftGaugeData* Data;  // Offset: 200 Size: 8
	struct UParticleSystem* GateParticleSystem;  // Offset: 208 Size: 8
	struct TArray<struct AActor*> GateList;  // Offset: 216 Size: 16
	char pad_232[24];  // Offset: 232 Size: 24
	struct AKdPawn* Pawn;  // Offset: 256 Size: 8
	struct ULicenseMissionTitleWidget* MissionWidget;  // Offset: 264 Size: 8
	char pad_272[96];  // Offset: 272 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftMissionData Size 240
// Inherited 80 bytes 
class ULicenseDriftMissionData : public ULicenseCalcDistanceRule
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8
	struct TArray<struct FLicenseDriftMissionGateDef> LicenseDriftMissionGateDefVector;  // Offset: 88 Size: 16
	struct TArray<struct FDriftMissionStruct> DriftCountDuration;  // Offset: 104 Size: 16
	int32_t MissionPoints;  // Offset: 120 Size: 4
	int32_t DriftBonusPoints;  // Offset: 124 Size: 4
	char pad_128_1 : 7;  // Offset: 128 Size: 1
	bool bIgnoreHitWall : 1;  // Offset: 128 Size: 1
	char pad_129_1 : 7;  // Offset: 129 Size: 1
	bool bConstantMission : 1;  // Offset: 129 Size: 1
	char pad_130[2];  // Offset: 130 Size: 2
	int32_t Index;  // Offset: 132 Size: 4
	struct TSoftObjectPtr<UStaticMesh> GateMeshClass;  // Offset: 136 Size: 40
	float GateSize;  // Offset: 176 Size: 4
	float ParticleScaleMultiplier;  // Offset: 180 Size: 4
	struct FVector ParticleLocationOffset;  // Offset: 184 Size: 12
	char pad_196[4];  // Offset: 196 Size: 4
	struct TSoftObjectPtr<UParticleSystem> GateParticle;  // Offset: 200 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDriftMissionWidget Size 656
// Inherited 608 bytes 
class ULicenseDriftMissionWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_ChapterTitle;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Count_Text;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_TotalCount_Text;  // Offset: 624 Size: 8
	struct UKdListView* V_MissionList;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Anim_CountText;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDynamicItemCubeComponent Size 304
// Inherited 176 bytes 
class ULicenseDynamicItemCubeComponent : public UActorComponent
{

 public: 
	int32_t Index;  // Offset: 176 Size: 4
	char pad_180[4];  // Offset: 180 Size: 4
	struct AActor* Pawn;  // Offset: 184 Size: 8
	struct ULicenseDynamicItemCubeData* Data;  // Offset: 192 Size: 8
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 200 Size: 16
	enum class EItemType LastUseItem;  // Offset: 216 Size: 1
	char pad_217[7];  // Offset: 217 Size: 7
	struct TSoftClassPtr<UObject> ItemCubeClass;  // Offset: 224 Size: 40
	struct TSoftObjectPtr<UStaticMesh> ItemCubeMeshClass;  // Offset: 264 Size: 40



 // Functions 
 public:
	void OnLastUseItem(struct APawn* InPawn, enum class EItemType InType); // Function KartDrift.LicenseDynamicItemCubeComponent.OnLastUseItem
	enum class EItemType AuthNewItem(struct AGoItem_Cube* InCube); // Function KartDrift.LicenseDynamicItemCubeComponent.AuthNewItem
}; 
 
 


//Class KartDrift.SendTMIRaceEventData Size 72
// Inherited 72 bytes 
class USendTMIRaceEventData : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.GameTipLoadingWidget Size 672
// Inherited 648 bytes 
class UGameTipLoadingWidget : public ULoadingWidgetBase
{

 public: 
	struct UKdImageTextBlock* V_GameTipText;  // Offset: 648 Size: 8
	struct UButtonTemplate* V_NextTipButton;  // Offset: 656 Size: 8
	struct UGameTipPool* GameTipPool;  // Offset: 664 Size: 8



 // Functions 
 public:
	void OnNextTipButtonClicked(int32_t NotUsed); // Function KartDrift.GameTipLoadingWidget.OnNextTipButtonClicked
}; 
 
 


//Class KartDrift.LicenseGameLoadingWidget Size 864
// Inherited 672 bytes 
class ULicenseGameLoadingWidget : public UGameTipLoadingWidget
{

 public: 
	struct UProgressBar* V_LoadingProgressBar;  // Offset: 672 Size: 8
	struct UProgressBar* V_LoadingProgressBarRightDeco;  // Offset: 680 Size: 8
	struct USpacer* V_LeftIndentSpace;  // Offset: 688 Size: 8
	struct USpacer* V_RightIndentSpace;  // Offset: 696 Size: 8
	struct UKdTextBlock* V_MissionInfoTitle;  // Offset: 704 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry1;  // Offset: 712 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry2;  // Offset: 720 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry3;  // Offset: 728 Size: 8
	struct ULicensePauseDescWidget* V_LicenseInfoListEntry4;  // Offset: 736 Size: 8
	char pad_744[120];  // Offset: 744 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseJumpDistanceSplashWidget Size 624
// Inherited 608 bytes 
class ULicenseJumpDistanceSplashWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_MeterText;  // Offset: 608 Size: 8
	struct UWidgetAnimation* Anim_In;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlatformPatcherInterface Size 240
// Inherited 64 bytes 
class UPlatformPatcherInterface : public UPatcherInterface
{

 public: 
	char pad_64[176];  // Offset: 64 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoginPlayerController Size 1408
// Inherited 1408 bytes 
class ALoginPlayerController : public APlayerController
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseJumpPhysics Size 240
// Inherited 64 bytes 
class ULicenseJumpPhysics : public ULicenseContents
{

 public: 
	struct FLicenseJumpPhysicsData LicenseJumpPhysicsData;  // Offset: 64 Size: 96
	struct TSoftClassPtr<UObject> JumpDistanceWidgetClass;  // Offset: 160 Size: 40
	struct TSoftClassPtr<UObject> JumpDistanceSplashWidgetClass;  // Offset: 200 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitDraftSpawnComponent Size 72
// Inherited 72 bytes 
class UInitDraftSpawnComponent : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseJumpPhysicsZone Size 688
// Inherited 576 bytes 
class ALicenseJumpPhysicsZone : public AKdTriggerBox
{

 public: 
	struct ULicenseJumpPhysics* Data;  // Offset: 576 Size: 8
	struct AActor* OtherActor;  // Offset: 584 Size: 8
	struct ULicenseJumpDistanceWidget* JumpDistanceWidget;  // Offset: 592 Size: 8
	struct ULicenseJumpDistanceSplashWidget* JumpDistanceSplashWidget;  // Offset: 600 Size: 8
	struct FVector StartPos;  // Offset: 608 Size: 12
	struct FVector EndPos;  // Offset: 620 Size: 12
	float Distance;  // Offset: 632 Size: 4
	char pad_636[4];  // Offset: 636 Size: 4
	struct UKdLevelSequencePlayer* SequencePlayer;  // Offset: 640 Size: 8
	struct ALevelSequenceActor* NewActor;  // Offset: 648 Size: 8
	struct APawn* Pawn;  // Offset: 656 Size: 8
	char pad_664_1 : 7;  // Offset: 664 Size: 1
	bool bAddScoreGate : 1;  // Offset: 664 Size: 1
	char pad_665[7];  // Offset: 665 Size: 7
	struct UFMODEvent* Sound_A;  // Offset: 672 Size: 8
	char pad_680_1 : 7;  // Offset: 680 Size: 1
	bool bLand : 1;  // Offset: 680 Size: 1
	char pad_681[3];  // Offset: 681 Size: 3
	float LastCrashTime;  // Offset: 684 Size: 4



 // Functions 
 public:
	void OnCrashKart(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.LicenseJumpPhysicsZone.OnCrashKart
}; 
 
 


//Class KartDrift.LicenseKeyGuideWidget Size 688
// Inherited 608 bytes 
class ULicenseKeyGuideWidget : public UUserWidget
{

 public: 
	struct UPanelWidget* V_Panel_KeyContainer;  // Offset: 608 Size: 8
	UKeyIconWidget* KeyIconWidgetClass;  // Offset: 616 Size: 8
	UUserWidget* KeyLinkWidgetClass;  // Offset: 624 Size: 8
	char pad_632[56];  // Offset: 632 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyTrigger Size 672
// Inherited 624 bytes 
class AScenarioKeyTrigger : public AScenarioBase
{

 public: 
	struct TArray<struct FScenarioKey> TriggeringKeys;  // Offset: 624 Size: 16
	enum class EScenarioKeyState State;  // Offset: 640 Size: 1
	char pad_641[7];  // Offset: 641 Size: 7
	struct TArray<struct FScenarioTriggerTarget> TriggerContainer;  // Offset: 648 Size: 16
	char pad_664_1 : 7;  // Offset: 664 Size: 1
	bool bInputHandle : 1;  // Offset: 664 Size: 1
	char pad_665_1 : 7;  // Offset: 665 Size: 1
	bool bLockEtcInput : 1;  // Offset: 665 Size: 1
	char pad_666[6];  // Offset: 666 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCardEmblemWidget Size 944
// Inherited 608 bytes 
class ULicenseCardEmblemWidget : public UUserWidget
{

 public: 
	struct FSlateBrush Inst_LicenseTextImg;  // Offset: 608 Size: 136
	struct FSlateBrush Inst_LicenseTextImg_NotGain;  // Offset: 744 Size: 136
	struct UWidgetSwitcher* V_WS_BG;  // Offset: 880 Size: 8
	struct UWidgetSwitcher* V_WS_MoveLight;  // Offset: 888 Size: 8
	struct UImage* V_Color1;  // Offset: 896 Size: 8
	struct UImage* V_Color2;  // Offset: 904 Size: 8
	struct UImage* V_ImgLicenseText;  // Offset: 912 Size: 8
	struct UImage* V_ImgLicenseTextBg;  // Offset: 920 Size: 8
	struct UImage* V_GradeLogo;  // Offset: 928 Size: 8
	struct UImage* V_EmblemMoveLight;  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryComponent Size 424
// Inherited 176 bytes 
class ULiveryComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct FString ReplicatedLiveryUniqueId;  // Offset: 192 Size: 16
	char pad_208_1 : 7;  // Offset: 208 Size: 1
	bool bEnableReplicatedLivery : 1;  // Offset: 208 Size: 1
	char pad_209[15];  // Offset: 209 Size: 15
	struct UKartSkeletalMeshComponent* KartSkeletalMeshComponent;  // Offset: 224 Size: 8
	struct TArray<struct UMaterialInstanceDynamic*> DecalMaterials;  // Offset: 232 Size: 16
	char pad_248[136];  // Offset: 248 Size: 136
	char pad_384_1 : 7;  // Offset: 384 Size: 1
	bool bHasApplyLivery : 1;  // Offset: 384 Size: 1
	char pad_385_1 : 7;  // Offset: 385 Size: 1
	bool bVisibleLiveryBoundary : 1;  // Offset: 385 Size: 1
	enum class ELiveryPaintType LayerSection;  // Offset: 386 Size: 1
	char pad_387[1];  // Offset: 387 Size: 1
	int32_t LayerIndex;  // Offset: 388 Size: 4
	char pad_392_1 : 7;  // Offset: 392 Size: 1
	bool bVisibleLiveryLayer : 1;  // Offset: 392 Size: 1
	char pad_393[31];  // Offset: 393 Size: 31



 // Functions 
 public:
	void Server_EquipLiveryDesign(struct FString LiveryUniqueId); // Function KartDrift.LiveryComponent.Server_EquipLiveryDesign
	void OnRep_ReplicatedLivery(); // Function KartDrift.LiveryComponent.OnRep_ReplicatedLivery
	void AssignDecalTextureFromLiveryEditor(struct UTexture2D* InDecalTexture); // Function KartDrift.LiveryComponent.AssignDecalTextureFromLiveryEditor
}; 
 
 


//Class KartDrift.LicenseMainCardWidget Size 1768
// Inherited 1000 bytes 
class ULicenseMainCardWidget : public UButtonTemplate
{

 public: 
	struct FText Inst_TextGradeName;  // Offset: 1000 Size: 24
	struct FSlateBrush Inst_LineMainBrush;  // Offset: 1024 Size: 136
	struct FSlateBrush Inst_EmblemLogo;  // Offset: 1160 Size: 136
	struct FSlateBrush Inst_EmblemLogo_NotGain;  // Offset: 1296 Size: 136
	struct FLinearColor Inst_LineThickColor;  // Offset: 1432 Size: 16
	struct FLinearColor Inst_LineThinColor;  // Offset: 1448 Size: 16
	struct FLinearColor Inst_DriftLogoColor;  // Offset: 1464 Size: 16
	struct FLinearColor Inst_DrivingLicenseColor;  // Offset: 1480 Size: 16
	struct FLinearColor Inst_EmblemLineColor1;  // Offset: 1496 Size: 16
	struct FLinearColor Inst_EmblemLineColor2;  // Offset: 1512 Size: 16
	struct FLinearColor Inst_BottomEdgeColor;  // Offset: 1528 Size: 16
	char pad_1544_1 : 7;  // Offset: 1544 Size: 1
	bool Inst_IsPro : 1;  // Offset: 1544 Size: 1
	char pad_1545[3];  // Offset: 1545 Size: 3
	int32_t Inst_StateTest;  // Offset: 1548 Size: 4
	char pad_1552_1 : 7;  // Offset: 1552 Size: 1
	bool bShowRewardButton : 1;  // Offset: 1552 Size: 1
	char pad_1553_1 : 7;  // Offset: 1553 Size: 1
	bool bShowGainDate : 1;  // Offset: 1553 Size: 1
	char pad_1554[6];  // Offset: 1554 Size: 6
	struct UImage* V_ImgLineMain;  // Offset: 1560 Size: 8
	struct UImage* V_ImgLineMain_MoveLight;  // Offset: 1568 Size: 8
	struct UImage* V_ImgLineThick;  // Offset: 1576 Size: 8
	struct UImage* V_ImgLineThick_MoveLight;  // Offset: 1584 Size: 8
	struct UImage* V_ImgLineThin;  // Offset: 1592 Size: 8
	struct UImage* V_ImgLineThin_MoveLight;  // Offset: 1600 Size: 8
	struct UImage* V_ImgDriftLogo;  // Offset: 1608 Size: 8
	struct UImage* V_ImgDrivingLicense;  // Offset: 1616 Size: 8
	struct UKdImage* V_ImgBtnHover;  // Offset: 1624 Size: 8
	struct UImage* V_ImgEdgeBottom;  // Offset: 1632 Size: 8
	struct UImage* V_ImgEdge_MoveLight;  // Offset: 1640 Size: 8
	struct UKdTextBlock* V_TxtGradeName;  // Offset: 1648 Size: 8
	struct UWidgetSwitcher* V_WS_BG;  // Offset: 1656 Size: 8
	struct UWidgetSwitcher* V_WS_LineMain;  // Offset: 1664 Size: 8
	struct UWidgetSwitcher* V_WS_LineThin;  // Offset: 1672 Size: 8
	struct UWidgetSwitcher* V_Emblem;  // Offset: 1680 Size: 8
	struct UWidgetSwitcher* V_GetLicense;  // Offset: 1688 Size: 8
	struct UWidgetSwitcher* V_GainDate;  // Offset: 1696 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_NotGain;  // Offset: 1704 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Bronze;  // Offset: 1712 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Silver;  // Offset: 1720 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Gold;  // Offset: 1728 Size: 8
	struct UOverlay* V_OV_All;  // Offset: 1736 Size: 8
	struct UOverlay* V_OV_Card;  // Offset: 1744 Size: 8
	struct UOverlay* V_Lock;  // Offset: 1752 Size: 8
	struct UButtonTemplate* V_RewardButton;  // Offset: 1760 Size: 8



 // Functions 
 public:
	void EmblemMoveLight_Show(); // Function KartDrift.LicenseMainCardWidget.EmblemMoveLight_Show
	void EmblemMoveLight_Hide(); // Function KartDrift.LicenseMainCardWidget.EmblemMoveLight_Hide
}; 
 
 


//Class KartDrift.LicenseClearPopup_LicenseCardWidget Size 1312
// Inherited 608 bytes 
class ULicenseClearPopup_LicenseCardWidget : public UUserWidget
{

 public: 
	struct FText Inst_TextGradeName;  // Offset: 608 Size: 24
	struct FSlateBrush Inst_LineMainBrush;  // Offset: 632 Size: 136
	struct FSlateBrush Inst_EmblemLogo;  // Offset: 768 Size: 136
	struct FSlateBrush Inst_EmblemLogo_NotGain;  // Offset: 904 Size: 136
	struct FLinearColor Inst_LineThickColor;  // Offset: 1040 Size: 16
	struct FLinearColor Inst_LineThinColor;  // Offset: 1056 Size: 16
	struct FLinearColor Inst_DriftLogoColor;  // Offset: 1072 Size: 16
	struct FLinearColor Inst_DrivingLicenseColor;  // Offset: 1088 Size: 16
	struct FLinearColor Inst_EmblemLineColor1;  // Offset: 1104 Size: 16
	struct FLinearColor Inst_EmblemLineColor2;  // Offset: 1120 Size: 16
	struct FLinearColor Inst_BottomEdgeColor;  // Offset: 1136 Size: 16
	char pad_1152_1 : 7;  // Offset: 1152 Size: 1
	bool Inst_IsPro : 1;  // Offset: 1152 Size: 1
	char pad_1153[3];  // Offset: 1153 Size: 3
	int32_t Inst_StateTest;  // Offset: 1156 Size: 4
	struct UImage* V_ImgLineMain;  // Offset: 1160 Size: 8
	struct UImage* V_ImgLineMain_MoveLight;  // Offset: 1168 Size: 8
	struct UImage* V_ImgLineThick;  // Offset: 1176 Size: 8
	struct UImage* V_ImgLineThick_MoveLight;  // Offset: 1184 Size: 8
	struct UImage* V_ImgLineThin;  // Offset: 1192 Size: 8
	struct UImage* V_ImgLineThin_MoveLight;  // Offset: 1200 Size: 8
	struct UImage* V_ImgDriftLogo;  // Offset: 1208 Size: 8
	struct UImage* V_ImgDrivingLicense;  // Offset: 1216 Size: 8
	struct UImage* V_ImgEdgeBottom;  // Offset: 1224 Size: 8
	struct UImage* V_ImgEdge_MoveLight;  // Offset: 1232 Size: 8
	struct UKdTextBlock* V_TxtGradeName;  // Offset: 1240 Size: 8
	struct UWidgetSwitcher* V_WS_BG;  // Offset: 1248 Size: 8
	struct UWidgetSwitcher* V_WS_LineMain;  // Offset: 1256 Size: 8
	struct UWidgetSwitcher* V_WS_LineThin;  // Offset: 1264 Size: 8
	struct UWidgetSwitcher* V_Emblem;  // Offset: 1272 Size: 8
	struct UWidgetSwitcher* V_GetLicense;  // Offset: 1280 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Bronze;  // Offset: 1288 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Silver;  // Offset: 1296 Size: 8
	struct ULicenseCardEmblemWidget* V_Emblem_Gold;  // Offset: 1304 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseClearPopupWidget Size 904
// Inherited 816 bytes 
class ULicenseClearPopupWidget : public UDialogTemplate
{

 public: 
	struct UKdListView* V_RewardListView;  // Offset: 816 Size: 8
	struct UKdListView* V_OpenContentListView;  // Offset: 824 Size: 8
	struct UOverlay* V_OV_Back_Ani;  // Offset: 832 Size: 8
	struct UOverlay* V_OV_Front_Ani;  // Offset: 840 Size: 8
	struct UWidgetSwitcher* V_LicenseCardWidgetSwitcher;  // Offset: 848 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_B1;  // Offset: 856 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_B2;  // Offset: 864 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_L1;  // Offset: 872 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_L2;  // Offset: 880 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_L3;  // Offset: 888 Size: 8
	struct ULicenseClearPopup_LicenseCardWidget* V_LicenseCard_Pro;  // Offset: 896 Size: 8



 // Functions 
 public:
	void ShowLicenseCardMoveLight(); // Function KartDrift.LicenseClearPopupWidget.ShowLicenseCardMoveLight
	void HideLicenseCardMoveLight(); // Function KartDrift.LicenseClearPopupWidget.HideLicenseCardMoveLight
}; 
 
 


//Class KartDrift.RaceSaveGame Size 184
// Inherited 40 bytes 
class URaceSaveGame : public URaceSaveGameBase
{

 public: 
	struct FString LevelName;  // Offset: 40 Size: 16
	struct FString ModeName;  // Offset: 56 Size: 16
	struct FString RecorderName;  // Offset: 72 Size: 16
	float TotalPlayTime;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct FDateTime DateTime;  // Offset: 96 Size: 8
	struct TMap<int32_t, struct FPawnRecordData> PawnRecordContainer;  // Offset: 104 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseResetFlagComponent Size 176
// Inherited 176 bytes 
class ULicenseResetFlagComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseNotifiedItemCubeComponent Size 416
// Inherited 176 bytes 
class ULicenseNotifiedItemCubeComponent : public UActorComponent
{

 public: 
	int32_t Index;  // Offset: 176 Size: 4
	char pad_180[4];  // Offset: 180 Size: 4
	struct AActor* Pawn;  // Offset: 184 Size: 8
	struct UNotifiedItemSpawn* Data;  // Offset: 192 Size: 8
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 200 Size: 16
	struct TSoftClassPtr<UObject> ItemCubeClass;  // Offset: 216 Size: 40
	struct TSoftObjectPtr<UStaticMesh> ItemCubeMeshClass;  // Offset: 256 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject1;  // Offset: 296 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject2;  // Offset: 336 Size: 40
	struct TSoftObjectPtr<UTexture2D> DiffuseTextureObject3;  // Offset: 376 Size: 40



 // Functions 
 public:
	enum class EItemType AuthNewItem(struct AGoItem_Cube* InCube); // Function KartDrift.LicenseNotifiedItemCubeComponent.AuthNewItem
}; 
 
 


//Class KartDrift.NotifyRetireCountdown Size 88
// Inherited 72 bytes 
class UNotifyRetireCountdown : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseObjectSpawnComponent Size 520
// Inherited 176 bytes 
class ULicenseObjectSpawnComponent : public UActorComponent
{

 public: 
	char pad_176[48];  // Offset: 176 Size: 48
	struct ULicenseRocketActorData* Data;  // Offset: 224 Size: 8
	struct AActor* Pawn;  // Offset: 232 Size: 8
	struct TMap<struct AActor*, int32_t> SpawnedActors;  // Offset: 240 Size: 80
	struct TArray<int32_t> QuestList;  // Offset: 320 Size: 16
	int32_t QuestIndex;  // Offset: 336 Size: 4
	char pad_340_1 : 7;  // Offset: 340 Size: 1
	bool bSuccess : 1;  // Offset: 340 Size: 1
	char pad_341_1 : 7;  // Offset: 341 Size: 1
	bool bFail : 1;  // Offset: 341 Size: 1
	char pad_342[2];  // Offset: 342 Size: 2
	float EventLastTime;  // Offset: 344 Size: 4
	char pad_348[4];  // Offset: 348 Size: 4
	struct UCurveFloat* SpawnCurve;  // Offset: 352 Size: 8
	struct UCurveFloat* DestroyCurve;  // Offset: 360 Size: 8
	char pad_368[32];  // Offset: 368 Size: 32
	struct TSoftObjectPtr<UCurveFloat> CurveFloat;  // Offset: 400 Size: 40
	struct TSoftObjectPtr<UCurveFloat> CurveFloat2;  // Offset: 440 Size: 40
	struct TSoftObjectPtr<UStaticMesh> AIKartMesh;  // Offset: 480 Size: 40



 // Functions 
 public:
	void OnTarget(struct AActor* Owner); // Function KartDrift.LicenseObjectSpawnComponent.OnTarget
	void OnAffectedBy(struct AActor* Owner, struct AItem* Item); // Function KartDrift.LicenseObjectSpawnComponent.OnAffectedBy
}; 
 
 


//Class KartDrift.M_TrackChangeDialogItem Size 400
// Inherited 40 bytes 
class UM_TrackChangeDialogItem : public UObject
{

 public: 
	char pad_40[360];  // Offset: 40 Size: 360



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PreLoadTrackImages Size 72
// Inherited 72 bytes 
class UPreLoadTrackImages : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseObjectSpawnSpline Size 680
// Inherited 544 bytes 
class ALicenseObjectSpawnSpline : public AActor
{

 public: 
	float OptimizeSplineInterval;  // Offset: 544 Size: 4
	char pad_548[4];  // Offset: 548 Size: 4
	struct USplineComponent* SplineComponent;  // Offset: 552 Size: 8
	char pad_560_1 : 7;  // Offset: 560 Size: 1
	bool bShowDebug : 1;  // Offset: 560 Size: 1
	char pad_561[7];  // Offset: 561 Size: 7
	struct FString CopyActorName;  // Offset: 568 Size: 16
	float Interval;  // Offset: 584 Size: 4
	char pad_588[4];  // Offset: 588 Size: 4
	struct TSoftObjectPtr<UStaticMesh> ObjectMeshClass;  // Offset: 592 Size: 40
	float ObjectScale;  // Offset: 632 Size: 4
	struct FVector ObjectAddLocation;  // Offset: 636 Size: 12
	struct FRotator ObjectAddRotation;  // Offset: 648 Size: 12
	char pad_660[4];  // Offset: 660 Size: 4
	struct TArray<struct FTransform> ObjectTransformArray;  // Offset: 664 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDestroyTargetFinder Size 72
// Inherited 72 bytes 
class ULicenseDestroyTargetFinder : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseObstacleComponent Size 216
// Inherited 176 bytes 
class ULicenseObstacleComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct TArray<struct AActor*> MovableActorList;  // Offset: 184 Size: 16
	struct TArray<struct FLicenseMovableActorInfo> LicenseSpawnActorDataList;  // Offset: 200 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRewardListEntry Size 152
// Inherited 40 bytes 
class ULicenseRewardListEntry : public UObject
{

 public: 
	int32_t StockIndex;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4
	struct FString stockId;  // Offset: 48 Size: 16
	struct FString StockItemId;  // Offset: 64 Size: 16
	struct FText OpenContentName;  // Offset: 80 Size: 24
	struct TSoftObjectPtr<UTexture2D> OpenContentImage;  // Offset: 104 Size: 40
	char pad_144_1 : 7;  // Offset: 144 Size: 1
	bool bReceive : 1;  // Offset: 144 Size: 1
	char pad_145[7];  // Offset: 145 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePauseButton Size 64
// Inherited 64 bytes 
class ULicensePauseButton : public ULicenseContents
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SceneCaptureTexureComponent Size 360
// Inherited 176 bytes 
class USceneCaptureTexureComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct UMaterial* RenderMaterial;  // Offset: 192 Size: 8
	struct TMap<struct TWeakObjectPtr<ASceneCapture2D>, struct FMaterialInfoArray> MaterialInstanceList;  // Offset: 200 Size: 80
	struct TMap<struct TWeakObjectPtr<USceneCaptureComponent2D>, struct FMaterialInfo> AttachedSceneCaptureMaterials;  // Offset: 280 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableOptimizeSettings Size 72
// Inherited 72 bytes 
class UEnableOptimizeSettings : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePauseButtonComponent Size 176
// Inherited 176 bytes 
class ULicensePauseButtonComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePauseDescWidget Size 640
// Inherited 608 bytes 
class ULicensePauseDescWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UKdTextBlock* V_IndexText;  // Offset: 616 Size: 8
	struct UKdTextBlock* V_InfoText;  // Offset: 624 Size: 8
	struct UImage* V_InfoImage;  // Offset: 632 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePawn Size 944
// Inherited 936 bytes 
class ALicensePawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePortraitMessageWidget Size 744
// Inherited 608 bytes 
class ULicensePortraitMessageWidget : public UUserWidget
{

 public: 
	struct UScrollBox* Message_ScrollBox;  // Offset: 608 Size: 8
	ULicenseMessageElementWidget* ScrollElementClass;  // Offset: 616 Size: 8
	struct TSoftObjectPtr<UFMODEvent> TextSound;  // Offset: 624 Size: 40
	struct UImage* V_Image_Portrait;  // Offset: 664 Size: 8
	struct UWidgetAnimation* Anim_MsgShow;  // Offset: 672 Size: 8
	struct UWidgetAnimation* Anim_MsgHide;  // Offset: 680 Size: 8
	struct ULicenseMessageElementWidget* CurrentElementWidget;  // Offset: 688 Size: 8
	struct UScenarioParseInstance* ParseInstance;  // Offset: 696 Size: 8
	char pad_704[40];  // Offset: 704 Size: 40



 // Functions 
 public:
	void OnParseText(struct FString InText, bool InIsStyleCode, bool InIsCarriageReturn); // Function KartDrift.LicensePortraitMessageWidget.OnParseText
}; 
 
 


//Class KartDrift.LicenseRemovableObstacleComp Size 392
// Inherited 176 bytes 
class ULicenseRemovableObstacleComp : public UActorComponent
{

 public: 
	struct ULicenseRemovableObstacleData* Data;  // Offset: 176 Size: 8
	struct TMap<int32_t, struct AActor*> RemovableObstacleList;  // Offset: 184 Size: 80
	struct TMap<int32_t, struct USceneComponent*> RemovableObstacleList_Mesh;  // Offset: 264 Size: 80
	int32_t TotalObstacleCount;  // Offset: 344 Size: 4
	char pad_348_1 : 7;  // Offset: 348 Size: 1
	bool bOnceGate : 1;  // Offset: 348 Size: 1
	char pad_349[3];  // Offset: 349 Size: 3
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 352 Size: 40



 // Functions 
 public:
	void RemoveObstacle(int32_t InIndex); // Function KartDrift.LicenseRemovableObstacleComp.RemoveObstacle
}; 
 
 


//Class KartDrift.LicenseMissionResultWidget Size 928
// Inherited 816 bytes 
class ULicenseMissionResultWidget : public UDialogTemplate
{

 public: 
	struct UKdTextBlock* V_CurrentScore;  // Offset: 816 Size: 8
	struct UKdTextBlock* V_CurrentScore_2;  // Offset: 824 Size: 8
	struct UTextBlock* Text_NewOrTime_2;  // Offset: 832 Size: 8
	struct UWidgetSwitcher* SW_ScoreTime;  // Offset: 840 Size: 8
	struct UWidgetAnimation* Anim_Show;  // Offset: 848 Size: 8
	struct ULicenseStarIcon* Star_2;  // Offset: 856 Size: 8
	struct ULicenseStarIcon* Star_3;  // Offset: 864 Size: 8
	struct ULicenseStarIcon* Star_4;  // Offset: 872 Size: 8
	struct ULicenseMissionResultWidgetInst* CondtionItem_2;  // Offset: 880 Size: 8
	struct ULicenseMissionResultWidgetInst* CondtionItem_3;  // Offset: 888 Size: 8
	struct ULicenseMissionResultWidgetInst* CondtionItem_4;  // Offset: 896 Size: 8
	struct UKdListView* KdListView_DetailScore;  // Offset: 904 Size: 8
	float StarMasterDelay;  // Offset: 912 Size: 4
	float StarInstDelay;  // Offset: 916 Size: 4
	char pad_920[8];  // Offset: 920 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseReportListEntry Size 640
// Inherited 608 bytes 
class ULicenseReportListEntry : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UKdTextBlock* Kd_item;  // Offset: 616 Size: 8
	struct UKdTextBlock* Kd_calculate;  // Offset: 624 Size: 8
	struct UKdTextBlock* Kd_Total;  // Offset: 632 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseReserveItem Size 80
// Inherited 64 bytes 
class ULicenseReserveItem : public ULicenseContents
{

 public: 
	enum class EItemType ItemType;  // Offset: 64 Size: 1
	char pad_65[3];  // Offset: 65 Size: 3
	int32_t Count;  // Offset: 68 Size: 4
	float DelaySpawnTime;  // Offset: 72 Size: 4
	char pad_76_1 : 7;  // Offset: 76 Size: 1
	bool bEndGameOnEmpty : 1;  // Offset: 76 Size: 1
	char pad_77[3];  // Offset: 77 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseReservedItemComponent Size 224
// Inherited 176 bytes 
class ULicenseReservedItemComponent : public UActorComponent
{

 public: 
	struct AActor* Pawn;  // Offset: 176 Size: 8
	struct ULicenseReserveItem* Data;  // Offset: 184 Size: 8
	char pad_192[16];  // Offset: 192 Size: 16
	char pad_208_1 : 7;  // Offset: 208 Size: 1
	bool bReserveSpawn : 1;  // Offset: 208 Size: 1
	char pad_209[3];  // Offset: 209 Size: 3
	float ReserveSpawnTime;  // Offset: 212 Size: 4
	float SpawnTimer;  // Offset: 216 Size: 4
	char pad_220[4];  // Offset: 220 Size: 4



 // Functions 
 public:
	void OnUseItem(struct APawn* InPawn, enum class EItemType InType); // Function KartDrift.LicenseReservedItemComponent.OnUseItem
}; 
 
 


//Class KartDrift.LicenseNoticeSaveGame Size 120
// Inherited 40 bytes 
class ULicenseNoticeSaveGame : public USaveGame
{

 public: 
	struct TMap<uint32_t, struct FLicenseNoticeSaveGameData> SaveData;  // Offset: 40 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseRules Size 72
// Inherited 72 bytes 
class ULicenseRules : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicensePauseButtonWidget Size 112
// Inherited 72 bytes 
class UCreateLicensePauseButtonWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicensePauseButtonWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicensePlayBGMRule Size 72
// Inherited 72 bytes 
class ULicensePlayBGMRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseEndRaceRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseEndRaceRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.VisibleItemCubeRule Size 72
// Inherited 72 bytes 
class UVisibleItemCubeRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateCustomItemCubeRule Size 88
// Inherited 72 bytes 
class UActivateCustomItemCubeRule : public URuleObject
{

 public: 
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CustomItemCubeRule Size 88
// Inherited 72 bytes 
class UCustomItemCubeRule : public URuleObject
{

 public: 
	struct TArray<struct AGoItem_Cube*> ItemCubeList;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchNotifyMatched Size 64
// Inherited 48 bytes 
class UMatchNotifyMatched : public UKxObject
{

 public: 
	struct UObject* gameSettings;  // Offset: 48 Size: 8
	struct UObject* gameDetails;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpawnMagnetPawnList Size 192
// Inherited 72 bytes 
class USpawnMagnetPawnList : public URuleObject
{

 public: 
	struct TArray<struct AKdPawn*> PawnList;  // Offset: 72 Size: 16
	struct TArray<struct FLicenseStaticActorInfo> LicenseSpawnActorDataList;  // Offset: 88 Size: 16
	struct UFMODEvent* Sound_A;  // Offset: 104 Size: 8
	struct TSoftObjectPtr<UStaticMesh> WeightMesh;  // Offset: 112 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Particle;  // Offset: 152 Size: 40



 // Functions 
 public:
	void OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.SpawnMagnetPawnList.OnComponentBeginOverlap
}; 
 
 


//Class KartDrift.MovableObstacleListRule Size 104
// Inherited 72 bytes 
class UMovableObstacleListRule : public URuleObject
{

 public: 
	struct TArray<struct FLicenseStaticActorInfo> LicenseSpawnActorDataList;  // Offset: 72 Size: 16
	struct TArray<struct AActor*> ActorList;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseScoreWidget Size 152
// Inherited 72 bytes 
class UCreateLicenseScoreWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseScoreWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> ScoreInstWidgetClass;  // Offset: 112 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseIceBallWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseIceBallWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseIceBallWidgetClass;  // Offset: 72 Size: 40
	struct UUserWidget* IceBall;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseSpeedLimitWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseSpeedLimitWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseSpeedLimitClass;  // Offset: 72 Size: 40
	struct UUserWidget* SpeedLimit;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseAIDistanceWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseAIDistanceWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseAIDistanceClass;  // Offset: 72 Size: 40
	struct UUserWidget* AIDistance;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseBossWinRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseBossWinRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseAIKnockOutRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseAIKnockOutRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateAssistWidgets Size 160
// Inherited 72 bytes 
class UActivateAssistWidgets : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> AssistDriftWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> AssistListWidgetClass;  // Offset: 112 Size: 40
	char pad_152[8];  // Offset: 152 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ResetForceFeedbackRule Size 72
// Inherited 72 bytes 
class UResetForceFeedbackRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTMIRecordComponent Size 248
// Inherited 176 bytes 
class ULicenseTMIRecordComponent : public UActorComponent
{

 public: 
	char pad_176[72];  // Offset: 176 Size: 72



 // Functions 
 public:
	void OnCrash(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.LicenseTMIRecordComponent.OnCrash
}; 
 
 


//Class KartDrift.Transition_Result_License Size 80
// Inherited 80 bytes 
class UTransition_Result_License : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitializeLicenseScoreComponentRule Size 72
// Inherited 72 bytes 
class UInitializeLicenseScoreComponentRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseMessageWidget Size 112
// Inherited 72 bytes 
class UCreateLicenseMessageWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseMessageWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseDisableKartMovementRule Size 72
// Inherited 72 bytes 
class ULicenseDisableKartMovementRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ReserveItemRule Size 88
// Inherited 80 bytes 
class UTransition_ReserveItemRule : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseDraftWidget Size 112
// Inherited 72 bytes 
class UCreateLicenseDraftWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseDraftWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseGaugeChargingWidget Size 120
// Inherited 72 bytes 
class UCreateLicenseGaugeChargingWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseGaugeChargingWidgetClass;  // Offset: 72 Size: 40
	char pad_112[8];  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseCalcResultRule Size 72
// Inherited 72 bytes 
class ULicenseCalcResultRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrRegisterMatch Size 88
// Inherited 72 bytes 
class UPrRegisterMatch : public UPrPacket
{

 public: 
	struct FString mmTicket;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OnSuccessLicenseRule Size 72
// Inherited 72 bytes 
class UOnSuccessLicenseRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_Success_License Size 80
// Inherited 80 bytes 
class UTransition_Success_License : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_Failure_License Size 80
// Inherited 80 bytes 
class UTransition_Failure_License : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseDescWidget Size 136
// Inherited 72 bytes 
class UCreateLicenseDescWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseDescWidgetClass;  // Offset: 72 Size: 40
	float PlayTime;  // Offset: 112 Size: 4
	char pad_116[4];  // Offset: 116 Size: 4
	struct TArray<struct FString> DescList;  // Offset: 120 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioCountdownActive Size 696
// Inherited 688 bytes 
class AScenarioCountdownActive : public AScenarioWidget
{

 public: 
	float CountdownTime;  // Offset: 688 Size: 4
	char pad_692[4];  // Offset: 692 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_PrepareLicenseRestart Size 80
// Inherited 80 bytes 
class UTransition_PrepareLicenseRestart : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_Restart_License Size 88
// Inherited 80 bytes 
class UTransition_Restart_License : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackAiPawn Size 968
// Inherited 936 bytes 
class ATimeAttackAiPawn : public AKdPawn
{

 public: 
	char pad_936[32];  // Offset: 936 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateSkipSequenceRule Size 72
// Inherited 72 bytes 
class UActivateSkipSequenceRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopAllProductList Size 200
// Inherited 72 bytes 
class UPrShopAllProductList : public UPrPacket
{

 public: 
	struct TArray<struct FKtShopStock> itemShopProducts;  // Offset: 72 Size: 16
	struct TArray<struct FKtShopStock> koinShopProducts;  // Offset: 88 Size: 16
	struct TArray<struct FKtShopStock> cashShopProducts;  // Offset: 104 Size: 16
	struct TMap<struct FString, struct FString> platformShopProductIds;  // Offset: 120 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_SkipSeqeunce_License Size 80
// Inherited 80 bytes 
class UTransition_SkipSeqeunce_License : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSetViewTarget Size 72
// Inherited 72 bytes 
class ULicenseSetViewTarget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayLicenseFinishSequence Size 88
// Inherited 72 bytes 
class UPlayLicenseFinishSequence : public URuleObject
{

 public: 
	struct ULevelSequence* SequenceOverride;  // Offset: 72 Size: 8
	struct ALevelSequenceActor* SequenceActor;  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLicenseCoinWidget Size 112
// Inherited 72 bytes 
class UCreateLicenseCoinWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LicenseCoinWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseBarricadeHitLoseRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseBarricadeHitLoseRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateAssistObjects Size 80
// Inherited 72 bytes 
class UActivateAssistObjects : public URuleObject
{

 public: 
	char pad_72[8];  // Offset: 72 Size: 8



 // Functions 
 public:
	void OnSubLevelAllLoadComplete(); // Function KartDrift.ActivateAssistObjects.OnSubLevelAllLoadComplete
}; 
 
 


//Class KartDrift.Transition_LicenseCoinLoseRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseCoinLoseRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LicenseTutorialChapterCompletedRule Size 80
// Inherited 80 bytes 
class UTransition_LicenseTutorialChapterCompletedRule : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseStartReplay Size 72
// Inherited 72 bytes 
class ULicenseStartReplay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseEndReplay Size 72
// Inherited 72 bytes 
class ULicenseEndReplay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseStarCondition Size 64
// Inherited 48 bytes 
class ULicenseStarCondition : public UDataAsset
{

 public: 
	enum class ELicenseStarConditionType Type;  // Offset: 48 Size: 1
	char pad_49[3];  // Offset: 49 Size: 3
	int32_t Threshold_2;  // Offset: 52 Size: 4
	int32_t Threshold_3;  // Offset: 56 Size: 4
	int32_t Threshold_4;  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitReplayTimeControl Size 72
// Inherited 72 bytes 
class UInitReplayTimeControl : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseScoreComponent Size 296
// Inherited 176 bytes 
class ULicenseScoreComponent : public UActorComponent
{

 public: 
	struct ULicenseStarCondition* Condition;  // Offset: 176 Size: 8
	struct TMap<enum class ELicenseScoreReason, struct FLicenseResultData> ReasonMap;  // Offset: 184 Size: 80
	enum class ELicenseScoreReason TimeScoreReason;  // Offset: 264 Size: 1
	enum class ELicenseScoreReason FinishScoreReason;  // Offset: 265 Size: 1
	char pad_266[2];  // Offset: 266 Size: 2
	int32_t StarLevel;  // Offset: 268 Size: 4
	int32_t Score;  // Offset: 272 Size: 4
	float ResultTime;  // Offset: 276 Size: 4
	float TotalTime;  // Offset: 280 Size: 4
	float TimeScoreWeight;  // Offset: 284 Size: 4
	int32_t FinishScore;  // Offset: 288 Size: 4
	char pad_292_1 : 7;  // Offset: 292 Size: 1
	bool bFailOnTimeOver : 1;  // Offset: 292 Size: 1
	char pad_293_1 : 7;  // Offset: 293 Size: 1
	bool bFail : 1;  // Offset: 293 Size: 1
	char pad_294_1 : 7;  // Offset: 294 Size: 1
	bool bCalcResult : 1;  // Offset: 294 Size: 1
	char pad_295[1];  // Offset: 295 Size: 1



 // Functions 
 public:
	void AddScore_float(float floatData, float BaseScore, enum class ELicenseScoreReason Reason); // Function KartDrift.LicenseScoreComponent.AddScore_float
	void AddScore(int32_t Score, enum class ELicenseScoreReason Reason); // Function KartDrift.LicenseScoreComponent.AddScore
}; 
 
 


//Class KartDrift.ActivateAssistKarts Size 72
// Inherited 72 bytes 
class UActivateAssistKarts : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseScoreDataComponent Size 184
// Inherited 176 bytes 
class ULicenseScoreDataComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryColorColumnEntryObject Size 128
// Inherited 40 bytes 
class ULiveryColorColumnEntryObject : public UObject
{

 public: 
	enum class ELiveryCategoryType ColorCategory;  // Offset: 40 Size: 1
	char pad_41[3];  // Offset: 41 Size: 3
	int32_t ColumnIndex;  // Offset: 44 Size: 4
	struct TArray<struct FLinearColor> ColorRows;  // Offset: 48 Size: 16
	struct TArray<struct FText> ColorLabels;  // Offset: 64 Size: 16
	struct TArray<struct FString> IntensityLabels;  // Offset: 80 Size: 16
	struct TArray<struct TSoftObjectPtr<UTexture2D>> ImageRows;  // Offset: 96 Size: 16
	enum class ELiveryMaterialType RowMaterialType;  // Offset: 112 Size: 1
	char pad_113[3];  // Offset: 113 Size: 3
	struct TWeakObjectPtr<UListView> OwnerListView;  // Offset: 116 Size: 8
	char pad_124_1 : 7;  // Offset: 124 Size: 1
	bool bFakeSelect : 1;  // Offset: 124 Size: 1
	char pad_125[3];  // Offset: 125 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseScoreData Size 64
// Inherited 64 bytes 
class ULicenseScoreData : public ULicenseContents
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseStarIcon Size 624
// Inherited 608 bytes 
class ULicenseStarIcon : public UUserWidget
{

 public: 
	struct UWidgetAnimation* GetStar;  // Offset: 608 Size: 8
	struct UWidgetAnimation* LostStar;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseScoreInstanceWidget Size 640
// Inherited 608 bytes 
class ULicenseScoreInstanceWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_Score_Text;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Score_Text_2;  // Offset: 616 Size: 8
	struct UWidgetAnimation* Anim_addscore;  // Offset: 624 Size: 8
	struct UWidgetSwitcher* V_Score_Switcher;  // Offset: 632 Size: 8



 // Functions 
 public:
	void AddScore(int32_t Score, bool bSuccess); // Function KartDrift.LicenseScoreInstanceWidget.AddScore
}; 
 
 


//Class KartDrift.MinimapActor Size 696
// Inherited 544 bytes 
class AMinimapActor : public AActor
{

 public: 
	struct UStaticMeshComponent* Minimap_Mesh;  // Offset: 544 Size: 8
	struct USceneCaptureComponent2D* MinimapSceneCapture;  // Offset: 552 Size: 8
	char pad_560[4];  // Offset: 560 Size: 4
	float MinimapCaptureScale;  // Offset: 564 Size: 4
	float CamDistance;  // Offset: 568 Size: 4
	float CamOffset;  // Offset: 572 Size: 4
	float MinimapRot;  // Offset: 576 Size: 4
	float MinimapScale;  // Offset: 580 Size: 4
	float ArrowScale;  // Offset: 584 Size: 4
	float DotScale;  // Offset: 588 Size: 4
	char pad_592[8];  // Offset: 592 Size: 8
	struct UTexture2D* SDFMiniMapTexture;  // Offset: 600 Size: 8
	char pad_608[48];  // Offset: 608 Size: 48
	float ZoomOrthoWidth;  // Offset: 656 Size: 4
	float CamHeight;  // Offset: 660 Size: 4
	float CamFov;  // Offset: 664 Size: 4
	char pad_668[12];  // Offset: 668 Size: 12
	struct UMaterial* MaterialForBirdView;  // Offset: 680 Size: 8
	char pad_688[8];  // Offset: 688 Size: 8



 // Functions 
 public:
	float GetMinimapZoom(); // Function KartDrift.MinimapActor.GetMinimapZoom
}; 
 
 


//Class KartDrift.LicenseScoreInterface Size 40
// Inherited 40 bytes 
class ULicenseScoreInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchInputHUD Size 952
// Inherited 608 bytes 
class UTouchInputHUD : public UUserWidget
{

 public: 
	struct UTouchSteeringButton* V_LeftBtn;  // Offset: 608 Size: 8
	struct UTouchSteeringButton* V_RightBtn;  // Offset: 616 Size: 8
	struct UTouchDriftButton* V_DriftBtn;  // Offset: 624 Size: 8
	struct UTouchDriftButton* V_LeftDriftBtn;  // Offset: 632 Size: 8
	struct UTouchDriftButton* V_RightDriftBtn;  // Offset: 640 Size: 8
	struct UTouchResetButton* V_ResetBtn;  // Offset: 648 Size: 8
	struct UTouchBrakeButton* V_BrakeBtn01;  // Offset: 656 Size: 8
	struct UTouchBrakeButton* V_BrakeBtn02;  // Offset: 664 Size: 8
	struct UTouchInstanceBoosterButton* V_InstanceBoostBtn01;  // Offset: 672 Size: 8
	struct UTouchInstanceBoosterButton* V_InstanceBoostBtn02;  // Offset: 680 Size: 8
	struct UTouchStartBoosterButton* V_StartBoosterButton01;  // Offset: 688 Size: 8
	struct UTouchStartBoosterButton* V_StartBoosterButton02;  // Offset: 696 Size: 8
	struct UTouchItemButton* V_ItemInput0;  // Offset: 704 Size: 8
	struct UTouchItemButton* V_ItemInput1;  // Offset: 712 Size: 8
	struct UTouchItemButton* V_ItemInput2;  // Offset: 720 Size: 8
	struct UTouchKeyGuideWidget* V_TouchKeyGuideWidget;  // Offset: 728 Size: 8
	struct UUserWidget* V_TouchEmoticonButton;  // Offset: 736 Size: 8
	struct UNamedSlot* V_LapWidget_Slot;  // Offset: 744 Size: 8
	struct UNamedSlot* V_RaceRanking_Slot;  // Offset: 752 Size: 8
	struct UNamedSlot* V_MicChatButton_Slot;  // Offset: 760 Size: 8
	struct UNamedSlot* V_Minimap_Slot;  // Offset: 768 Size: 8
	struct UNamedSlot* V_Tachometer_Slot;  // Offset: 776 Size: 8
	struct UNamedSlot* V_DriftGauge_Slot;  // Offset: 784 Size: 8
	struct UNamedSlot* V_TTS_Slot;  // Offset: 792 Size: 8
	struct UNamedSlot* V_EmoticonBtn_Slot;  // Offset: 800 Size: 8
	struct UNamedSlot* V_ItemFeed_Slot;  // Offset: 808 Size: 8
	struct UNamedSlot* V_ItemSlotBunch_Slot;  // Offset: 816 Size: 8
	struct UNamedSlot* V_LeftBtn_Slot;  // Offset: 824 Size: 8
	struct UNamedSlot* V_RightBtn_Slot;  // Offset: 832 Size: 8
	struct UNamedSlot* V_DriftBtn_Slot;  // Offset: 840 Size: 8
	struct UNamedSlot* V_LeftDriftBtn_Slot;  // Offset: 848 Size: 8
	struct UNamedSlot* V_RightDriftBtn_Slot;  // Offset: 856 Size: 8
	struct UNamedSlot* V_ResetBtn_Slot;  // Offset: 864 Size: 8
	struct UNamedSlot* V_BrakeBtn01_Slot;  // Offset: 872 Size: 8
	struct UNamedSlot* V_BrakeBtn02_Slot;  // Offset: 880 Size: 8
	struct UNamedSlot* V_InstanceBoostBtn01_Slot;  // Offset: 888 Size: 8
	struct UNamedSlot* V_InstanceBoostBtn02_Slot;  // Offset: 896 Size: 8
	struct UNamedSlot* V_StartBoosterButton01_Slot;  // Offset: 904 Size: 8
	struct UNamedSlot* V_StartBoosterButton02_Slot;  // Offset: 912 Size: 8
	struct UNamedSlot* V_WifiWidget;  // Offset: 920 Size: 8
	struct UNamedSlot* V_BatteryWidget;  // Offset: 928 Size: 8
	char pad_936[16];  // Offset: 936 Size: 16



 // Functions 
 public:
	void SetItemButtons(); // Function KartDrift.TouchInputHUD.SetItemButtons
}; 
 
 


//Class KartDrift.LicenseSeqeuncerComponent Size 224
// Inherited 176 bytes 
class ULicenseSeqeuncerComponent : public UActorComponent
{

 public: 
	char pad_176[48];  // Offset: 176 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSequenceDirector Size 64
// Inherited 56 bytes 
class ULicenseSequenceDirector : public ULevelSequenceDirector
{

 public: 
	struct ULicenseSequenceDecodingComponent* LicenseSequenceComponent;  // Offset: 56 Size: 8



 // Functions 
 public:
	void SetPawnInitWithMovement(struct APawn* Pawn, struct USequencerEquipData* DataAsset, struct FString PawnName); // Function KartDrift.LicenseSequenceDirector.SetPawnInitWithMovement
	void PlayLicenseCaption(struct FString Caption, float CaptionTime, float PauseTime, bool bSeperateMobileCaption); // Function KartDrift.LicenseSequenceDirector.PlayLicenseCaption
}; 
 
 


//Class KartDrift.M_TimeAttackRankerInfo Size 616
// Inherited 608 bytes 
class UM_TimeAttackRankerInfo : public UUserWidget
{

 public: 
	char pad_608_1 : 7;  // Offset: 608 Size: 1
	bool bAlignLeft : 1;  // Offset: 608 Size: 1
	char pad_609_1 : 7;  // Offset: 609 Size: 1
	bool bShowSelectRankerButton : 1;  // Offset: 609 Size: 1
	char pad_610_1 : 7;  // Offset: 610 Size: 1
	bool bUseHighlightBar : 1;  // Offset: 610 Size: 1
	char pad_611[5];  // Offset: 611 Size: 5



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayLicenseStartSequence Size 248
// Inherited 72 bytes 
class UPlayLicenseStartSequence : public URuleObject
{

 public: 
	struct ULevelSequencePlayer* SequencePlayer;  // Offset: 72 Size: 8
	struct TArray<struct FSequenceKartMovementKeys> KartMovementArray;  // Offset: 80 Size: 16
	struct TSoftClassPtr<UObject> HudWidgetClass;  // Offset: 96 Size: 40
	struct TSoftClassPtr<UObject> BoostGaugeWidgetClass;  // Offset: 136 Size: 40
	struct TSoftClassPtr<UObject> ScoreWidgetClass;  // Offset: 176 Size: 40
	struct APawn* SequencePawn;  // Offset: 216 Size: 8
	struct ULevelSequence* SequenceOverride;  // Offset: 224 Size: 8
	struct ULicenseDataAsset* LicenseDataAsset;  // Offset: 232 Size: 8
	struct ALevelSequenceActor* SequenceActor;  // Offset: 240 Size: 8



 // Functions 
 public:
	void SetWorldOrigin(); // Function KartDrift.PlayLicenseStartSequence.SetWorldOrigin
}; 
 
 


//Class KartDrift.LicenseSpeedCheckData Size 248
// Inherited 80 bytes 
class ULicenseSpeedCheckData : public ULicenseCalcDistanceRule
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8
	struct TArray<struct FLicenseSpeedGateDef> LicenseSpeedGateDefVector;  // Offset: 88 Size: 16
	struct TArray<float> MinSpeed;  // Offset: 104 Size: 16
	struct TArray<float> MaxSpeed;  // Offset: 120 Size: 16
	int32_t MissionPoints;  // Offset: 136 Size: 4
	int32_t Index;  // Offset: 140 Size: 4
	struct TSoftObjectPtr<UStaticMesh> GateMeshClass;  // Offset: 144 Size: 40
	float GateSize;  // Offset: 184 Size: 4
	float ParticleScaleMultiplier;  // Offset: 188 Size: 4
	struct FVector ParticleLocationOffset;  // Offset: 192 Size: 12
	char pad_204[4];  // Offset: 204 Size: 4
	struct TSoftObjectPtr<UParticleSystem> GateParticle;  // Offset: 208 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseSpeedCheckComponent Size 368
// Inherited 176 bytes 
class ULicenseSpeedCheckComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct ULicenseSpeedCheckData* Data;  // Offset: 200 Size: 8
	struct UParticleSystem* GateParticleSystem;  // Offset: 208 Size: 8
	struct TArray<struct AActor*> SpeedGateList;  // Offset: 216 Size: 16
	int32_t CurrentIndex;  // Offset: 232 Size: 4
	char pad_236[4];  // Offset: 236 Size: 4
	struct APawn* Pawn;  // Offset: 240 Size: 8
	struct FVector LastPosition;  // Offset: 248 Size: 12
	char pad_260[4];  // Offset: 260 Size: 4
	struct AActor* Owner;  // Offset: 264 Size: 8
	char pad_272[96];  // Offset: 272 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopGift Size 120
// Inherited 56 bytes 
class UPqShopGift : public UPqPacket
{

 public: 
	struct FString Category;  // Offset: 56 Size: 16
	struct FString stockId;  // Offset: 72 Size: 16
	struct FString currency;  // Offset: 88 Size: 16
	struct FString receiver;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseStartTitleWidget Size 616
// Inherited 608 bytes 
class ULicenseStartTitleWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_Text_Title;  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTargetActorData Size 112
// Inherited 64 bytes 
class ULicenseTargetActorData : public ULicenseContents
{

 public: 
	struct TArray<struct FLicenseItemTargetActorInfo> LicenseSpawnActorDataList;  // Offset: 64 Size: 16
	float Offset;  // Offset: 80 Size: 4
	float Scale;  // Offset: 84 Size: 4
	int32_t Score;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct TArray<struct FLicenseTargetRankPattern> RankPatterns;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTimer Size 80
// Inherited 64 bytes 
class ULicenseTimer : public ULicenseContents
{

 public: 
	float TotalTime;  // Offset: 64 Size: 4
	float weight;  // Offset: 68 Size: 4
	int32_t ScoreWhenFinished;  // Offset: 72 Size: 4
	char pad_76_1 : 7;  // Offset: 76 Size: 1
	bool bFailOnTimeOver : 1;  // Offset: 76 Size: 1
	char pad_77[3];  // Offset: 77 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTimerComponent Size 192
// Inherited 176 bytes 
class ULicenseTimerComponent : public UActorComponent
{

 public: 
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 176 Size: 8
	char pad_184[8];  // Offset: 184 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountLinkConfirm Size 96
// Inherited 72 bytes 
class UPrAccountLinkConfirm : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bSucceed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	int64_t userNo;  // Offset: 80 Size: 8
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool bBanned : 1;  // Offset: 88 Size: 1
	char pad_89[3];  // Offset: 89 Size: 3
	int32_t ErrorCode;  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrackGuideComponent Size 288
// Inherited 176 bytes 
class ULicenseTrackGuideComponent : public UActorComponent
{

 public: 
	struct ULicenseTrackGuideData* Data;  // Offset: 176 Size: 8
	struct ALicenseTrackLine* TrackLine;  // Offset: 184 Size: 8
	struct APawn* Pawn;  // Offset: 192 Size: 8
	struct URaceProgressComponent* RaceProgressComponent;  // Offset: 200 Size: 8
	char pad_208[80];  // Offset: 208 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrackLineData Size 112
// Inherited 64 bytes 
class ULicenseTrackLineData : public ULicenseContents
{

 public: 
	float DragForceMultiplier;  // Offset: 64 Size: 4
	char pad_68[4];  // Offset: 68 Size: 4
	struct TSoftClassPtr<UObject> WarningWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LicenseTrafficConeComponent Size 240
// Inherited 176 bytes 
class ULicenseTrafficConeComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct ULicenseSpawnTrafficConeData* Data;  // Offset: 184 Size: 8
	char pad_192[8];  // Offset: 192 Size: 8
	struct AKdPawn* Pawn;  // Offset: 200 Size: 8
	char pad_208[32];  // Offset: 208 Size: 32



 // Functions 
 public:
	void OnTrafficConeHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.LicenseTrafficConeComponent.OnTrafficConeHit
}; 
 
 


//Class KartDrift.ThumbnailTemplate Size 616
// Inherited 608 bytes 
class UThumbnailTemplate : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioNotify Size 648
// Inherited 624 bytes 
class AScenarioNotify : public AScenarioBase
{

 public: 
	struct TArray<struct FScenarioNotifyParameter> NotifyContainer;  // Offset: 624 Size: 16
	char pad_640[8];  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifyPodium Size 88
// Inherited 72 bytes 
class UNotifyPodium : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorPersonalResultWidget Size 1512
// Inherited 816 bytes 
class UMajorPersonalResultWidget : public UDialogTemplate
{

 public: 
	struct UTextBlock* Text_RaceMode;  // Offset: 816 Size: 8
	struct UTextBlock* Text_TeamMode;  // Offset: 824 Size: 8
	struct UImage* Image_RankBackground;  // Offset: 832 Size: 8
	struct UTextBlock* Text_OrdinalNumberRank;  // Offset: 840 Size: 8
	struct UImage* V_LapTimeBackGround;  // Offset: 848 Size: 8
	struct UTextBlock* Text_LapTime;  // Offset: 856 Size: 8
	struct UWrapBox* WrapBox_Players;  // Offset: 864 Size: 8
	struct UWidgetSwitcher* WS_ClearOrFail;  // Offset: 872 Size: 8
	struct UVerticalBox* VB_PlayMission;  // Offset: 880 Size: 8
	struct TSoftClassPtr<UObject> PlayerWidgetClass;  // Offset: 888 Size: 40
	struct TMap<enum class ERaceMode, struct FText> TextLocalizeRaceModeContainer;  // Offset: 928 Size: 80
	struct TMap<enum class ERaceMode, struct FText> TextLocalizeTeamModeContainer;  // Offset: 1008 Size: 80
	struct TArray<struct UMajorPersonalResultPlayerWidget*> PlayerWidgets;  // Offset: 1088 Size: 16
	char pad_1104[168];  // Offset: 1104 Size: 168
	struct TMap<enum class ERaceTeamType, struct FLinearColor> LapTimeTextColorContainer;  // Offset: 1272 Size: 80
	struct TMap<enum class ERaceTeamType, struct FLinearColor> LapTimeBackGroundColorContainer;  // Offset: 1352 Size: 80
	struct TMap<enum class ERaceTeamType, struct FLinearColor> RankBackGroundColorContainer;  // Offset: 1432 Size: 80



 // Functions 
 public:
	void HideUI(); // Function KartDrift.MajorPersonalResultWidget.HideUI
}; 
 
 


//Class KartDrift.LiveryShapeEntryObject Size 232
// Inherited 40 bytes 
class ULiveryShapeEntryObject : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct FDateTime RestrictionExpireTime;  // Offset: 48 Size: 8
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool bEmptyItem : 1;  // Offset: 56 Size: 1
	enum class ELiveryWrappingCategory Category;  // Offset: 57 Size: 1
	char pad_58[2];  // Offset: 58 Size: 2
	int32_t FileIndex;  // Offset: 60 Size: 4
	int32_t ListIndex;  // Offset: 64 Size: 4
	char pad_68_1 : 7;  // Offset: 68 Size: 1
	bool bMySticker : 1;  // Offset: 68 Size: 1
	char pad_69_1 : 7;  // Offset: 69 Size: 1
	bool bColorOverride : 1;  // Offset: 69 Size: 1
	char pad_70[2];  // Offset: 70 Size: 2
	struct FText StickerName;  // Offset: 72 Size: 24
	enum class EKtItemGrade StickerGrade;  // Offset: 96 Size: 1
	char pad_97[3];  // Offset: 97 Size: 3
	int32_t ItemNum;  // Offset: 100 Size: 4
	struct FString ItemId;  // Offset: 104 Size: 16
	struct FString ShapePath;  // Offset: 120 Size: 16
	char pad_136[8];  // Offset: 136 Size: 8
	int32_t CanvasResolution;  // Offset: 144 Size: 4
	char pad_148_1 : 7;  // Offset: 148 Size: 1
	bool bLoaded : 1;  // Offset: 148 Size: 1
	char pad_149[3];  // Offset: 149 Size: 3
	int32_t PageNum;  // Offset: 152 Size: 4
	char pad_156[4];  // Offset: 156 Size: 4
	struct FLiveryItemInfo LiveryItemInfo;  // Offset: 160 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGameLevelScriptActor Size 552
// Inherited 552 bytes 
class AOutGameLevelScriptActor : public ALevelScriptActor
{

 public: 



 // Functions 
 public:
	void OnSubLevelsLoaded(); // Function KartDrift.OutGameLevelScriptActor.OnSubLevelsLoaded
}; 
 
 


//Class KartDrift.LiveryMaterialGamutParams Size 80
// Inherited 48 bytes 
class ULiveryMaterialGamutParams : public UDataAsset
{

 public: 
	struct TArray<struct FLiveryMaterialGamut> MaterialGamut;  // Offset: 48 Size: 16
	struct TArray<struct FName> ResetScalarParams;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KartDecalChartDataAsset Size 64
// Inherited 48 bytes 
class UKartDecalChartDataAsset : public UDataAsset
{

 public: 
	struct TArray<struct FKartDecalChart> Charts;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadPhaseComponentRule Size 72
// Inherited 72 bytes 
class ULoadPhaseComponentRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryPaintCollection Size 64
// Inherited 48 bytes 
class ULiveryPaintCollection : public UDataAsset
{

 public: 
	struct TArray<struct TSoftObjectPtr<UTexture2D>> PaintTextures;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryItemEntryObject Size 104
// Inherited 40 bytes 
class ULiveryItemEntryObject : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct FDateTime RestrictionExpireTime;  // Offset: 48 Size: 8
	int32_t ItemIndex;  // Offset: 56 Size: 4
	int32_t liveryId;  // Offset: 60 Size: 4
	struct FString KartID;  // Offset: 64 Size: 16
	char pad_80_1 : 7;  // Offset: 80 Size: 1
	bool bEquipped : 1;  // Offset: 80 Size: 1
	enum class ELiveryManagingBtnType BtnType;  // Offset: 81 Size: 1
	char pad_82[6];  // Offset: 82 Size: 6
	struct UTexture2D* GroupItemTexture;  // Offset: 88 Size: 8
	struct TWeakObjectPtr<UMaterialInstance> MaterialIcon;  // Offset: 96 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryColorRowEntryObject Size 192
// Inherited 40 bytes 
class ULiveryColorRowEntryObject : public UObject
{

 public: 
	enum class ELiveryCategoryType ColorCategory;  // Offset: 40 Size: 1
	char pad_41[3];  // Offset: 41 Size: 3
	int32_t ColumnIndex;  // Offset: 44 Size: 4
	int32_t RowIndex;  // Offset: 48 Size: 4
	struct FLinearColor RowColor;  // Offset: 52 Size: 16
	char pad_68[4];  // Offset: 68 Size: 4
	struct FText ColorLabel;  // Offset: 72 Size: 24
	struct FString IntensityLabel;  // Offset: 96 Size: 16
	struct TSoftObjectPtr<UTexture2D> RowImage;  // Offset: 112 Size: 40
	enum class ELiveryMaterialType RowMaterialType;  // Offset: 152 Size: 1
	char pad_153[3];  // Offset: 153 Size: 3
	struct FVector2D RowBoxSize;  // Offset: 156 Size: 8
	struct TWeakObjectPtr<UListView> ParentListView;  // Offset: 164 Size: 8
	char pad_172[20];  // Offset: 172 Size: 20



 // Functions 
 public:
	void OnColorClickButton(int32_t InIndex); // Function KartDrift.LiveryColorRowEntryObject.OnColorClickButton
}; 
 
 


//Class KartDrift.LiveryColorSubEntryObject Size 128
// Inherited 40 bytes 
class ULiveryColorSubEntryObject : public UObject
{

 public: 
	enum class ELiveryCategoryType ColorCategory;  // Offset: 40 Size: 1
	char pad_41[3];  // Offset: 41 Size: 3
	int32_t ColumnIndex;  // Offset: 44 Size: 4
	int32_t SubIndex;  // Offset: 48 Size: 4
	struct FLinearColor SubColor;  // Offset: 52 Size: 16
	char pad_68[4];  // Offset: 68 Size: 4
	struct FText SubColorLabel;  // Offset: 72 Size: 24
	struct FString SubIntensityLabel;  // Offset: 96 Size: 16
	enum class ELiveryMaterialType SubMaterialType;  // Offset: 112 Size: 1
	char pad_113[3];  // Offset: 113 Size: 3
	struct TWeakObjectPtr<UListView> OwnerListView;  // Offset: 116 Size: 8
	char pad_124[4];  // Offset: 124 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetMyStickerBookmarkList Size 56
// Inherited 56 bytes 
class ULqGetMyStickerBookmarkList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryReportViewerEntryObject Size 192
// Inherited 40 bytes 
class ULiveryReportViewerEntryObject : public UObject
{

 public: 
	enum class ELiveryReportList ReportListType;  // Offset: 40 Size: 1
	char pad_41[3];  // Offset: 41 Size: 3
	int32_t ItemIndex;  // Offset: 44 Size: 4
	struct FString liveryId;  // Offset: 48 Size: 16
	struct FString LiveryUnique;  // Offset: 64 Size: 16
	struct FLiveryDesignDesc LiveryDesign;  // Offset: 80 Size: 64
	struct TArray<struct FString> SVGFilePathList;  // Offset: 144 Size: 16
	struct TArray<struct FLiveryWrappingTransform> TransformList;  // Offset: 160 Size: 16
	char pad_176[16];  // Offset: 176 Size: 16



 // Functions 
 public:
	void OnViewerItemClickButton(int32_t InIndex); // Function KartDrift.LiveryReportViewerEntryObject.OnViewerItemClickButton
}; 
 
 


//Class KartDrift.OutGameFirstPlayerCheckRule Size 72
// Inherited 72 bytes 
class UOutGameFirstPlayerCheckRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MainMenuKartPawnCamera Size 2656
// Inherited 2176 bytes 
class AMainMenuKartPawnCamera : public ACineCameraActor
{

 public: 
	enum class EPawnCameraType CameraType;  // Offset: 2176 Size: 1
	char pad_2177[3];  // Offset: 2177 Size: 3
	struct FCameraBlendInfo CameraBlendInfo;  // Offset: 2180 Size: 16
	char pad_2196[4];  // Offset: 2196 Size: 4
	struct FSquenceInfo SequenceInfo;  // Offset: 2200 Size: 80
	struct TMap<enum class EOutGamePawnType, struct FTargetRotatorAnimInfo> TargetRotationAnimInfo;  // Offset: 2280 Size: 80
	struct TMap<enum class EOutGamePawnType, struct FTargetVectorAnimInfo> TargetLocationAnimInfo;  // Offset: 2360 Size: 80
	struct TMap<enum class EOutGamePawnType, struct FTargetVectorAnimInfo> TargetScaleAnimInfo;  // Offset: 2440 Size: 80
	struct TWeakObjectPtr<ULevelSequencePlayer> LevelSequencePlayer;  // Offset: 2520 Size: 8
	char pad_2528[16];  // Offset: 2528 Size: 16
	struct TSet<struct UObject*> PreCacheAssetContainer;  // Offset: 2544 Size: 80
	char pad_2624[32];  // Offset: 2624 Size: 32



 // Functions 
 public:
	void OnFinishedPlayingSequence(); // Function KartDrift.MainMenuKartPawnCamera.OnFinishedPlayingSequence
}; 
 
 


//Class KartDrift.RotatableCameraActor Size 2880
// Inherited 2656 bytes 
class ARotatableCameraActor : public AMainMenuKartPawnCamera
{

 public: 
	char pad_2656[16];  // Offset: 2656 Size: 16
	struct FRoatableCameraViewTransition CameraBoomViewTransition;  // Offset: 2672 Size: 68
	float PitchMin;  // Offset: 2740 Size: 4
	float PitchMax;  // Offset: 2744 Size: 4
	float PitchScale;  // Offset: 2748 Size: 4
	float YawMin;  // Offset: 2752 Size: 4
	float YawMax;  // Offset: 2756 Size: 4
	float YawScale;  // Offset: 2760 Size: 4
	float RollMin;  // Offset: 2764 Size: 4
	float RollMax;  // Offset: 2768 Size: 4
	float RollScale;  // Offset: 2772 Size: 4
	float BaseTurnRate;  // Offset: 2776 Size: 4
	float BaseLookUpRate;  // Offset: 2780 Size: 4
	float ZoomMin;  // Offset: 2784 Size: 4
	float ZoomMax;  // Offset: 2788 Size: 4
	float ZoomScale;  // Offset: 2792 Size: 4
	float ZoomRate;  // Offset: 2796 Size: 4
	float MobilePinchScale;  // Offset: 2800 Size: 4
	char pad_2804_1 : 7;  // Offset: 2804 Size: 1
	bool bUsePinchInverse : 1;  // Offset: 2804 Size: 1
	char pad_2805[3];  // Offset: 2805 Size: 3
	float TargetArmOriginalLength;  // Offset: 2808 Size: 4
	struct FVector OriginalCameraBoomLocation;  // Offset: 2812 Size: 12
	struct FRotator CameraOriginalRotation;  // Offset: 2824 Size: 12
	char pad_2836[4];  // Offset: 2836 Size: 4
	struct USpringArmComponent* CameraBoom;  // Offset: 2840 Size: 8
	struct FVector BeforeTouchLocation;  // Offset: 2848 Size: 12
	float TouchSensitivityX;  // Offset: 2860 Size: 4
	float TouchSensitivityY;  // Offset: 2864 Size: 4
	float BeforePinchValue;  // Offset: 2868 Size: 4
	char pad_2872_1 : 7;  // Offset: 2872 Size: 1
	bool bTouchMove : 1;  // Offset: 2872 Size: 1
	char pad_2873_1 : 7;  // Offset: 2873 Size: 1
	bool bPauseCameraInput : 1;  // Offset: 2873 Size: 1
	char pad_2874[6];  // Offset: 2874 Size: 6



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryEditLogicComponent Size 1128
// Inherited 1128 bytes 
class ULiveryEditLogicComponent : public ULiveryLogicComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryStickerLogicComponent Size 1128
// Inherited 1128 bytes 
class ULiveryStickerLogicComponent : public ULiveryLogicComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackOnlineMap Size 136
// Inherited 40 bytes 
class UTimeAttackOnlineMap : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct TMap<struct FString, struct FKtTimeAttack> Map;  // Offset: 48 Size: 80
	struct FDateTime StartTime;  // Offset: 128 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryReportViewerLogicComponent Size 592
// Inherited 224 bytes 
class ULiveryReportViewerLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[16];  // Offset: 224 Size: 16
	struct FKtItemPreset CurrentPreset;  // Offset: 240 Size: 160
	struct FRotator PawnOriginalRotator;  // Offset: 400 Size: 12
	struct FVector PawnOriginalLoc;  // Offset: 412 Size: 12
	struct FVector PawnOrginalScale;  // Offset: 424 Size: 12
	struct FInputLimitValue InputLimit;  // Offset: 436 Size: 16
	char pad_452[140];  // Offset: 452 Size: 140



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_LootBoxPageWidget Size 880
// Inherited 880 bytes 
class UM_LootBoxPageWidget : public ULootBoxPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WqRegister Size 72
// Inherited 56 bytes 
class UWqRegister : public UPqPacket
{

 public: 
	struct FString Queue;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WcWork Size 80
// Inherited 48 bytes 
class UWcWork : public UPcPacket
{

 public: 
	struct FString ID;  // Offset: 48 Size: 16
	struct FString requestString;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WqHttpTextReply Size 88
// Inherited 48 bytes 
class UWqHttpTextReply : public UKxObject
{

 public: 
	int32_t statusCode;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4
	struct FString ContentType;  // Offset: 56 Size: 16
	struct FString Body;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddBoostGauge Size 112
// Inherited 72 bytes 
class UAddBoostGauge : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> BoostGaugeWidget;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerStockCache Size 416
// Inherited 40 bytes 
class UStickerStockCache : public UObject
{

 public: 
	struct TMap<int64_t, struct FStickerStockCacheItem> Items;  // Offset: 40 Size: 80
	char pad_120[280];  // Offset: 120 Size: 280
	struct UAccountLiveryMarket* AccountLiveryMarket;  // Offset: 400 Size: 8
	char pad_408[8];  // Offset: 408 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayReadyLogicComponent Size 232
// Inherited 224 bytes 
class UReplayReadyLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[8];  // Offset: 224 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultTeamPointWidget Size 752
// Inherited 608 bytes 
class UMajorResultTeamPointWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* V_GameModeSwitcher;  // Offset: 608 Size: 8
	struct UWidgetSwitcher* V_PointWinnerSwitcher;  // Offset: 616 Size: 8
	struct UWidgetSwitcher* V_TeamWinnerSwitcher;  // Offset: 624 Size: 8
	struct UKdTextBlock* V_PointWinnerRank;  // Offset: 632 Size: 8
	struct UKdTextBlock* V_PointWinnerName;  // Offset: 640 Size: 8
	struct UKdTextBlock* V_PointWinnerScore;  // Offset: 648 Size: 8
	struct UImage* V_PointWinnerUnderbar;  // Offset: 656 Size: 8
	struct UKdTextBlock* V_PointNormalRank;  // Offset: 664 Size: 8
	struct UKdTextBlock* V_PointNormalName;  // Offset: 672 Size: 8
	struct UKdTextBlock* V_PointNormalScore;  // Offset: 680 Size: 8
	struct UKdTextBlock* V_TeamWinnerRank;  // Offset: 688 Size: 8
	struct UKdTextBlock* V_TeamWinnerName;  // Offset: 696 Size: 8
	struct UImage* V_TeamWinnerUnderbar;  // Offset: 704 Size: 8
	struct UKdTextBlock* V_TeamNormalRank;  // Offset: 712 Size: 8
	struct UKdTextBlock* V_TeamNormalName;  // Offset: 720 Size: 8
	struct UKdTextBlock* V_SoloMatch;  // Offset: 728 Size: 8
	struct UKdTextBlock* V_SoloRank;  // Offset: 736 Size: 8
	struct UImage* V_SoloUnderbar;  // Offset: 744 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LiveryMarketTagCache Size 432
// Inherited 40 bytes 
class ULiveryMarketTagCache : public UObject
{

 public: 
	char pad_40[360];  // Offset: 40 Size: 360
	struct UAccountLiveryMarket* AccountLiveryMarket;  // Offset: 400 Size: 8
	char pad_408[24];  // Offset: 408 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoadingTimeComponent Size 200
// Inherited 176 bytes 
class ULoadingTimeComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24



 // Functions 
 public:
	void ServerSetLoadingSecond(float Value); // Function KartDrift.LoadingTimeComponent.ServerSetLoadingSecond
	void OnVerifyingCompleted(); // Function KartDrift.LoadingTimeComponent.OnVerifyingCompleted
}; 
 
 


//Class KartDrift.NextTipButton Size 1000
// Inherited 1000 bytes 
class UNextTipButton : public UButtonTemplate
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoginEventItemDefEntryObject Size 88
// Inherited 40 bytes 
class ULoginEventItemDefEntryObject : public UObject
{

 public: 
	struct FString rewardStockId;  // Offset: 40 Size: 16
	struct FKtStockItem RewardStockItem;  // Offset: 56 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitalRewardEntryObject Size 200
// Inherited 40 bytes 
class UInitalRewardEntryObject : public UObject
{

 public: 
	struct FKtClientItemDef ItemDef;  // Offset: 40 Size: 144
	char pad_184[16];  // Offset: 184 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RewardNoticeDataObject Size 56
// Inherited 40 bytes 
class URewardNoticeDataObject : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PauseReplayWhileVerifying Size 72
// Inherited 72 bytes 
class UPauseReplayWhileVerifying : public URuleObject
{

 public: 



 // Functions 
 public:
	void OnVerifyingCompleted(); // Function KartDrift.PauseReplayWhileVerifying.OnVerifyingCompleted
}; 
 
 


//Class KartDrift.LocalDevParam Size 40
// Inherited 40 bytes 
class ULocalDevParam : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LockReaction Size 688
// Inherited 528 bytes 
class ULockReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UAnimMontage> LockMontage;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<USkeletalMesh> LockMesh;  // Offset: 576 Size: 40
	struct TSoftObjectPtr<UFMODEvent> AffectSound;  // Offset: 616 Size: 40
	struct UItemComponent* Victim;  // Offset: 656 Size: 8
	struct USkeletalMeshComponent* MeshSkeletalComponent;  // Offset: 664 Size: 8
	char pad_672[16];  // Offset: 672 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LoginLevelScriptActor Size 552
// Inherited 552 bytes 
class ALoginLevelScriptActor : public ALevelScriptActor
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayMissionComponent Size 376
// Inherited 176 bytes 
class UPlayMissionComponent : public UActorComponent
{

 public: 
	char pad_176[48];  // Offset: 176 Size: 48
	struct FKtPlayMissionDef Mission;  // Offset: 224 Size: 64
	struct FKtPlayMissionRewardDef reward;  // Offset: 288 Size: 32
	char pad_320_1 : 7;  // Offset: 320 Size: 1
	bool bHasReceivedMissionData : 1;  // Offset: 320 Size: 1
	char pad_321[55];  // Offset: 321 Size: 55



 // Functions 
 public:
	void ServerSetPlayMissionDefAndRewardForCheat(struct FKtPlayMissionDef InMissionDef, struct FKtPlayMissionRewardDef InReward); // Function KartDrift.PlayMissionComponent.ServerSetPlayMissionDefAndRewardForCheat
	void Server_UnregisterEventDelegate(); // Function KartDrift.PlayMissionComponent.Server_UnregisterEventDelegate
	void Server_RequestPlayMissionProgressUpdate(int32_t InMissionProgress); // Function KartDrift.PlayMissionComponent.Server_RequestPlayMissionProgressUpdate
	void Client_UnreigsterEventDelegate(); // Function KartDrift.PlayMissionComponent.Client_UnreigsterEventDelegate
	void Client_BroadcastPlayMissionStateUpdate(enum class EPlayMissionState NextMissionState); // Function KartDrift.PlayMissionComponent.Client_BroadcastPlayMissionStateUpdate
	void Client_BroadcastPlayMissionProgressUpdate(int32_t InMissionProgress); // Function KartDrift.PlayMissionComponent.Client_BroadcastPlayMissionProgressUpdate
	void CheckMissionStateOnRetireCountDownEnd(); // Function KartDrift.PlayMissionComponent.CheckMissionStateOnRetireCountDownEnd
	void CheckMissionStateOnNotifyFinish(struct APawn* Pawn); // Function KartDrift.PlayMissionComponent.CheckMissionStateOnNotifyFinish
}; 
 
 


//Class KartDrift.LoginModeBase Size 704
// Inherited 704 bytes 
class ALoginModeBase : public AGameModeBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthDev Size 136
// Inherited 96 bytes 
class UPqAuthDev : public UPqAuth
{

 public: 
	struct FString userName;  // Offset: 96 Size: 16
	struct FString Token;  // Offset: 112 Size: 16
	char pad_128_1 : 7;  // Offset: 128 Size: 1
	bool bUseAccountLink : 1;  // Offset: 128 Size: 1
	char pad_129[7];  // Offset: 129 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PauseComponent Size 272
// Inherited 176 bytes 
class UPauseComponent : public UActorComponent
{

 public: 
	char pad_176[40];  // Offset: 176 Size: 40
	struct UDialogTemplate* PauseMenuWidget;  // Offset: 216 Size: 8
	UObject* PauseWidgetClass;  // Offset: 224 Size: 8
	struct TSoftObjectPtr<UPauseDataAsset> PauseDataAsset;  // Offset: 232 Size: 40



 // Functions 
 public:
	void OnClickedRestartButton(int32_t InIndex); // Function KartDrift.PauseComponent.OnClickedRestartButton
	void OnClickedExitButton(int32_t InIndex); // Function KartDrift.PauseComponent.OnClickedExitButton
	void OnClickedChallengeButton(int32_t InIndex); // Function KartDrift.PauseComponent.OnClickedChallengeButton
	void OnClickedBackButton(int32_t InIndex); // Function KartDrift.PauseComponent.OnClickedBackButton
}; 
 
 


//Class KartDrift.PqAuthNxA Size 120
// Inherited 96 bytes 
class UPqAuthNxA : public UPqAuth
{

 public: 
	struct FString Ticket;  // Offset: 96 Size: 16
	char pad_112_1 : 7;  // Offset: 112 Size: 1
	bool bUseAccountLink : 1;  // Offset: 112 Size: 1
	char pad_113[7];  // Offset: 113 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateScenarioPageWidgetForOutGame Size 120
// Inherited 120 bytes 
class UCreateScenarioPageWidgetForOutGame : public UCreateScenarioPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthPSN Size 136
// Inherited 96 bytes 
class UPqAuthPSN : public UPqAuth
{

 public: 
	struct FString authCode;  // Offset: 96 Size: 16
	enum class EPlatformOnlineEnv env;  // Offset: 112 Size: 1
	char pad_113_1 : 7;  // Offset: 113 Size: 1
	bool bUseAccountLink : 1;  // Offset: 113 Size: 1
	char pad_114[6];  // Offset: 114 Size: 6
	struct FString titleId;  // Offset: 120 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAuthSteam Size 120
// Inherited 96 bytes 
class UPqAuthSteam : public UPqAuth
{

 public: 
	struct FString sessionTicket;  // Offset: 96 Size: 16
	char pad_112_1 : 7;  // Offset: 112 Size: 1
	bool bUseAccountLink : 1;  // Offset: 112 Size: 1
	char pad_113[7];  // Offset: 113 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAccountLinkCheck Size 56
// Inherited 56 bytes 
class UPqAccountLinkCheck : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountLinkCheck Size 80
// Inherited 72 bytes 
class UPrAccountLinkCheck : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bExistGlobalNpsn : 1;  // Offset: 72 Size: 1
	char pad_73_1 : 7;  // Offset: 73 Size: 1
	bool bMustAccountLink : 1;  // Offset: 73 Size: 1
	char pad_74_1 : 7;  // Offset: 74 Size: 1
	bool bAccountLinkGuest : 1;  // Offset: 74 Size: 1
	char pad_75[1];  // Offset: 75 Size: 1
	int32_t withdrawExpiresSec;  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAccountLinkSelect Size 64
// Inherited 56 bytes 
class UPqAccountLinkSelect : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool bGuest : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqAccountLinkRecover Size 64
// Inherited 56 bytes 
class UPqAccountLinkRecover : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool bRecover : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAccountLinkRecover Size 80
// Inherited 72 bytes 
class UPrAccountLinkRecover : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool bSucceed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TachometerWidget Size 696
// Inherited 608 bytes 
class UTachometerWidget : public UUserWidget
{

 public: 
	struct UTextBlock* SpeedText;  // Offset: 608 Size: 8
	struct UImage* Background;  // Offset: 616 Size: 8
	struct UTextBlock* draft;  // Offset: 624 Size: 8
	struct UTextBlock* DraftScale;  // Offset: 632 Size: 8
	struct UImage* DraftUnderbar;  // Offset: 640 Size: 8
	char pad_648[8];  // Offset: 648 Size: 8
	struct UWidgetAnimation* WholeVibration;  // Offset: 656 Size: 8
	struct UWidgetAnimation* DraftCharge;  // Offset: 664 Size: 8
	struct UWidgetAnimation* DraftOn;  // Offset: 672 Size: 8
	char pad_680[16];  // Offset: 680 Size: 16



 // Functions 
 public:
	void ManagedTick(float inDeltaTime); // Function KartDrift.TachometerWidget.ManagedTick
}; 
 
 


//Class KartDrift.PqAccountLinkConfirm Size 56
// Inherited 56 bytes 
class UPqAccountLinkConfirm : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrAuthComplete Size 104
// Inherited 72 bytes 
class UPrAuthComplete : public UPrPacket
{

 public: 
	struct FString accountId;  // Offset: 72 Size: 16
	char pad_88_1 : 7;  // Offset: 88 Size: 1
	bool bNew : 1;  // Offset: 88 Size: 1
	char pad_89_1 : 7;  // Offset: 89 Size: 1
	bool bNeedSet2ndPwd : 1;  // Offset: 89 Size: 1
	char pad_90_1 : 7;  // Offset: 90 Size: 1
	bool bNeed2ndPwd : 1;  // Offset: 90 Size: 1
	char pad_91[1];  // Offset: 91 Size: 1
	int32_t pwdTryCountLeft;  // Offset: 92 Size: 4
	char pad_96_1 : 7;  // Offset: 96 Size: 1
	bool bChangeName : 1;  // Offset: 96 Size: 1
	char pad_97[7];  // Offset: 97 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ShadowQuestByPawn Size 80
// Inherited 72 bytes 
class UTransition_ShadowQuestByPawn : public UShadowQuestRule
{

 public: 
	char pad_72[8];  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LootBoxAnimInstance Size 800
// Inherited 704 bytes 
class ULootBoxAnimInstance : public UAnimInstance
{

 public: 
	enum class EKtItemGrade itemGrade;  // Offset: 696 Size: 1
	struct TArray<struct UParticleSystemComponent*> ParticleSystemComponentArray;  // Offset: 704 Size: 16
	struct TMap<enum class ELootBoxMontage, struct TSoftObjectPtr<UAnimMontage>> MontageAssetMap;  // Offset: 720 Size: 80



 // Functions 
 public:
	void SpawnItemGradeEmitterAttached(struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale); // Function KartDrift.LootBoxAnimInstance.SpawnItemGradeEmitterAttached
}; 
 
 


//Class KartDrift.LootBoxLevelSequenceActor Size 688
// Inherited 680 bytes 
class ALootBoxLevelSequenceActor : public ALevelSequenceActor
{

 public: 
	enum class ELootBoxSequenceType LootBoxSequenceType;  // Offset: 680 Size: 1
	char pad_681[7];  // Offset: 681 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRankItemWidget Size 624
// Inherited 608 bytes 
class URaceRankItemWidget : public UUserWidget
{

 public: 
	struct UImage* iconImage;  // Offset: 608 Size: 8
	char pad_616[8];  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LootBoxLogicComponent Size 624
// Inherited 224 bytes 
class ULootBoxLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[400];  // Offset: 224 Size: 400



 // Functions 
 public:
	void OnPrOpenLootBox(); // Function KartDrift.LootBoxLogicComponent.OnPrOpenLootBox
	void OnLootBoxInfoUpdated(); // Function KartDrift.LootBoxLogicComponent.OnLootBoxInfoUpdated
	void OnCompletedLoadPawn(struct AOutGamePawn* LoadedPawn); // Function KartDrift.LootBoxLogicComponent.OnCompletedLoadPawn
}; 
 
 


//Class KartDrift.OutGamePawn Size 1256
// Inherited 936 bytes 
class AOutGamePawn : public AKdPawn
{

 public: 
	enum class EOutGamePawnType PawnType;  // Offset: 936 Size: 1
	char pad_937[7];  // Offset: 937 Size: 7
	struct FString AppliedStockItemId;  // Offset: 944 Size: 16
	struct UDecalComponent* RotationEffectDecal;  // Offset: 960 Size: 8
	struct UDecalComponent* RotationEffectDecalChar;  // Offset: 968 Size: 8
	char pad_976[8];  // Offset: 976 Size: 8
	struct TArray<struct TWeakObjectPtr<USceneCaptureComponent2D>> SceneCaptureComponents;  // Offset: 984 Size: 16
	struct FVector NameTagPosition;  // Offset: 1000 Size: 12
	char pad_1012[92];  // Offset: 1012 Size: 92
	char pad_1104_1 : 7;  // Offset: 1104 Size: 1
	bool bVisibleKart : 1;  // Offset: 1104 Size: 1
	char pad_1105_1 : 7;  // Offset: 1105 Size: 1
	bool bVisibleCharacter : 1;  // Offset: 1105 Size: 1
	char pad_1106_1 : 7;  // Offset: 1106 Size: 1
	bool bVisibleItemModel : 1;  // Offset: 1106 Size: 1
	char pad_1107_1 : 7;  // Offset: 1107 Size: 1
	bool bVisibleWidgetComponent : 1;  // Offset: 1107 Size: 1
	char pad_1108_1 : 7;  // Offset: 1108 Size: 1
	bool bStandBesideOwnKart : 1;  // Offset: 1108 Size: 1
	char pad_1109_1 : 7;  // Offset: 1109 Size: 1
	bool bActiveLookat : 1;  // Offset: 1109 Size: 1
	char pad_1110[2];  // Offset: 1110 Size: 2
	struct TArray<struct FKartSequenceDelegateInfo> KartSequenceDelegateInfos;  // Offset: 1112 Size: 16
	char pad_1128[16];  // Offset: 1128 Size: 16
	struct UMaterialInstanceDynamic* RotationMaterial;  // Offset: 1144 Size: 8
	struct UMaterialInstanceDynamic* RotationMaterialChar;  // Offset: 1152 Size: 8
	char pad_1160[72];  // Offset: 1160 Size: 72
	float FadeInTime;  // Offset: 1232 Size: 4
	float FadeOutTimeNormal;  // Offset: 1236 Size: 4
	float FadeOutWaitTimeNormal;  // Offset: 1240 Size: 4
	float FadeOutTimeReset;  // Offset: 1244 Size: 4
	float FadeOutWaitTimeReset;  // Offset: 1248 Size: 4
	char pad_1252[4];  // Offset: 1252 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LootBoxProviderAnimInstance Size 800
// Inherited 704 bytes 
class ULootBoxProviderAnimInstance : public UAnimInstance
{

 public: 
	enum class EKtItemGrade itemGrade;  // Offset: 696 Size: 1
	struct TArray<struct UParticleSystemComponent*> ParticleSystemComponentArray;  // Offset: 704 Size: 16
	struct TMap<enum class ELootBoxMontage, struct TSoftObjectPtr<UAnimMontage>> MontageAssetMap;  // Offset: 720 Size: 80



 // Functions 
 public:
	void SpawnItemGradeEmitterAttached(struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale); // Function KartDrift.LootBoxProviderAnimInstance.SpawnItemGradeEmitterAttached
}; 
 
 


//Class KartDrift.LootBoxSequencePlayPoint Size 784
// Inherited 544 bytes 
class ALootBoxSequencePlayPoint : public AActor
{

 public: 
	char pad_544[240];  // Offset: 544 Size: 240



 // Functions 
 public:
	void OnSequencePlayFinished(); // Function KartDrift.LootBoxSequencePlayPoint.OnSequencePlayFinished
}; 
 
 


//Class KartDrift.ReplayControlLogicComponent Size 240
// Inherited 224 bytes 
class UReplayControlLogicComponent : public UWidgetLogicComponent
{

 public: 
	struct TArray<struct UCameraModeButtonWidget*> CameraButtonWidgetList;  // Offset: 224 Size: 16



 // Functions 
 public:
	void PinTargetButtonClicked(int32_t DummyIndex); // Function KartDrift.ReplayControlLogicComponent.PinTargetButtonClicked
}; 
 
 


//Class KartDrift.LootPlateAnimInstance Size 816
// Inherited 704 bytes 
class ULootPlateAnimInstance : public UAnimInstance
{

 public: 
	enum class EKtItemGrade itemGrade;  // Offset: 696 Size: 1
	struct TArray<struct UParticleSystemComponent*> ParticleSystemComponentArray;  // Offset: 704 Size: 16
	struct TMap<enum class ELootPlateMontage, struct TSoftObjectPtr<UAnimMontage>> MontageAssetMap;  // Offset: 720 Size: 80
	struct UMaterialParameterCollection* MaterialParameterCollection;  // Offset: 800 Size: 8
	struct UMaterialInstanceDynamic* RingMaterialInstanceDynamic;  // Offset: 808 Size: 8



 // Functions 
 public:
	void SpawnItemGradeEmitterAttached(struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale); // Function KartDrift.LootPlateAnimInstance.SpawnItemGradeEmitterAttached
	void SetRingParamName(struct FName RingLightParamName, struct FName RingBaseParamName); // Function KartDrift.LootPlateAnimInstance.SetRingParamName
}; 
 
 


//Class KartDrift.LowLatencyActor Size 624
// Inherited 544 bytes 
class ALowLatencyActor : public AActor
{

 public: 
	struct FKartRepMovement KartRepMovement;  // Offset: 544 Size: 64
	float NetCullDistanceSquared_Forward;  // Offset: 608 Size: 4
	char pad_612[12];  // Offset: 612 Size: 12



 // Functions 
 public:
	void SetKartRepMovement(struct FKartRepMovement InKartRepMovement); // Function KartDrift.LowLatencyActor.SetKartRepMovement
}; 
 
 


//Class KartDrift.AchievementEntryObject Size 48
// Inherited 40 bytes 
class UAchievementEntryObject : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchNotifyRegistered Size 56
// Inherited 48 bytes 
class UMatchNotifyRegistered : public UKxObject
{

 public: 
	int32_t estTimeSec;  // Offset: 48 Size: 4
	char pad_52[4];  // Offset: 52 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_AchievementPageWidget Size 800
// Inherited 792 bytes 
class UM_AchievementPageWidget : public UAchievementPageWidget
{

 public: 
	struct TWeakObjectPtr<UAchievementEntryObject> CurrentFocusedItemDefObject;  // Offset: 792 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SQRaceOverWidget Size 624
// Inherited 608 bytes 
class USQRaceOverWidget : public UUserWidget
{

 public: 
	struct UWidgetSwitcher* WS_ResultText;  // Offset: 608 Size: 8
	struct UTextBlock* Text_RaceMode;  // Offset: 616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_ChattingPageWidget Size 760
// Inherited 760 bytes 
class UM_ChattingPageWidget : public UChattingPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_CustomGamePageWidget Size 976
// Inherited 944 bytes 
class UM_CustomGamePageWidget : public UCustomGamePageWidget
{

 public: 
	char pad_944[32];  // Offset: 944 Size: 32



 // Functions 
 public:
	void OnClickedSelectButtonInModeChangeDialog(int32_t InIndex); // Function KartDrift.M_CustomGamePageWidget.OnClickedSelectButtonInModeChangeDialog
}; 
 
 


//Class KartDrift.M_EventPageWidget Size 1224
// Inherited 1184 bytes 
class UM_EventPageWidget : public UEventPageWidget
{

 public: 
	struct UButtonTemplate* CurrentReceiveAllButton;  // Offset: 1184 Size: 8
	char pad_1192[32];  // Offset: 1192 Size: 32



 // Functions 
 public:
	void OnClickedttendanceLastStepButton(int32_t InIndex); // Function KartDrift.M_EventPageWidget.OnClickedttendanceLastStepButton
	void OnClickedRewardListButton(int32_t InIndex); // Function KartDrift.M_EventPageWidget.OnClickedRewardListButton
	void OnClickedADTLastStepButton(int32_t InIndex); // Function KartDrift.M_EventPageWidget.OnClickedADTLastStepButton
}; 
 
 


//Class KartDrift.M_GaragePageWidget Size 1224
// Inherited 1208 bytes 
class UM_GaragePageWidget : public UGaragePageWidget
{

 public: 
	char pad_1208[16];  // Offset: 1208 Size: 16



 // Functions 
 public:
	void OnClickedShowEmotionStorage(int32_t Index); // Function KartDrift.M_GaragePageWidget.OnClickedShowEmotionStorage
	void OnClickedItem(int32_t InIndex); // Function KartDrift.M_GaragePageWidget.OnClickedItem
	void OnClickedEquipItem(int32_t InIndex); // Function KartDrift.M_GaragePageWidget.OnClickedEquipItem
}; 
 
 


//Class KartDrift.M_GrandPrixPageWidget Size 896
// Inherited 896 bytes 
class UM_GrandPrixPageWidget : public UGrandPrixPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_KartChangeDialog Size 896
// Inherited 880 bytes 
class UM_KartChangeDialog : public UKartChangeDialog
{

 public: 
	char pad_880[16];  // Offset: 880 Size: 16



 // Functions 
 public:
	void OnClickedItem(int32_t InIndex); // Function KartDrift.M_KartChangeDialog.OnClickedItem
	void OnClickedEquipItem(int32_t InIndex); // Function KartDrift.M_KartChangeDialog.OnClickedEquipItem
}; 
 
 


//Class KartDrift.M_LiveryReportViewerPageWidget Size 808
// Inherited 808 bytes 
class UM_LiveryReportViewerPageWidget : public ULiveryReportViewerPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DeactivatePauseMenu Size 72
// Inherited 72 bytes 
class UDeactivatePauseMenu : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_LoginPageWidget Size 1104
// Inherited 1040 bytes 
class UM_LoginPageWidget : public ULoginPageWidget
{

 public: 
	struct TWeakObjectPtr<UDialogTemplate> RepairDialog;  // Offset: 1040 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> NoticeDialog;  // Offset: 1048 Size: 8
	struct TWeakObjectPtr<UDialogTemplate> LoginCommonDialog;  // Offset: 1056 Size: 8
	char pad_1064[40];  // Offset: 1064 Size: 40



 // Functions 
 public:
	void ShowExitGamePopup(int32_t InIndex); // Function KartDrift.M_LoginPageWidget.ShowExitGamePopup
	void OpenPSOCompileDialog(); // Function KartDrift.M_LoginPageWidget.OpenPSOCompileDialog
	void OnPerformAutoRepair(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnPerformAutoRepair
	void OnCreateNoticeDialog(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnCreateNoticeDialog
	void OnClickedRepairDialogClose(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedRepairDialogClose
	void OnClickedRepairButton(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedRepairButton
	void OnClickedNoticeDialogClose(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedNoticeDialogClose
	void OnClickedNickNameCreationDialogClose(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedNickNameCreationDialogClose
	void OnClickedLogoutBtn(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedLogoutBtn
	void OnClickedLoginCommonDialogConfirmButton(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedLoginCommonDialogConfirmButton
	void OnClickedLoginCommonDialogCloseButton(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClickedLoginCommonDialogCloseButton
	void OnClearCacheData(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.OnClearCacheData
	void ChangeLanguage_ShowComboPanel(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.ChangeLanguage_ShowComboPanel
	void ChangeLanguage_OpenDialog(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.ChangeLanguage_OpenDialog
	void ChangeLanguage_OnClickedConfirmBtn(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.ChangeLanguage_OnClickedConfirmBtn
	void ChangeLanguage_CloseDialog(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.ChangeLanguage_CloseDialog
	void ChangeLanguage_CloseComboPanel(int32_t ButtonIndex); // Function KartDrift.M_LoginPageWidget.ChangeLanguage_CloseComboPanel
}; 
 
 


//Class KartDrift.MailListEntryObject Size 48
// Inherited 40 bytes 
class UMailListEntryObject : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_MainmenuPageWidget Size 1104
// Inherited 1064 bytes 
class UM_MainmenuPageWidget : public UMainmenuPageWidget
{

 public: 
	struct TSoftObjectPtr<UPageWidgetAsset> PageWidgetAssetMobile;  // Offset: 1064 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovieSceneKartMovementTrack Size 160
// Inherited 144 bytes 
class UMovieSceneKartMovementTrack : public UMovieSceneNameableTrack
{

 public: 
	struct TArray<struct UMovieSceneSection*> Sections;  // Offset: 144 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_ModeSelectPageWidget Size 848
// Inherited 848 bytes 
class UM_ModeSelectPageWidget : public UModeSelectPageWidget
{

 public: 



 // Functions 
 public:
	void OnClickedGrandPrixSelectButton(int32_t InIndex); // Function KartDrift.M_ModeSelectPageWidget.OnClickedGrandPrixSelectButton
}; 
 
 


//Class KartDrift.M_NormalChallengePageWidget Size 744
// Inherited 744 bytes 
class UM_NormalChallengePageWidget : public UNormalChallengePageWidget
{

 public: 



 // Functions 
 public:
	void OnGoToMissionClicked(int32_t IndexInList); // Function KartDrift.M_NormalChallengePageWidget.OnGoToMissionClicked
}; 
 
 


//Class KartDrift.M_OptionPageWidget Size 1112
// Inherited 992 bytes 
class UM_OptionPageWidget : public UOptionPageWidget
{

 public: 
	struct UDialogTemplate* DropDownPopup;  // Offset: 992 Size: 8
	struct UUserWidget* DropDownWidget;  // Offset: 1000 Size: 8
	char pad_1008[8];  // Offset: 1008 Size: 8
	struct UUserWidget* OptionHUDTypeGroupButton;  // Offset: 1016 Size: 8
	struct UDialogTemplate* HUDCustomDialogWidget;  // Offset: 1024 Size: 8
	struct UUserWidget* CustomizeMenu;  // Offset: 1032 Size: 8
	struct UWidgetSwitcher* HideOpenWidgetSwitcher;  // Offset: 1040 Size: 8
	struct UCustomizableWidget* SelectedWidget;  // Offset: 1048 Size: 8
	struct UTouchInputHUD* SelectedPreset;  // Offset: 1056 Size: 8
	struct TArray<struct UTouchInputHUD*> Presets;  // Offset: 1064 Size: 16
	struct UCustomHUDData* SelectedCustomHUDData;  // Offset: 1080 Size: 8
	struct UCustomHUDData* CustomHUDData0;  // Offset: 1088 Size: 8
	struct UCustomHUDData* CustomHUDData1;  // Offset: 1096 Size: 8
	struct UCustomHUDData* CustomHUDData2;  // Offset: 1104 Size: 8



 // Functions 
 public:
	void OnCustomMenuOpenButtonClicked(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomMenuOpenButtonClicked
	void OnCustomMenuHideButtonClicked(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomMenuHideButtonClicked
	void OnCustomizeButtonClicked(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomizeButtonClicked
	void OnCustomizableWidgetSelected(struct UUserWidget* Widget); // Function KartDrift.M_OptionPageWidget.OnCustomizableWidgetSelected
	void OnCustomizableWidgetOpacityChanged(float Value); // Function KartDrift.M_OptionPageWidget.OnCustomizableWidgetOpacityChanged
	void OnCustomizableWidgetDisableButtonUnchecked(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomizableWidgetDisableButtonUnchecked
	void OnCustomizableWidgetDisableButtonChecked(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomizableWidgetDisableButtonChecked
	void OnCustomHUDButtonUnfocused(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomHUDButtonUnfocused
	void OnCustomHUDButtonFocused(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomHUDButtonFocused
	void OnCustomerCenterButtonClicked(int32_t NotUsed); // Function KartDrift.M_OptionPageWidget.OnCustomerCenterButtonClicked
	void OnCustomDialogSaveButtonPressed(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomDialogSaveButtonPressed
	void OnCustomDialogResetButtonPressed(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomDialogResetButtonPressed
	void OnCustomDialogCloseButtonPressed(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnCustomDialogCloseButtonPressed
	void OnCustomDataUpdated(struct UUserWidget* Widget, int32_t InParam); // Function KartDrift.M_OptionPageWidget.OnCustomDataUpdated
	void OnCusomizableWidgetScaleChanged(float Value); // Function KartDrift.M_OptionPageWidget.OnCusomizableWidgetScaleChanged
	void OnClickedLogoutConfirm(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedLogoutConfirm
	void OnClickedLogoutCancel(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedLogoutCancel
	void OnClickedLogoutBtn(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedLogoutBtn
	void OnClickedGameLeaveBtn(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedGameLeaveBtn
	void OnClickedCouponBtn(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedCouponBtn
	void OnClickedCopyAccountNoBtn(int32_t InIndex); // Function KartDrift.M_OptionPageWidget.OnClickedCopyAccountNoBtn
	void CloseDropDownPopup(int32_t NotUsed); // Function KartDrift.M_OptionPageWidget.CloseDropDownPopup
}; 
 
 


//Class KartDrift.M_ShopPageWidget Size 1168
// Inherited 1160 bytes 
class UM_ShopPageWidget : public UShopPageWidget
{

 public: 
	char pad_1160[8];  // Offset: 1160 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_PremiumChallengePageWidget Size 752
// Inherited 752 bytes 
class UM_PremiumChallengePageWidget : public UPremiumChallengePageWidget
{

 public: 



 // Functions 
 public:
	void OnGoToMissionClicked(int32_t IndexInList); // Function KartDrift.M_PremiumChallengePageWidget.OnGoToMissionClicked
}; 
 
 


//Class KartDrift.M_ProfileEditPageWidget Size 840
// Inherited 832 bytes 
class UM_ProfileEditPageWidget : public UProfileEditPageWidget
{

 public: 
	struct TWeakObjectPtr<UEmblemEntryObject> CurrentFocusedEmblemObject;  // Offset: 832 Size: 8



 // Functions 
 public:
	void OnClickedSelectedEmblemButton(int32_t Index); // Function KartDrift.M_ProfileEditPageWidget.OnClickedSelectedEmblemButton
}; 
 
 


//Class KartDrift.M_RacingPassRewardListItem Size 152
// Inherited 40 bytes 
class UM_RacingPassRewardListItem : public UObject
{

 public: 
	char pad_40[112];  // Offset: 40 Size: 112



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_ScenarioPageWidget Size 1184
// Inherited 1184 bytes 
class UM_ScenarioPageWidget : public UScenarioPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_SideMenuPageWidget Size 1200
// Inherited 1200 bytes 
class UM_SideMenuPageWidget : public USideMenuPageWidget
{

 public: 



 // Functions 
 public:
	void Report_OnSubmitDialogCloseButtonClicked(int32_t Index); // Function KartDrift.M_SideMenuPageWidget.Report_OnSubmitDialogCloseButtonClicked
	void Report_OnSubcategoryCloseButtonClicked(int32_t Index); // Function KartDrift.M_SideMenuPageWidget.Report_OnSubcategoryCloseButtonClicked
	void Report_OnBlockOnSubmitUnchecked(int32_t Index); // Function KartDrift.M_SideMenuPageWidget.Report_OnBlockOnSubmitUnchecked
	void Report_OnBlockOnSubmitChecked(int32_t Index); // Function KartDrift.M_SideMenuPageWidget.Report_OnBlockOnSubmitChecked
	void BlockList_OnUnblockUser(int32_t NotUsed); // Function KartDrift.M_SideMenuPageWidget.BlockList_OnUnblockUser
}; 
 
 


//Class KartDrift.M_StickerMarketPageWidget Size 2160
// Inherited 2160 bytes 
class UM_StickerMarketPageWidget : public UStickerMarketPageWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.M_StudioPageWidget Size 792
// Inherited 768 bytes 
class UM_StudioPageWidget : public UStudioPageWidget
{

 public: 
	char pad_768[24];  // Offset: 768 Size: 24



 // Functions 
 public:
	void OnSettingsButtonClicked(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnSettingsButtonClicked
	void OnScreenShotButtonClicked(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnScreenShotButtonClicked
	void OnReleasedRotateMode(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnReleasedRotateMode
	void OnPressedAutoRightRotateMode(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnPressedAutoRightRotateMode
	void OnPressedAutoLeftRotateMode(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnPressedAutoLeftRotateMode
	void OnCloseButtonClicked(int32_t InIndex); // Function KartDrift.M_StudioPageWidget.OnCloseButtonClicked
}; 
 
 


//Class KartDrift.M_TimeAttackPageWidget Size 816
// Inherited 816 bytes 
class UM_TimeAttackPageWidget : public UTimeAttackPageWidget
{

 public: 



 // Functions 
 public:
	void OnClickedShadowButtonOn(int32_t nIndex); // Function KartDrift.M_TimeAttackPageWidget.OnClickedShadowButtonOn
	void OnClickedShadowButtonOff(int32_t nIndex); // Function KartDrift.M_TimeAttackPageWidget.OnClickedShadowButtonOff
}; 
 
 


//Class KartDrift.MagnetReaction Size 704
// Inherited 528 bytes 
class UMagnetReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UParticleSystem> AttackerParticle;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<UParticleSystem> VictimParticle;  // Offset: 576 Size: 40
	struct TSoftObjectPtr<UFMODEvent> HitSound;  // Offset: 616 Size: 40
	char pad_656[16];  // Offset: 656 Size: 16
	struct UParticleSystemComponent* UserParticle;  // Offset: 672 Size: 8
	struct UParticleSystemComponent* TargetParticle;  // Offset: 680 Size: 8
	struct UItemComponent* MagnetUser;  // Offset: 688 Size: 8
	struct UItemComponent* MagnetTarget;  // Offset: 696 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetMyStickerPenaltyState Size 56
// Inherited 56 bytes 
class ULqGetMyStickerPenaltyState : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MailLogicComponent Size 576
// Inherited 224 bytes 
class UMailLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[176];  // Offset: 224 Size: 176
	struct UDelegateBarrier* Barrier;  // Offset: 400 Size: 8
	char pad_408[168];  // Offset: 408 Size: 168



 // Functions 
 public:
	void UpdateLucci(int32_t LucciCount); // Function KartDrift.MailLogicComponent.UpdateLucci
	void UpdateKcoin(int32_t KcoinCount); // Function KartDrift.MailLogicComponent.UpdateKcoin
}; 
 
 


//Class KartDrift.ScenarioSwitchBase Size 720
// Inherited 624 bytes 
class AScenarioSwitchBase : public AScenarioBase
{

 public: 
	struct FScenarioTriggerTarget TrueContainer;  // Offset: 624 Size: 32
	struct FScenarioTriggerTarget FalseContainer;  // Offset: 656 Size: 32
	struct FScenarioTriggerTarget ExitContainer;  // Offset: 688 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcReceivedMailList Size 72
// Inherited 48 bytes 
class UPcReceivedMailList : public UPcPacket
{

 public: 
	struct TArray<struct FKtMailHeader> mails;  // Offset: 48 Size: 16
	char pad_64_1 : 7;  // Offset: 64 Size: 1
	bool continued : 1;  // Offset: 64 Size: 1
	char pad_65[7];  // Offset: 65 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MainMenuCameraManageComponent Size 304
// Inherited 176 bytes 
class UMainMenuCameraManageComponent : public UActorComponent
{

 public: 
	char pad_176[40];  // Offset: 176 Size: 40
	struct TMap<enum class EPawnCameraType, struct TWeakObjectPtr<AMainMenuKartPawnCamera>> CameraList;  // Offset: 216 Size: 80
	char pad_296[8];  // Offset: 296 Size: 8



 // Functions 
 public:
	enum class EPawnCameraType GetCurrentCameraType(); // Function KartDrift.MainMenuCameraManageComponent.GetCurrentCameraType
	struct UCameraComponent* GetCurrentCameraComponent(); // Function KartDrift.MainMenuCameraManageComponent.GetCurrentCameraComponent
	struct AMainMenuKartPawnCamera* GetCurrentCamera(); // Function KartDrift.MainMenuCameraManageComponent.GetCurrentCamera
	struct UCameraComponent* GetCameraComponent(enum class EPawnCameraType CameraTye); // Function KartDrift.MainMenuCameraManageComponent.GetCameraComponent
	struct AMainMenuKartPawnCamera* GetCamera(enum class EPawnCameraType CameraTye); // Function KartDrift.MainMenuCameraManageComponent.GetCamera
}; 
 
 


//Class KartDrift.PageWidgetAsset Size 128
// Inherited 48 bytes 
class UPageWidgetAsset : public UDataAsset
{

 public: 
	struct TMap<enum class EPageCase, struct TSoftClassPtr<UObject>> WidgetClass;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorPlayerState Size 896
// Inherited 808 bytes 
class AMajorPlayerState : public AKdPlayerState
{

 public: 
	char pad_808[88];  // Offset: 808 Size: 88



 // Functions 
 public:
	void Server_RequestTMIPlayerData(struct FString InUniqueIdentifier); // Function KartDrift.MajorPlayerState.Server_RequestTMIPlayerData
	void Client_SendTMIPlayerData(struct FTMIMajorDietData InData); // Function KartDrift.MajorPlayerState.Client_SendTMIPlayerData
}; 
 
 


//Class KartDrift.MajorPodiumMediaWall Size 648
// Inherited 544 bytes 
class AMajorPodiumMediaWall : public AActor
{

 public: 
	struct TMap<enum class EMajorPodiumSequenceType, struct TSoftClassPtr<UObject>> AssetContainer;  // Offset: 544 Size: 80
	enum class EMajorPodiumSequenceType SequenceType;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7
	struct UMajorPodiumWidget* MajorPodiumWidget;  // Offset: 632 Size: 8
	struct UWidgetComponent* WidgetComponent;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopPurchaseSteam Size 120
// Inherited 56 bytes 
class UPqShopPurchaseSteam : public UPqPacket
{

 public: 
	struct FString Category;  // Offset: 56 Size: 16
	struct FString stockId;  // Offset: 72 Size: 16
	struct FString Language;  // Offset: 88 Size: 16
	struct FString localizedStockName;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestRemoveHUD Size 72
// Inherited 72 bytes 
class UShadowQuestRemoveHUD : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultBaseTabWidget Size 632
// Inherited 608 bytes 
class UMajorResultBaseTabWidget : public UUserWidget
{

 public: 
	struct UTextBlock* Text_TeamPoint;  // Offset: 608 Size: 8
	struct UVerticalBox* VerticalBox_Players;  // Offset: 616 Size: 8
	UMajorResultPlayerWidget* ResultPlayerWidgetClass;  // Offset: 624 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultWidget Size 1008
// Inherited 816 bytes 
class UMajorResultWidget : public UDialogTemplate
{

 public: 
	struct UKdTextBlock* V_GameMode;  // Offset: 816 Size: 8
	struct UKdTextBlock* V_TeamMode;  // Offset: 824 Size: 8
	struct UKdTextBlock* V_TrackName;  // Offset: 832 Size: 8
	struct UTrackDifficultWidget* V_TrackDifficultWidget;  // Offset: 840 Size: 8
	struct UKdTextBlock* V_Perfect;  // Offset: 848 Size: 8
	struct UKdTextBlock* V_WinnerTeam;  // Offset: 856 Size: 8
	struct UKdTextBlock* V_WinnerPostFix;  // Offset: 864 Size: 8
	struct UPanelWidget* V_TeamPointContainer;  // Offset: 872 Size: 8
	struct UImage* V_Image_Buff_2;  // Offset: 880 Size: 8
	struct UImage* V_Image_Buff_3;  // Offset: 888 Size: 8
	struct UImage* V_Image_Buff_4;  // Offset: 896 Size: 8
	struct UWidgetSwitcher* V_InfoSwitcher;  // Offset: 904 Size: 8
	struct UWidgetSwitcher* V_WinnerBGSwitcher;  // Offset: 912 Size: 8
	struct UImage* V_BGDefault;  // Offset: 920 Size: 8
	struct UMajorResultBaseTabWidget* V_MajorResultBaseTabWidget;  // Offset: 928 Size: 8
	struct UMajorResultDetailTabWidget* V_MajorResultDetailTabWidget;  // Offset: 936 Size: 8
	struct UButtonTemplate* V_ExitButton;  // Offset: 944 Size: 8
	char pad_952[56];  // Offset: 952 Size: 56



 // Functions 
 public:
	void OnButtonReleased_Exit_OneParam(int32_t NotUsed); // Function KartDrift.MajorResultWidget.OnButtonReleased_Exit_OneParam
	void OnButtonReleased_Exit(); // Function KartDrift.MajorResultWidget.OnButtonReleased_Exit
	void OnButtonReleased_DetailInfo_OneParam(int32_t NotUsed); // Function KartDrift.MajorResultWidget.OnButtonReleased_DetailInfo_OneParam
	void OnButtonReleased_DetailInfo(int32_t InIndex); // Function KartDrift.MajorResultWidget.OnButtonReleased_DetailInfo
	void OnButtonReleased_BaseInfo_OneParam(int32_t NotUsed); // Function KartDrift.MajorResultWidget.OnButtonReleased_BaseInfo_OneParam
	void OnButtonReleased_BaseInfo(int32_t InIndex); // Function KartDrift.MajorResultWidget.OnButtonReleased_BaseInfo
}; 
 
 


//Class KartDrift.GrandPrixResultWidgetComponent Size 200
// Inherited 176 bytes 
class UGrandPrixResultWidgetComponent : public UActorComponent
{

 public: 
	UTierResultWidget* WidgetClass;  // Offset: 176 Size: 8
	struct UTierResultWidget* ResultWidget;  // Offset: 184 Size: 8
	char pad_192[8];  // Offset: 192 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorResultWidgetComponentTestGameMode Size 704
// Inherited 704 bytes 
class AMajorResultWidgetComponentTestGameMode : public AGameModeBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MajorSequenceComponent Size 280
// Inherited 176 bytes 
class UMajorSequenceComponent : public USequenceBaseComponent
{

 public: 
	struct TMap<enum class EMajorSequenceType, struct ALevelSequenceTrack*> SequenceTrackActorContainer;  // Offset: 176 Size: 80
	int32_t OrgViewDistanceQuality;  // Offset: 256 Size: 4
	char pad_260[4];  // Offset: 260 Size: 4
	struct ALevelSequenceActor* PlayingLevelSequenceActor;  // Offset: 264 Size: 8
	enum class EMajorSequenceType PlayingSequenceType;  // Offset: 272 Size: 1
	char pad_273[7];  // Offset: 273 Size: 7



 // Functions 
 public:
	void OnVerified(enum class EClientVerifierOrder InOrder); // Function KartDrift.MajorSequenceComponent.OnVerified
}; 
 
 


//Class KartDrift.MajorStartSequencePoint Size 576
// Inherited 576 bytes 
class AMajorStartSequencePoint : public ALevelSequenceTrack
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandMatchNow Size 72
// Inherited 72 bytes 
class UPqCommandMatchNow : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqCommandNextTrack Size 72
// Inherited 72 bytes 
class UPqCommandNextTrack : public UPqCommand
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqRegisterMatch Size 120
// Inherited 56 bytes 
class UPqRegisterMatch : public UPqPacket
{

 public: 
	struct FMatchQueueList Queue;  // Offset: 56 Size: 16
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool isExclusive : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7
	struct FString grandPrixId;  // Offset: 80 Size: 16
	int32_t aiOption;  // Offset: 96 Size: 4
	char pad_100[4];  // Offset: 100 Size: 4
	struct TArray<int32_t> trackGroups;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcRegisterMatch Size 120
// Inherited 48 bytes 
class UPcRegisterMatch : public UPcPacket
{

 public: 
	struct FString mmTicket;  // Offset: 48 Size: 16
	struct FMatchQueueList Queue;  // Offset: 64 Size: 16
	int32_t estTimeSec;  // Offset: 80 Size: 4
	int32_t aiOption;  // Offset: 84 Size: 4
	struct TArray<int32_t> trackGroups;  // Offset: 88 Size: 16
	struct FString grandPrixId;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcConnectToServer Size 240
// Inherited 48 bytes 
class UPcConnectToServer : public UPcPacket
{

 public: 
	struct FString gameId;  // Offset: 48 Size: 16
	struct FString Addr;  // Offset: 64 Size: 16
	struct FString Track;  // Offset: 80 Size: 16
	struct UObject* gameSettings;  // Offset: 96 Size: 8
	struct FString openLevelOption;  // Offset: 104 Size: 16
	struct FString packEncKey;  // Offset: 120 Size: 16
	char pad_136_1 : 7;  // Offset: 136 Size: 1
	bool bMatchGame : 1;  // Offset: 136 Size: 1
	char pad_137[7];  // Offset: 137 Size: 7
	struct FString grandPrixId;  // Offset: 144 Size: 16
	struct FString vivoxChannelName;  // Offset: 160 Size: 16
	struct FString vivoxJoinToken;  // Offset: 176 Size: 16
	struct FString vivoxTranscriptionToken;  // Offset: 192 Size: 16
	struct FString statusNotificationId;  // Offset: 208 Size: 16
	struct FString userGameLogUrl;  // Offset: 224 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcDisconnectFromServer Size 48
// Inherited 48 bytes 
class UPcDisconnectFromServer : public UPcPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqMatchPlayerStatus Size 88
// Inherited 56 bytes 
class UPqMatchPlayerStatus : public UPqPacket
{

 public: 
	struct FString ID;  // Offset: 56 Size: 16
	struct FString status;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMatchPlayerStatus Size 80
// Inherited 48 bytes 
class UPcMatchPlayerStatus : public UPcPacket
{

 public: 
	struct FString playerId;  // Offset: 48 Size: 16
	struct FString status;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchNotifyCreate Size 64
// Inherited 48 bytes 
class UMatchNotifyCreate : public UKxObject
{

 public: 
	struct TArray<struct FKtItemPreview> Previews;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MatchNotifyComplete Size 48
// Inherited 48 bytes 
class UMatchNotifyComplete : public UKxObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcMatchRematchStatus Size 128
// Inherited 48 bytes 
class UPcMatchRematchStatus : public UPcPacket
{

 public: 
	struct TMap<struct FString, bool> status;  // Offset: 48 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqSetQuickMatchData Size 96
// Inherited 56 bytes 
class UPqSetQuickMatchData : public UPqPacket
{

 public: 
	struct FKtMatchRequestData Data;  // Offset: 56 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableMovement Size 72
// Inherited 72 bytes 
class UDisableMovement : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MaterialFxComponent Size 448
// Inherited 176 bytes 
class UMaterialFxComponent : public UActorComponent
{

 public: 
	char pad_176[56];  // Offset: 176 Size: 56
	struct FMulticastInlineDelegate MaterialFxStopped;  // Offset: 232 Size: 16
	struct TMap<struct UMeshComponent*, struct FMaterialFxArray> MaterialMap;  // Offset: 248 Size: 80
	struct TArray<struct UMaterialInterface*> CachedMaterials;  // Offset: 328 Size: 16
	struct TArray<struct FMaterialFxSeqIndex> MaterialsForUpdate;  // Offset: 344 Size: 16
	char pad_360_1 : 7;  // Offset: 360 Size: 1
	bool bUseFastSetMaterial : 1;  // Offset: 360 Size: 1
	char pad_361[47];  // Offset: 361 Size: 47
	struct UCurveFloat* WeightCurve;  // Offset: 408 Size: 8
	char pad_416[8];  // Offset: 416 Size: 8
	struct UCurveFloat* CycleCurve;  // Offset: 424 Size: 8
	struct UMaterialFxDataAsset* DataAsset;  // Offset: 432 Size: 8
	char pad_440[8];  // Offset: 440 Size: 8



 // Functions 
 public:
	void StopFxImmediately(); // Function KartDrift.MaterialFxComponent.StopFxImmediately
	void StopFx(float EndFadeTime, struct UCurveFloat* FadeWeightCurve); // Function KartDrift.MaterialFxComponent.StopFx
	void PlayFX(struct FString FxTypeString, float PlayTime, float StartFadeTime, float EndFadeTime, float CycleTime, bool bLoop, bool bReverse, struct UCurveFloat* WeightCurve, struct UCurveFloat* CycleCurve); // Function KartDrift.MaterialFxComponent.PlayFX
	void PlayBlinkFx(); // Function KartDrift.MaterialFxComponent.PlayBlinkFx
}; 
 
 


//Class KartDrift.MediaPlayerTemplate Size 992
// Inherited 608 bytes 
class UMediaPlayerTemplate : public UUserWidget
{

 public: 
	char pad_608[96];  // Offset: 608 Size: 96
	float PlaySoundVolume;  // Offset: 704 Size: 4
	char pad_708[4];  // Offset: 708 Size: 4
	struct UMediaPlayer* MediaPlayer;  // Offset: 712 Size: 8
	struct UMediaTexture* MediaTexture;  // Offset: 720 Size: 8
	struct UMaterialInstanceDynamic* MediaMaterial;  // Offset: 728 Size: 8
	struct TArray<struct TSoftObjectPtr<UMediaPlaylist>> MediaPlaylistPtrs;  // Offset: 736 Size: 16
	struct TArray<struct UMediaPlaylist*> MediaPlaylists;  // Offset: 752 Size: 16
	struct TSoftObjectPtr<UTexture2D> PreviewTexture2D;  // Offset: 768 Size: 40
	struct TSoftObjectPtr<UPaperSprite> PreivewSprite;  // Offset: 808 Size: 40
	char pad_848_1 : 7;  // Offset: 848 Size: 1
	bool bShowLoadingImg : 1;  // Offset: 848 Size: 1
	char pad_849_1 : 7;  // Offset: 849 Size: 1
	bool bLoop : 1;  // Offset: 849 Size: 1
	char pad_850[6];  // Offset: 850 Size: 6
	struct UMediaSoundComponent* MediaSoundComponent;  // Offset: 856 Size: 8
	struct TArray<struct UMediaPlaylist*> OpenedMediaPlaylists;  // Offset: 864 Size: 16
	char pad_880[56];  // Offset: 880 Size: 56
	struct TArray<struct TSoftObjectPtr<UFMODEvent>> MediaBGDataPtrConatiner;  // Offset: 936 Size: 16
	struct TArray<struct UFMODEvent*> MediaBGDataContainer;  // Offset: 952 Size: 16
	struct TArray<struct UMediaPlaylist*> RequestMediaPlaylists;  // Offset: 968 Size: 16
	char pad_984[8];  // Offset: 984 Size: 8



 // Functions 
 public:
	void UpdatePreviewImageForNextTick(); // Function KartDrift.MediaPlayerTemplate.UpdatePreviewImageForNextTick
	void OnMediaOpenFailed(struct FString OpenedUrl); // Function KartDrift.MediaPlayerTemplate.OnMediaOpenFailed
	void OnMediaOpened(struct FString OpenedUrl); // Function KartDrift.MediaPlayerTemplate.OnMediaOpened
	void OnMediaClosed(); // Function KartDrift.MediaPlayerTemplate.OnMediaClosed
	void OnEndReached(); // Function KartDrift.MediaPlayerTemplate.OnEndReached
}; 
 
 


//Class KartDrift.SetItemCubeStatus Size 72
// Inherited 72 bytes 
class USetItemCubeStatus : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MediaWallTeamProfileWidget Size 696
// Inherited 608 bytes 
class UMediaWallTeamProfileWidget : public UUserWidget
{

 public: 
	struct UTextBlock* TextTeam;  // Offset: 608 Size: 8
	struct TMap<enum class ERaceTeamType, struct FText> TextLocalizeTeamContainer;  // Offset: 616 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceSaveGameBase Size 40
// Inherited 40 bytes 
class URaceSaveGameBase : public USaveGame
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RocketReaction Size 752
// Inherited 528 bytes 
class URocketReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UParticleSystem> RocketParticle;  // Offset: 536 Size: 40
	struct TSoftObjectPtr<UFMODEvent> RocketExplodeSound;  // Offset: 576 Size: 40
	struct TSoftClassPtr<UObject> Decal_Rocket;  // Offset: 616 Size: 40
	struct TSoftObjectPtr<ULevelSequence> HitLevelSequence;  // Offset: 656 Size: 40
	struct UItemComponent* Victim;  // Offset: 696 Size: 8
	struct UKdLevelSequencePlayer* SequencePlayer;  // Offset: 704 Size: 8
	struct UParticleSystemComponent* ExplodeParticleComponent;  // Offset: 712 Size: 8
	char pad_720[32];  // Offset: 720 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MissionDescLogicComponent Size 224
// Inherited 224 bytes 
class UMissionDescLogicComponent : public UWidgetLogicComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModelAttachZone Size 664
// Inherited 576 bytes 
class AModelAttachZone : public AKdTriggerBox
{

 public: 
	AAttachingModelFactory* AttachingModelFactoryClass;  // Offset: 576 Size: 8
	char pad_584[80];  // Offset: 584 Size: 80



 // Functions 
 public:
	void MulticastAttachModel(struct AKdPawn* Pawn); // Function KartDrift.ModelAttachZone.MulticastAttachModel
}; 
 
 


//Class KartDrift.ModeSelectButton Size 1624
// Inherited 1000 bytes 
class UModeSelectButton : public UButtonTemplate
{

 public: 
	struct FText ModeNameText;  // Offset: 1000 Size: 24
	struct FSlateBrush BackgroundBrush;  // Offset: 1024 Size: 136
	struct FSlateBrush HighlightBackgroundBrush;  // Offset: 1160 Size: 136
	struct FSlateBrush ModeBrush;  // Offset: 1296 Size: 136
	struct FSlateBrush HighlightModeBrush;  // Offset: 1432 Size: 136
	struct FVector2D ModeImageOffset;  // Offset: 1568 Size: 8
	struct UKdTextBlock* V_ModeName;  // Offset: 1576 Size: 8
	struct UKdTextBlock* V_HighlightModeName;  // Offset: 1584 Size: 8
	struct UImage* V_BackgroundImage;  // Offset: 1592 Size: 8
	struct UImage* V_HighlightBackgroundImage;  // Offset: 1600 Size: 8
	struct UImage* V_ModeImage;  // Offset: 1608 Size: 8
	struct UImage* V_HighlightModeImage;  // Offset: 1616 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeSelectLogicComponent Size 368
// Inherited 224 bytes 
class UModeSelectLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[144];  // Offset: 224 Size: 144



 // Functions 
 public:
	void OnUpdatePartyMember(enum class EPartyChageState ChangeState); // Function KartDrift.ModeSelectLogicComponent.OnUpdatePartyMember
	void OnUpdateMaxLicenseGroup(); // Function KartDrift.ModeSelectLogicComponent.OnUpdateMaxLicenseGroup
}; 
 
 


//Class KartDrift.ItemGuideDetailObject Size 136
// Inherited 40 bytes 
class UItemGuideDetailObject : public UObject
{

 public: 
	char pad_40[96];  // Offset: 40 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ModeSelectSaveGame Size 120
// Inherited 40 bytes 
class UModeSelectSaveGame : public USaveGame
{

 public: 
	struct TMap<uint32_t, struct FModeSelectSaveData> SaveDataMap;  // Offset: 40 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovementAssistComponent Size 560
// Inherited 176 bytes 
class UMovementAssistComponent : public UActorComponent
{

 public: 
	char pad_176[248];  // Offset: 176 Size: 248
	struct AActor* DecalActor;  // Offset: 424 Size: 8
	char pad_432[8];  // Offset: 432 Size: 8
	struct ATrackGuide* CachedTrackGuide;  // Offset: 440 Size: 8
	char pad_448[24];  // Offset: 448 Size: 24
	struct TSoftClassPtr<UObject> LandingPointActor;  // Offset: 472 Size: 40
	struct TArray<struct USplineMeshComponent*> SplineMeshComponentList;  // Offset: 512 Size: 16
	char pad_528[16];  // Offset: 528 Size: 16
	struct TArray<struct UObject*> PreloadedObjects;  // Offset: 544 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovementRecordComponent Size 576
// Inherited 176 bytes 
class UMovementRecordComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 184 Size: 8
	char pad_192[384];  // Offset: 192 Size: 384



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovementReplayComponent Size 224
// Inherited 176 bytes 
class UMovementReplayComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct URaceTimeComponent* RaceTimeComponent;  // Offset: 184 Size: 8
	char pad_192[32];  // Offset: 192 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableMovement Size 72
// Inherited 72 bytes 
class UEnableMovement : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateStartBoost Size 72
// Inherited 72 bytes 
class UActivateStartBoost : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PreLoadIntroSequenceRule Size 72
// Inherited 72 bytes 
class UPreLoadIntroSequenceRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SetKartStuck Size 72
// Inherited 72 bytes 
class USetKartStuck : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowAssistListWidget Size 88
// Inherited 72 bytes 
class UShowAssistListWidget : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RemoveAssistListWidget Size 104
// Inherited 72 bytes 
class URemoveAssistListWidget : public URuleObject
{

 public: 
	char pad_72[32];  // Offset: 72 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ActivateAIKart Size 72
// Inherited 72 bytes 
class UActivateAIKart : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DeactivateAIKart Size 72
// Inherited 72 bytes 
class UDeactivateAIKart : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StudioLogicComponent Size 912
// Inherited 224 bytes 
class UStudioLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[160];  // Offset: 224 Size: 160
	enum class EStudioTransformState TransformState;  // Offset: 384 Size: 1
	char pad_385[3];  // Offset: 385 Size: 3
	float TransformLength;  // Offset: 388 Size: 4
	struct UTexture* OrgCubeTexture;  // Offset: 392 Size: 8
	struct FInputLimitValue InputLimit;  // Offset: 400 Size: 16
	enum class EStudioMode CurrentStudioMode;  // Offset: 416 Size: 1
	char pad_417[3];  // Offset: 417 Size: 3
	struct FRotator PawnOriginalRotator;  // Offset: 420 Size: 12
	struct FVector PawnOriginalLoc;  // Offset: 432 Size: 12
	struct FVector PawnOrginalScale;  // Offset: 444 Size: 12
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> FloorMeshs;  // Offset: 456 Size: 16
	struct TArray<struct TSoftObjectPtr<UTextureCube>> BgCubes;  // Offset: 472 Size: 16
	char pad_488[424];  // Offset: 488 Size: 424



 // Functions 
 public:
}; 
 
 


//Class KartDrift.FinishAnimation Size 72
// Inherited 72 bytes 
class UFinishAnimation : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableSimulationMovementPreTick Size 72
// Inherited 72 bytes 
class UEnableSimulationMovementPreTick : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovieSceneFMODAudioSection Size 400
// Inherited 232 bytes 
class UMovieSceneFMODAudioSection : public UMovieSceneSection
{

 public: 
	struct FMovieSceneByteChannel ControlKeys;  // Offset: 232 Size: 152
	struct UFMODEvent* Sound;  // Offset: 384 Size: 8
	struct FFrameNumber StartFrameOffset;  // Offset: 392 Size: 4
	char pad_396[4];  // Offset: 396 Size: 4



 // Functions 
 public:
	void SetStartOffset(struct FFrameNumber InStartOffset); // Function KartDrift.MovieSceneFMODAudioSection.SetStartOffset
	void SetSound(struct UFMODEvent* InSound); // Function KartDrift.MovieSceneFMODAudioSection.SetSound
	struct FFrameNumber GetStartOffset(); // Function KartDrift.MovieSceneFMODAudioSection.GetStartOffset
	struct UFMODEvent* GetSound(); // Function KartDrift.MovieSceneFMODAudioSection.GetSound
}; 
 
 


//Class KartDrift.MovieSceneFMODAudioTrack Size 168
// Inherited 144 bytes 
class UMovieSceneFMODAudioTrack : public UMovieSceneNameableTrack
{

 public: 
	char pad_144[8];  // Offset: 144 Size: 8
	struct TArray<struct UMovieSceneSection*> AudioSections;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MovieSceneKartMovementSection Size 3136
// Inherited 232 bytes 
class UMovieSceneKartMovementSection : public UMovieSceneSection
{

 public: 
	char pad_232[8];  // Offset: 232 Size: 8
	struct FMovieSceneFloatChannel Translation[3];  // Offset: 240 Size: 480
	struct FMovieSceneFloatChannel Rotation[3];  // Offset: 720 Size: 480
	struct FMovieSceneBoolChannel Accel;  // Offset: 1200 Size: 144
	struct FMovieSceneBoolChannel Brake;  // Offset: 1344 Size: 144
	struct FMovieSceneBoolChannel SteerLeft;  // Offset: 1488 Size: 144
	struct FMovieSceneBoolChannel SteerRight;  // Offset: 1632 Size: 144
	struct FMovieSceneBoolChannel DriftKeyPressing;  // Offset: 1776 Size: 144
	struct FMovieSceneIntegerChannel BoostKind;  // Offset: 1920 Size: 144
	struct FMovieSceneFloatChannel BoostLeft;  // Offset: 2064 Size: 160
	struct FMovieSceneIntegerChannel DriveState;  // Offset: 2224 Size: 144
	struct FMovieSceneBoolChannel SlipStream;  // Offset: 2368 Size: 144
	struct FMovieSceneBoolChannel draft;  // Offset: 2512 Size: 144
	struct FMovieSceneFloatChannel Speed;  // Offset: 2656 Size: 160
	struct FMovieSceneFloatChannel DriftGauge;  // Offset: 2816 Size: 160
	struct FMovieSceneFloatChannel DriftProgress;  // Offset: 2976 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.MulticastHelperComponent Size 176
// Inherited 176 bytes 
class UMulticastHelperComponent : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NoAccountTimeAttackDataHelper Size 88
// Inherited 40 bytes 
class UNoAccountTimeAttackDataHelper : public UTimeAttackDataHelper
{

 public: 
	struct FRaceSaveGameLatestPtr RankerSaveGame;  // Offset: 40 Size: 8
	char pad_48[40];  // Offset: 48 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StartBoostGaugeWidget Size 672
// Inherited 608 bytes 
class UStartBoostGaugeWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UProgressBar* StartBoostGaugeBar;  // Offset: 616 Size: 8
	struct USizeBox* StartBoostGaugeSizeBox;  // Offset: 624 Size: 8
	struct USizeBox* TimingImageSizeBox;  // Offset: 632 Size: 8
	char pad_640[32];  // Offset: 640 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NormalChallengeLogicComponent Size 296
// Inherited 296 bytes 
class UNormalChallengeLogicComponent : public UChallengeLogicComponent
{

 public: 



 // Functions 
 public:
	void OnUpdatePartyState(enum class EPartyChageState ChangeState); // Function KartDrift.NormalChallengeLogicComponent.OnUpdatePartyState
	void OnUpdatePartyRequestState(); // Function KartDrift.NormalChallengeLogicComponent.OnUpdatePartyRequestState
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.NormalChallengeLogicComponent.OnSeasonUpdated
	void OnQuestSetDataUpdated(); // Function KartDrift.NormalChallengeLogicComponent.OnQuestSetDataUpdated
}; 
 
 


//Class KartDrift.NxPatcherInterface Size 192
// Inherited 64 bytes 
class UNxPatcherInterface : public UPatcherInterface
{

 public: 
	char pad_64[128];  // Offset: 64 Size: 128



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OptionBarWidget Size 1304
// Inherited 1000 bytes 
class UOptionBarWidget : public UButtonTemplate
{

 public: 
	struct UKdButtonImage* V_BtnImage_Bar;  // Offset: 1000 Size: 8
	struct UPanelWidget* V_Base_Container;  // Offset: 1008 Size: 8
	struct UPanelWidget* V_Btn_Container;  // Offset: 1016 Size: 8
	char pad_1024[96];  // Offset: 1024 Size: 96
	struct TArray<struct UButtonTemplate*> ContainerChildren;  // Offset: 1120 Size: 16
	int32_t MaxIndex;  // Offset: 1136 Size: 4
	int32_t CurrentIndex;  // Offset: 1140 Size: 4
	int32_t ConfirmIndex;  // Offset: 1144 Size: 4
	int32_t HoveredIndex;  // Offset: 1148 Size: 4
	char pad_1152_1 : 7;  // Offset: 1152 Size: 1
	bool bOptionEnable : 1;  // Offset: 1152 Size: 1
	char pad_1153[7];  // Offset: 1153 Size: 7
	struct UUserWidget* OptionSlider;  // Offset: 1160 Size: 8
	struct USlider* Slider_Item;  // Offset: 1168 Size: 8
	struct UKdButtonImage* SliderGauge;  // Offset: 1176 Size: 8
	struct UAnimationPresetWidget* FocusAnimSetSlider;  // Offset: 1184 Size: 8
	float MinValue;  // Offset: 1192 Size: 4
	float MaxValue;  // Offset: 1196 Size: 4
	float ValueStep;  // Offset: 1200 Size: 4
	float StartValue;  // Offset: 1204 Size: 4
	float EndValue;  // Offset: 1208 Size: 4
	char pad_1212_1 : 7;  // Offset: 1212 Size: 1
	bool bEnableNavigation : 1;  // Offset: 1212 Size: 1
	char pad_1213[91];  // Offset: 1213 Size: 91



 // Functions 
 public:
	void OnUnHover(int32_t InIndex); // Function KartDrift.OptionBarWidget.OnUnHover
	void OnSliderValueChanged(float InValue); // Function KartDrift.OptionBarWidget.OnSliderValueChanged
	void OnSelect(int32_t InIndex); // Function KartDrift.OptionBarWidget.OnSelect
	void OnHover(int32_t InIndex); // Function KartDrift.OptionBarWidget.OnHover
}; 
 
 


//Class KartDrift.MuteableVolume Size 192
// Inherited 40 bytes 
class UMuteableVolume : public UObject
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72
	struct TArray<struct UMuteableVolume*> Children;  // Offset: 112 Size: 16
	char pad_128[64];  // Offset: 128 Size: 64



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGameMode Size 712
// Inherited 704 bytes 
class AOutGameMode : public AGameModeBase
{

 public: 
	char pad_704[8];  // Offset: 704 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGamePhaseComponent Size 432
// Inherited 432 bytes 
class UOutGamePhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRestart Size 40
// Inherited 40 bytes 
class URaceRestart : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGamePawnLoadCheckRule Size 80
// Inherited 72 bytes 
class UOutGamePawnLoadCheckRule : public URuleObject
{

 public: 
	char pad_72[8];  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EmblemEntryObject Size 184
// Inherited 40 bytes 
class UEmblemEntryObject : public UObject
{

 public: 
	struct FKtClientItemDef EmblemItemDef;  // Offset: 40 Size: 144



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSequenceDirector Size 112
// Inherited 56 bytes 
class UScenarioSequenceDirector : public ULevelSequenceDirector
{

 public: 
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 56 Size: 8
	struct UScenarioPageWidget* ScenarioPageWidget;  // Offset: 64 Size: 8
	struct TArray<struct UScenarioWidgetBase*> ScenarioExpressionWidgetContainer;  // Offset: 72 Size: 16
	struct TArray<struct AActor*> CachePawnContainer;  // Offset: 88 Size: 16
	char pad_104[8];  // Offset: 104 Size: 8



 // Functions 
 public:
	void ShowExpressionWidget(UScenarioExpressionWidget* InExpressionClass, UScenarioExpressionWidget* InMobileExpressionClass, float InStartAtTime, int32_t InNumLoopsToPlay, enum class EUMGSequencePlayMode InPlayMode, float InPlaybackSpeed, bool InbRestoreState); // Function KartDrift.ScenarioSequenceDirector.ShowExpressionWidget
	void SetRepeatSection(int32_t InStartFrame, int32_t InDurationFrame, int32_t LoopingCount); // Function KartDrift.ScenarioSequenceDirector.SetRepeatSection
	void SetMessageHUDWidget(struct AActor* InActor, struct FScenarioMessageHUDWidgetDataGroup InDataGroup); // Function KartDrift.ScenarioSequenceDirector.SetMessageHUDWidget
	void SetLoopFrame(int32_t InDurationFrame); // Function KartDrift.ScenarioSequenceDirector.SetLoopFrame
	void PlayKartAnimationByMontage(struct AActor* InActor, struct UAnimMontage* MontageToPlay, float InPlayRate, enum class EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // Function KartDrift.ScenarioSequenceDirector.PlayKartAnimationByMontage
	void PlayCharacterAnimationByMontage(struct AActor* InActor, struct UAnimMontage* MontageToPlay, float InPlayRate, enum class EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // Function KartDrift.ScenarioSequenceDirector.PlayCharacterAnimationByMontage
	void PlayCharacterAnimation(struct AActor* InActor, enum class ECharacterAnimGraphState InAnimState, enum class ECharacterMontage InMontage); // Function KartDrift.ScenarioSequenceDirector.PlayCharacterAnimation
	void PlayBGM(struct UFMODEvent* InEvent); // Function KartDrift.ScenarioSequenceDirector.PlayBGM
	void OnStoppedSequence(); // Function KartDrift.ScenarioSequenceDirector.OnStoppedSequence
	void OnFinishedMessageHUDWidget(); // Function KartDrift.ScenarioSequenceDirector.OnFinishedMessageHUDWidget
	void OnFinishedExpressionWidgetAnimation(struct UScenarioWidgetBase* InWidget); // Function KartDrift.ScenarioSequenceDirector.OnFinishedExpressionWidgetAnimation
	void JumpToKartMontageSection(struct AActor* InActor, struct FName SectionName); // Function KartDrift.ScenarioSequenceDirector.JumpToKartMontageSection
	void JumpToCharacterMontageSection(struct AActor* InActor, struct FName SectionName); // Function KartDrift.ScenarioSequenceDirector.JumpToCharacterMontageSection
	void DisableKartSimulatePhysics(struct AActor* InActor); // Function KartDrift.ScenarioSequenceDirector.DisableKartSimulatePhysics
}; 
 
 


//Class KartDrift.OutGameScenarioSequenceDirector Size 112
// Inherited 112 bytes 
class UOutGameScenarioSequenceDirector : public UScenarioSequenceDirector
{

 public: 



 // Functions 
 public:
	void ShowBeginnerBalloonAppearAnimation(struct AActor* InActor, struct FString FxTypeString); // Function KartDrift.OutGameScenarioSequenceDirector.ShowBeginnerBalloonAppearAnimation
}; 
 
 


//Class KartDrift.PqClientTMI Size 104
// Inherited 56 bytes 
class UPqClientTMI : public UPqPacket
{

 public: 
	struct FString Type;  // Offset: 56 Size: 16
	struct FString protohash;  // Offset: 72 Size: 16
	struct FString Data;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGameState Size 624
// Inherited 624 bytes 
class AOutGameState : public AGameStateBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PacketCaptureComponent Size 320
// Inherited 176 bytes 
class UPacketCaptureComponent : public UActorComponent
{

 public: 
	int32_t StartPathIndex;  // Offset: 176 Size: 4
	int32_t StartDataIndex;  // Offset: 180 Size: 4
	char pad_184[8];  // Offset: 184 Size: 8
	struct UPacketSaveGame* PacketSaveGame;  // Offset: 192 Size: 8
	char pad_200[96];  // Offset: 200 Size: 96
	struct UPacketSaveGame* SimPacketSaveGame;  // Offset: 296 Size: 8
	char pad_304[16];  // Offset: 304 Size: 16



 // Functions 
 public:
	void StartRecord_Sim(); // Function KartDrift.PacketCaptureComponent.StartRecord_Sim
	void StartRecord_AIPathIndex(int32_t PathIndex, int32_t DataIndex, float Speed); // Function KartDrift.PacketCaptureComponent.StartRecord_AIPathIndex
	void StartRecord(); // Function KartDrift.PacketCaptureComponent.StartRecord
	void ShowSplineData(); // Function KartDrift.PacketCaptureComponent.ShowSplineData
	void PlayRecord(); // Function KartDrift.PacketCaptureComponent.PlayRecord
	void MakeSpline(int32_t RecordIndex); // Function KartDrift.PacketCaptureComponent.MakeSpline
	void EndRecord_Sim(); // Function KartDrift.PacketCaptureComponent.EndRecord_Sim
	void EndRecord_ForAI(); // Function KartDrift.PacketCaptureComponent.EndRecord_ForAI
	void EndRecord(); // Function KartDrift.PacketCaptureComponent.EndRecord
}; 
 
 


//Class KartDrift.PageButtonTemplate Size 680
// Inherited 608 bytes 
class UPageButtonTemplate : public UUserWidget
{

 public: 
	UButtonTemplate* PageButtonWidgetClass;  // Offset: 608 Size: 8
	enum class ESlateSizeRule SlateSizeRule;  // Offset: 616 Size: 1
	char pad_617_1 : 7;  // Offset: 617 Size: 1
	bool bUseNumberPanel : 1;  // Offset: 617 Size: 1
	char pad_618[6];  // Offset: 618 Size: 6
	struct UWidgetSwitcher* PanelSwitcher;  // Offset: 624 Size: 8
	struct UPanelWidget* ButtonPanel;  // Offset: 632 Size: 8
	struct UKdTextBlock* TextCurrentPageNum;  // Offset: 640 Size: 8
	struct UKdTextBlock* TextMaxPageNum;  // Offset: 648 Size: 8
	char pad_656[24];  // Offset: 656 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PageTitleWidget Size 640
// Inherited 608 bytes 
class UPageTitleWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_TitleText;  // Offset: 608 Size: 8
	struct FText Inst_PageTitleText;  // Offset: 616 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PartsMeshComponent Size 3856
// Inherited 3856 bytes 
class UPartsMeshComponent : public USkeletalMeshComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PatcherEvent Size 112
// Inherited 40 bytes 
class UPatcherEvent : public UObject
{

 public: 
	char pad_40[64];  // Offset: 40 Size: 64
	struct UPatcherInterface* PatcherInterface;  // Offset: 104 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PatcherEvent_SimpleDialog Size 144
// Inherited 112 bytes 
class UPatcherEvent_SimpleDialog : public UPatcherEvent
{

 public: 
	char pad_112[32];  // Offset: 112 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PauseDataAsset Size 64
// Inherited 48 bytes 
class UPauseDataAsset : public UDataAsset
{

 public: 
	struct TArray<struct UFMODBus*> PauseBusList;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.OutGamePawnDB Size 144
// Inherited 48 bytes 
class UOutGamePawnDB : public UDataAsset
{

 public: 
	struct TMap<enum class EOutGamePawnType, struct FName> OutGamePawnData;  // Offset: 48 Size: 80
	float ResetRotateInterval;  // Offset: 128 Size: 4
	float RotateSpeedMouse;  // Offset: 132 Size: 4
	float RotateSpeedGamepad;  // Offset: 136 Size: 4
	float RestoreRotateSpeed;  // Offset: 140 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PawnSequenceComponent Size 200
// Inherited 176 bytes 
class UPawnSequenceComponent : public UActorComponent
{

 public: 
	struct ALevelSequenceActor* SequenceActor;  // Offset: 176 Size: 8
	char pad_184[16];  // Offset: 184 Size: 16



 // Functions 
 public:
	void Server_PlaySeuqence(bool bIsPlaying); // Function KartDrift.PawnSequenceComponent.Server_PlaySeuqence
	void OnRetireCountDownEnd(); // Function KartDrift.PawnSequenceComponent.OnRetireCountDownEnd
	void Multicast_PlaySequence(bool bIsPlaying); // Function KartDrift.PawnSequenceComponent.Multicast_PlaySequence
}; 
 
 


//Class KartDrift.PawnStateMulticastHelperComponent Size 176
// Inherited 176 bytes 
class UPawnStateMulticastHelperComponent : public UMulticastHelperComponent
{

 public: 



 // Functions 
 public:
	void MulticastRelayRaceGameResult(struct UObject* RelayTarget, struct FRaceGameResult Result); // Function KartDrift.PawnStateMulticastHelperComponent.MulticastRelayRaceGameResult
	void ClientRelayRaceGameResult(struct UObject* RelayTarget, struct FRaceGameResult Result); // Function KartDrift.PawnStateMulticastHelperComponent.ClientRelayRaceGameResult
}; 
 
 


//Class KartDrift.PersonalResultComponent Size 336
// Inherited 176 bytes 
class UPersonalResultComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96
	struct UWaitHelper* WaitHelper;  // Offset: 272 Size: 8
	char pad_280[56];  // Offset: 280 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PhaseDelegate Size 40
// Inherited 40 bytes 
class UPhaseDelegate : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PhysicsAnimInterface Size 40
// Inherited 40 bytes 
class UPhysicsAnimInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlatformIconWidget Size 648
// Inherited 608 bytes 
class UPlatformIconWidget : public UUserWidget
{

 public: 
	struct UKdImage* V_PlatformImage;  // Offset: 608 Size: 8
	enum class EKtAccountPlatform platform;  // Offset: 616 Size: 1
	char pad_617[3];  // Offset: 617 Size: 3
	struct FLinearColor TintColor;  // Offset: 620 Size: 16
	struct FVector2D ImageScale;  // Offset: 636 Size: 8
	char pad_644_1 : 7;  // Offset: 644 Size: 1
	bool bHighlightImage : 1;  // Offset: 644 Size: 1
	char pad_645[3];  // Offset: 645 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlatformSessionUpdater Size 672
// Inherited 40 bytes 
class UPlatformSessionUpdater : public UObject
{

 public: 
	char pad_40[64];  // Offset: 40 Size: 64
	struct UKdService* KOInst;  // Offset: 104 Size: 8
	struct UKdAccount* Account;  // Offset: 112 Size: 8
	struct FPendingSessionInvitation PendingSessionInvitation;  // Offset: 120 Size: 344
	char pad_464[208];  // Offset: 464 Size: 208



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopWalletPageUrlNxA Size 56
// Inherited 56 bytes 
class UPqShopWalletPageUrlNxA : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlatformSubsystem Size 56
// Inherited 48 bytes 
class UPlatformSubsystem : public UGameInstanceSubsystem
{

 public: 
	char pad_48[8];  // Offset: 48 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioParseInstance Size 2528
// Inherited 40 bytes 
class UScenarioParseInstance : public UObject
{

 public: 
	char pad_40[2488];  // Offset: 40 Size: 2488



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayerWaitComponent Size 184
// Inherited 176 bytes 
class UPlayerWaitComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayerWaitListener Size 40
// Inherited 40 bytes 
class UPlayerWaitListener : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayMissionWidget Size 672
// Inherited 608 bytes 
class UPlayMissionWidget : public UUserWidget
{

 public: 
	struct UImage* V_Image_ItemIcon;  // Offset: 608 Size: 8
	struct UTextBlock* V_Text_ItemCount;  // Offset: 616 Size: 8
	struct UTextBlock* V_Text_MissionDec;  // Offset: 624 Size: 8
	struct UTextBlock* V_Text_CountAcheive;  // Offset: 632 Size: 8
	struct UTextBlock* V_Text_CountTotal;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Anim_Show;  // Offset: 648 Size: 8
	struct UWidgetAnimation* Anim_Hide;  // Offset: 656 Size: 8
	char pad_664[8];  // Offset: 664 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PodiumRiderNameTagComponent Size 1504
// Inherited 1488 bytes 
class UPodiumRiderNameTagComponent : public UWidgetComponent
{

 public: 
	char pad_1488[16];  // Offset: 1488 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PodiumRiderNameTagWidget Size 632
// Inherited 608 bytes 
class UPodiumRiderNameTagWidget : public UUserWidget
{

 public: 
	struct UTextBlock* TextRank;  // Offset: 608 Size: 8
	struct UKdTextBlock* TextPlayerID_KD;  // Offset: 616 Size: 8
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bIsRank : 1;  // Offset: 624 Size: 1
	char pad_625[3];  // Offset: 625 Size: 3
	int32_t RankIndex;  // Offset: 628 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WeeklyQuestListEntryObject Size 48
// Inherited 40 bytes 
class UWeeklyQuestListEntryObject : public UObject
{

 public: 
	int32_t WeekIdx;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PremiumChallengeLogicComponent Size 320
// Inherited 296 bytes 
class UPremiumChallengeLogicComponent : public UChallengeLogicComponent
{

 public: 
	char pad_296[24];  // Offset: 296 Size: 24



 // Functions 
 public:
	void OnUpdatePartyState(enum class EPartyChageState ChangeState); // Function KartDrift.PremiumChallengeLogicComponent.OnUpdatePartyState
	void OnUpdatePartyRequestState(); // Function KartDrift.PremiumChallengeLogicComponent.OnUpdatePartyRequestState
	void OnSeasonUpdated(enum class ESeasonUpdatedType UpdatedType); // Function KartDrift.PremiumChallengeLogicComponent.OnSeasonUpdated
	void OnQuestSetDataUpdated(); // Function KartDrift.PremiumChallengeLogicComponent.OnQuestSetDataUpdated
}; 
 
 


//Class KartDrift.PresetEntryObject Size 208
// Inherited 40 bytes 
class UPresetEntryObject : public UObject
{

 public: 
	struct FKtItemPreset itemPreset;  // Offset: 40 Size: 160
	struct TWeakObjectPtr<UMaterialInstance> Material;  // Offset: 200 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrDediQueryAccountStatus Size 104
// Inherited 72 bytes 
class UDrDediQueryAccountStatus : public UPrPacket
{

 public: 
	struct TArray<struct FString> playerIds;  // Offset: 72 Size: 16
	struct TArray<struct FString> status;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PriceWithIconWidget Size 816
// Inherited 608 bytes 
class UPriceWithIconWidget : public UUserWidget
{

 public: 
	struct UKdImage* Image_Icon;  // Offset: 608 Size: 8
	struct UKdTextBlock* TextBlock_Price;  // Offset: 616 Size: 8
	enum class EPRICE_TYPE PriceType;  // Offset: 624 Size: 1
	char pad_625[3];  // Offset: 625 Size: 3
	struct FVector2D ImageSize;  // Offset: 628 Size: 8
	char pad_636[4];  // Offset: 636 Size: 4
	struct FSlateFontInfo Font;  // Offset: 640 Size: 88
	enum class EHorizontalAlignment TextHorizontalAlignment;  // Offset: 728 Size: 1
	char pad_729[7];  // Offset: 729 Size: 7
	struct TMap<enum class EPRICE_TYPE, struct FPriceInfo> PriceInfo;  // Offset: 736 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestPlayPodiumSequence Size 72
// Inherited 72 bytes 
class UShadowQuestPlayPodiumSequence : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ProfileEditLogicComponent Size 304
// Inherited 224 bytes 
class UProfileEditLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[80];  // Offset: 224 Size: 80



 // Functions 
 public:
	void OnUpdateGetAchievementInfo(); // Function KartDrift.ProfileEditLogicComponent.OnUpdateGetAchievementInfo
	void OnUpdateEmblemItem(); // Function KartDrift.ProfileEditLogicComponent.OnUpdateEmblemItem
}; 
 
 


//Class KartDrift.ScenarioTriggerByTouchInput Size 680
// Inherited 624 bytes 
class AScenarioTriggerByTouchInput : public AScenarioBase
{

 public: 
	struct FScenarioTriggerTarget DisableTouchTriggerContainer;  // Offset: 624 Size: 32
	int32_t DisableWidget;  // Offset: 656 Size: 4
	char pad_660[4];  // Offset: 660 Size: 4
	struct UTouchInputHUD* TouchInputHUD;  // Offset: 664 Size: 8
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 672 Size: 8



 // Functions 
 public:
	void OnDisableButtonClicked(int32_t InIndex); // Function KartDrift.ScenarioTriggerByTouchInput.OnDisableButtonClicked
}; 
 
 


//Class KartDrift.TagTitleListEntry Size 80
// Inherited 40 bytes 
class UTagTitleListEntry : public UObject
{

 public: 
	int32_t ListIndex;  // Offset: 40 Size: 4
	char pad_44[4];  // Offset: 44 Size: 4
	struct FTagData Data;  // Offset: 48 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PSOCollectWidget Size 792
// Inherited 608 bytes 
class UPSOCollectWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct TSoftObjectPtr<UDataTable> SequenceLevelDataTable;  // Offset: 616 Size: 40
	struct UControlPawnEquipWidget* ControlPawnEquipWidget;  // Offset: 656 Size: 8
	struct UControlPawnFXWidget* ControlPawnFXWidget;  // Offset: 664 Size: 8
	struct UControlDirectingWidget* ControlDirectingWidget;  // Offset: 672 Size: 8
	struct UControlTrackWidget* ControlTrackWidget;  // Offset: 680 Size: 8
	struct UButton* Button_Travel;  // Offset: 688 Size: 8
	struct UButton* Button_StartCollect;  // Offset: 696 Size: 8
	struct UButton* Button_StartSequence_Tutorial;  // Offset: 704 Size: 8
	struct UButton* Button_StartSequence_License;  // Offset: 712 Size: 8
	struct UButton* Button_StartOneStep;  // Offset: 720 Size: 8
	struct UButton* Button_GotoLoginStage;  // Offset: 728 Size: 8
	struct UTextBlock* V_FocusedButtonText;  // Offset: 736 Size: 8
	struct TArray<struct TSoftObjectPtr<ULevelSequence>> SequenceList;  // Offset: 744 Size: 16
	char pad_760[24];  // Offset: 760 Size: 24
	struct USpringArmComponent* SpringArm;  // Offset: 784 Size: 8



 // Functions 
 public:
	void OnComboBoxSelectionChanged_Wheel(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Wheel
	void OnComboBoxSelectionChanged_Plate(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Plate
	void OnComboBoxSelectionChanged_Parts(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Parts
	void OnComboBoxSelectionChanged_Costume(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Costume
	void OnComboBoxSelectionChanged_Booster(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Booster
	void OnComboBoxSelectionChanged_Balloon(struct FString InSelectedItem, struct FString InSelectedItemKey); // Function KartDrift.PSOCollectWidget.OnComboBoxSelectionChanged_Balloon
	void OnButtonReleased_Travel(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_Travel
	void OnButtonReleased_StartOneStep(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_StartOneStep
	void OnButtonReleased_StartCollect_Seqence_Tutorial(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_StartCollect_Seqence_Tutorial
	void OnButtonReleased_StartCollect_Seqence_License(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_StartCollect_Seqence_License
	void OnButtonReleased_StartCollect(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_StartCollect
	void OnButtonReleased_Motion(char InMontage); // Function KartDrift.PSOCollectWidget.OnButtonReleased_Motion
	void OnButtonReleased_MajorPodiumSequence(char InSequenceType); // Function KartDrift.PSOCollectWidget.OnButtonReleased_MajorPodiumSequence
	void OnButtonReleased_MajorIntroSequence(char InSequenceType); // Function KartDrift.PSOCollectWidget.OnButtonReleased_MajorIntroSequence
	void OnButtonReleased_MajorFinishSequence(char InSequenceType); // Function KartDrift.PSOCollectWidget.OnButtonReleased_MajorFinishSequence
	void OnButtonReleased_ItemAffectBy(char InItemType); // Function KartDrift.PSOCollectWidget.OnButtonReleased_ItemAffectBy
	void OnButtonReleased_GotoLoginStage(); // Function KartDrift.PSOCollectWidget.OnButtonReleased_GotoLoginStage
	void LoadWheel(); // Function KartDrift.PSOCollectWidget.LoadWheel
	void LoadThrowAnimation(); // Function KartDrift.PSOCollectWidget.LoadThrowAnimation
	void LoadSufferAnimation(); // Function KartDrift.PSOCollectWidget.LoadSufferAnimation
	void LoadSitAnimation(); // Function KartDrift.PSOCollectWidget.LoadSitAnimation
	void LoadPlate(); // Function KartDrift.PSOCollectWidget.LoadPlate
	void LoadKart(); // Function KartDrift.PSOCollectWidget.LoadKart
	void LoadItemAffectByAnimation(); // Function KartDrift.PSOCollectWidget.LoadItemAffectByAnimation
	void LoadCharacter(); // Function KartDrift.PSOCollectWidget.LoadCharacter
	void LoadBooster(); // Function KartDrift.PSOCollectWidget.LoadBooster
	void LoadBallon(); // Function KartDrift.PSOCollectWidget.LoadBallon
}; 
 
 


//Class KartDrift.KdServerList Size 408
// Inherited 40 bytes 
class UKdServerList : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16
	struct UGameInstance* GameInstance;  // Offset: 56 Size: 8
	char pad_64[112];  // Offset: 64 Size: 112
	struct UKdServerConfig* ServerConfig;  // Offset: 176 Size: 8
	struct TArray<struct FKdServerAddrConfig> ServerAddrs;  // Offset: 184 Size: 16
	struct TArray<struct FString> Rules;  // Offset: 200 Size: 16
	char pad_216[192];  // Offset: 216 Size: 192



 // Functions 
 public:
}; 
 
 


//Class KartDrift.QuickMatchSubsystem Size 120
// Inherited 48 bytes 
class UQuickMatchSubsystem : public UAccountSubsystem
{

 public: 
	char pad_48[72];  // Offset: 48 Size: 72



 // Functions 
 public:
	void OnPartyMemberUpdated(enum class EPartyChageState NewState); // Function KartDrift.QuickMatchSubsystem.OnPartyMemberUpdated
}; 
 
 


//Class KartDrift.ScenarioSpeedControl Size 632
// Inherited 624 bytes 
class AScenarioSpeedControl : public AScenarioBase
{

 public: 
	float Speed;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ParseRaceOptions Size 160
// Inherited 72 bytes 
class UParseRaceOptions : public URuleObject
{

 public: 
	char pad_72[88];  // Offset: 72 Size: 88



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CheckOverlapItemCube Size 72
// Inherited 72 bytes 
class UCheckOverlapItemCube : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitAIManager Size 72
// Inherited 72 bytes 
class UInitAIManager : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIDisableSpeedFactor Size 72
// Inherited 72 bytes 
class UAIDisableSpeedFactor : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIEnableItemScenario Size 72
// Inherited 72 bytes 
class UAIEnableItemScenario : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AIEnableDriftRule Size 72
// Inherited 72 bytes 
class UAIEnableDriftRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowHUD Size 72
// Inherited 72 bytes 
class UShowHUD : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StopBGM Size 72
// Inherited 72 bytes 
class UStopBGM : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_StandByGame Size 80
// Inherited 80 bytes 
class UTransition_StandByGame : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetStickerStockList Size 112
// Inherited 56 bytes 
class ULqGetStickerStockList : public UPqPacket
{

 public: 
	struct FString sortCategory;  // Offset: 56 Size: 16
	struct FString Filter;  // Offset: 72 Size: 16
	int32_t Count;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4
	struct FString Cursor;  // Offset: 96 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_IntroSequence Size 80
// Inherited 80 bytes 
class UTransition_IntroSequence : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_LoadedStreamingLevel Size 80
// Inherited 72 bytes 
class UTransition_LoadedStreamingLevel : public URuleObject
{

 public: 
	struct UClientVerifier* CachedClientVerifier;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BeginGameRule Size 72
// Inherited 72 bytes 
class UBeginGameRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitPawnName Size 72
// Inherited 72 bytes 
class UInitPawnName : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AsyncLoadItemCharacterMontage Size 72
// Inherited 72 bytes 
class UAsyncLoadItemCharacterMontage : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateHUDWidget Size 160
// Inherited 72 bytes 
class UCreateHUDWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> HudWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> MobileInputWidgetClass;  // Offset: 112 Size: 40
	char pad_152[8];  // Offset: 152 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowVoiceChatMicOnOffButtonWidget Size 72
// Inherited 72 bytes 
class UShowVoiceChatMicOnOffButtonWidget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddSideMirrorWidget Size 112
// Inherited 72 bytes 
class UAddSideMirrorWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> SideMirrorWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackRecorderEnd Size 72
// Inherited 72 bytes 
class UTimeAttackRecorderEnd : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InactivateVivox Size 72
// Inherited 72 bytes 
class UInactivateVivox : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_StartCountDown Size 80
// Inherited 80 bytes 
class UTransition_StartCountDown : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedTeamGameState Size 1160
// Inherited 1144 bytes 
class ASpeedTeamGameState : public AKdGameState
{

 public: 
	char pad_1144[16];  // Offset: 1144 Size: 16



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.SpeedTeamGameState.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.BeginCalcRank Size 72
// Inherited 72 bytes 
class UBeginCalcRank : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableSounds Size 72
// Inherited 72 bytes 
class UDisableSounds : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.UnloadUnusedLevel Size 72
// Inherited 72 bytes 
class UUnloadUnusedLevel : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateWrongWayWidget Size 112
// Inherited 72 bytes 
class UCreateWrongWayWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> WrongWayWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DeactiveCheckWrongWay Size 72
// Inherited 72 bytes 
class UDeactiveCheckWrongWay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopItemProductList Size 88
// Inherited 72 bytes 
class UPrShopItemProductList : public UPrPacket
{

 public: 
	struct TArray<struct FKtShopStock> Products;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RegisterFinishRules Size 72
// Inherited 72 bytes 
class URegisterFinishRules : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RegisterRetireRules Size 72
// Inherited 72 bytes 
class URegisterRetireRules : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyLayoutWidget Size 736
// Inherited 608 bytes 
class UScenarioKeyLayoutWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_KeyDescriptText;  // Offset: 608 Size: 8
	struct FScenarioKeyLayoutAnimData AnimData;  // Offset: 616 Size: 36
	char pad_652[4];  // Offset: 652 Size: 4
	struct TArray<struct UScenarioKeyLayoutKeyWidget*> KeyWidgetContainer;  // Offset: 656 Size: 16
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 672 Size: 8
	char pad_680[56];  // Offset: 680 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_RetireCountdown Size 80
// Inherited 80 bytes 
class UTransition_RetireCountdown : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_Always Size 80
// Inherited 80 bytes 
class UTransition_Always : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SendRaceResult Size 96
// Inherited 72 bytes 
class USendRaceResult : public URuleObject
{

 public: 
	char pad_72[24];  // Offset: 72 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifyEndRetireCountdown Size 88
// Inherited 72 bytes 
class UNotifyEndRetireCountdown : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.NotifyFinish Size 88
// Inherited 72 bytes 
class UNotifyFinish : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopChargeUrlKrPc Size 56
// Inherited 56 bytes 
class UPqShopChargeUrlKrPc : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HideMainHud Size 88
// Inherited 72 bytes 
class UHideMainHud : public URuleObject
{

 public: 
	char pad_72[16];  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.BlockUseItem Size 72
// Inherited 72 bytes 
class UBlockUseItem : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayFinishBGM Size 72
// Inherited 72 bytes 
class UPlayFinishBGM : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayFinishSequence Size 72
// Inherited 72 bytes 
class UPlayFinishSequence : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayTeamPodiumSequence Size 72
// Inherited 72 bytes 
class UPlayTeamPodiumSequence : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayPodiumBGM Size 72
// Inherited 72 bytes 
class UPlayPodiumBGM : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShowIdWidget Size 72
// Inherited 72 bytes 
class UShowIdWidget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.HideIdWidget Size 72
// Inherited 72 bytes 
class UHideIdWidget : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateResultWidget Size 192
// Inherited 72 bytes 
class UCreateResultWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ResultWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> PlayerWidgetClass;  // Offset: 112 Size: 40
	struct TSoftClassPtr<UObject> CornerWidgetClass;  // Offset: 152 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddGrandPrixResult Size 112
// Inherited 72 bytes 
class UAddGrandPrixResult : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ResultWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_RaceResult Size 80
// Inherited 80 bytes 
class UTransition_RaceResult : public URaceGameTransition
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediLog Size 72
// Inherited 56 bytes 
class UDqDediLog : public UPqPacket
{

 public: 
	struct FString Log;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EndGameRule Size 72
// Inherited 72 bytes 
class UEndGameRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StartPollingRaceGameResult Size 72
// Inherited 72 bytes 
class UStartPollingRaceGameResult : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateLapCompletedWidget Size 112
// Inherited 72 bytes 
class UCreateLapCompletedWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> LapCompletedWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetStockTagId Size 72
// Inherited 56 bytes 
class ULqGetStockTagId : public UPqPacket
{

 public: 
	struct TArray<struct FString> tagText;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddFinishToPersonalResult Size 192
// Inherited 72 bytes 
class UAddFinishToPersonalResult : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ResultWidgetClass;  // Offset: 72 Size: 40
	struct TSoftClassPtr<UObject> PlayerWidgetClass;  // Offset: 112 Size: 40
	struct TSoftClassPtr<UObject> VoiceChatWidgetClass;  // Offset: 152 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SetStraightWinCountRule Size 72
// Inherited 72 bytes 
class USetStraightWinCountRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ResetLevelActorRule Size 72
// Inherited 72 bytes 
class UResetLevelActorRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceProfilerComponent Size 384
// Inherited 176 bytes 
class URaceProfilerComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct UPacketSaveGame* RecordGame;  // Offset: 184 Size: 8
	struct TArray<struct FSkillScoreData> SkillScoreArray;  // Offset: 192 Size: 16
	char pad_208[32];  // Offset: 208 Size: 32
	struct TMap<enum class EBoostKind, float> BoostAccumTime;  // Offset: 240 Size: 80
	char pad_320[64];  // Offset: 320 Size: 64



 // Functions 
 public:
	void StartRaceRecord(); // Function KartDrift.RaceProfilerComponent.StartRaceRecord
	void EndRaceRecord(); // Function KartDrift.RaceProfilerComponent.EndRaceRecord
}; 
 
 


//Class KartDrift.PqShopPurchaseConfirmSteam Size 72
// Inherited 56 bytes 
class UPqShopPurchaseConfirmSteam : public UPqPacket
{

 public: 
	struct FString orderId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRankMulticastHelperComponent Size 176
// Inherited 176 bytes 
class URaceRankMulticastHelperComponent : public UMulticastHelperComponent
{

 public: 



 // Functions 
 public:
	void MulticastRelayOnRetire(struct UObject* RelayTarget, struct UObject* KdPawn); // Function KartDrift.RaceRankMulticastHelperComponent.MulticastRelayOnRetire
	void MulticastRelayOnFinish(struct UObject* RelayTarget, struct UObject* KdPawn, int32_t rank, float TotalTime); // Function KartDrift.RaceRankMulticastHelperComponent.MulticastRelayOnFinish
	void ClientRelayOnRetire(struct UObject* RelayTarget, struct UObject* KdPawn); // Function KartDrift.RaceRankMulticastHelperComponent.ClientRelayOnRetire
	void ClientRelayOnFinish(struct UObject* RelayTarget, struct UObject* KdPawn, int32_t rank, float TotalTime); // Function KartDrift.RaceRankMulticastHelperComponent.ClientRelayOnFinish
}; 
 
 


//Class KartDrift.RaceResultPollerComponent Size 208
// Inherited 176 bytes 
class URaceResultPollerComponent : public UActorComponent
{

 public: 
	char pad_176[32];  // Offset: 176 Size: 32



 // Functions 
 public:
	void Stop(); // Function KartDrift.RaceResultPollerComponent.Stop
	void PollRaceResult(); // Function KartDrift.RaceResultPollerComponent.PollRaceResult
}; 
 
 


//Class KartDrift.ShadowComponent Size 192
// Inherited 176 bytes 
class UShadowComponent : public UActorComponent
{

 public: 
	struct UDelegateBarrier* ChangeMaterialWaitBarrier;  // Offset: 176 Size: 8
	char pad_184[8];  // Offset: 184 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceRetireCounterWidget Size 680
// Inherited 608 bytes 
class URaceRetireCounterWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_RetireCountText;  // Offset: 608 Size: 8
	struct UWidgetAnimation* RetireCountAnimation;  // Offset: 616 Size: 8
	int32_t CountDownBegin;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct TArray<struct FText> RetireCountTexts;  // Offset: 632 Size: 16
	struct UFMODEvent* CountDownSound;  // Offset: 648 Size: 8
	struct UFMODEvent* CountDownBGM;  // Offset: 656 Size: 8
	char pad_664[16];  // Offset: 664 Size: 16



 // Functions 
 public:
	void BeginRetireCountdown(float CountdownFinishTime); // Function KartDrift.RaceRetireCounterWidget.BeginRetireCountdown
}; 
 
 


//Class KartDrift.RaceSaveGame2 Size 448
// Inherited 40 bytes 
class URaceSaveGame2 : public URaceSaveGameBase
{

 public: 
	struct FString LevelName;  // Offset: 40 Size: 16
	struct FString ModeName;  // Offset: 56 Size: 16
	struct FDateTime DateTime;  // Offset: 72 Size: 8
	struct FPawnRecordData PawnData;  // Offset: 80 Size: 368



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceSaveGame4 Size 456
// Inherited 40 bytes 
class URaceSaveGame4 : public URaceSaveGameBase
{

 public: 
	char pad_40[416];  // Offset: 40 Size: 416



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceSaveGame5 Size 528
// Inherited 40 bytes 
class URaceSaveGame5 : public URaceSaveGameBase
{

 public: 
	char pad_40[488];  // Offset: 40 Size: 488



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TableManager Size 288
// Inherited 48 bytes 
class UTableManager : public UEngineSubsystem
{

 public: 
	struct TMap<enum class ETableType, struct UDataTable*> DataTableMap;  // Offset: 48 Size: 80
	struct TMap<enum class ETableType, bool> DataTableKtStyleFlagMap;  // Offset: 128 Size: 80
	struct TMap<enum class EUiTableType, struct UDataTable*> UiDataTableMap;  // Offset: 208 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RaceTimeMulticastHelperComponent Size 176
// Inherited 176 bytes 
class URaceTimeMulticastHelperComponent : public UMulticastHelperComponent
{

 public: 



 // Functions 
 public:
	void MulticastRelaySetAuthEndRaceTime(struct UObject* RelayTarget, float Time); // Function KartDrift.RaceTimeMulticastHelperComponent.MulticastRelaySetAuthEndRaceTime
	void MulticastRelaySetAuthBeginRaceTime(struct UObject* RelayTarget, float Time, float IntroTime); // Function KartDrift.RaceTimeMulticastHelperComponent.MulticastRelaySetAuthBeginRaceTime
	void ClientRelaySetAuthEndRaceTime(struct UObject* RelayTarget, float Time); // Function KartDrift.RaceTimeMulticastHelperComponent.ClientRelaySetAuthEndRaceTime
	void ClientRelaySetAuthBeginRaceTime(struct UObject* RelayTarget, float Time, float IntroTime); // Function KartDrift.RaceTimeMulticastHelperComponent.ClientRelaySetAuthBeginRaceTime
}; 
 
 


//Class KartDrift.ShadowQuestSetupComponent Size 224
// Inherited 176 bytes 
class UShadowQuestSetupComponent : public UActorComponent
{

 public: 
	struct UShadowPlaySetupComponent* ShadowPlayComponent;  // Offset: 176 Size: 8
	struct UShadowQuestConfigStorage* ConfigStorage;  // Offset: 184 Size: 8
	char pad_192[32];  // Offset: 192 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RacingPassRewardObject Size 48
// Inherited 40 bytes 
class URacingPassRewardObject : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PurchaseLevelObject Size 88
// Inherited 40 bytes 
class UPurchaseLevelObject : public UObject
{

 public: 
	char pad_40[48];  // Offset: 40 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RailBox Size 608
// Inherited 552 bytes 
class ARailBox : public ATriggerBox
{

 public: 
	struct USplineComponent* SplineComponent;  // Offset: 552 Size: 8
	struct TArray<struct UStaticMeshComponent*> StaticMeshComponentArray;  // Offset: 560 Size: 16
	char pad_576_1 : 7;  // Offset: 576 Size: 1
	bool BeginNode : 1;  // Offset: 576 Size: 1
	char pad_577_1 : 7;  // Offset: 577 Size: 1
	bool GenerateSpline : 1;  // Offset: 577 Size: 1
	char pad_578[2];  // Offset: 578 Size: 2
	float MinVelocity;  // Offset: 580 Size: 4
	float MaxVelocity;  // Offset: 584 Size: 4
	float AccelFactor;  // Offset: 588 Size: 4
	float ResistFactor;  // Offset: 592 Size: 4
	float GravityFactor;  // Offset: 596 Size: 4
	float TargetFov;  // Offset: 600 Size: 4
	float TargetFallbackDistance;  // Offset: 604 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReactionInterface Size 40
// Inherited 40 bytes 
class UReactionInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayCameraComponent Size 2240
// Inherited 2144 bytes 
class UReplayCameraComponent : public UCameraComponent
{

 public: 
	char pad_2144[56];  // Offset: 2144 Size: 56
	struct APawn* CameraTarget;  // Offset: 2200 Size: 8
	char pad_2208[8];  // Offset: 2208 Size: 8
	struct FCameraCalculators CameraCalculators;  // Offset: 2216 Size: 16
	char pad_2232[8];  // Offset: 2232 Size: 8



 // Functions 
 public:
	void InitializeCameraRouteList(); // Function KartDrift.ReplayCameraComponent.InitializeCameraRouteList
}; 
 
 


//Class KartDrift.ReplayControlPageWidget Size 744
// Inherited 744 bytes 
class UReplayControlPageWidget : public UKdPageWidget
{

 public: 



 // Functions 
 public:
	void OpenReplayMenu(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.OpenReplayMenu
	void OpenReplayController(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.OpenReplayController
	void OnExitReplayButtonClicked(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.OnExitReplayButtonClicked
	void OnDisplayToggleButtonUnchecked(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.OnDisplayToggleButtonUnchecked
	void OnDisplayToggleButtonChecked(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.OnDisplayToggleButtonChecked
	void OnClickedPreviousTab(int32_t InIndex); // Function KartDrift.ReplayControlPageWidget.OnClickedPreviousTab
	void OnClickedNextTab(int32_t InIndex); // Function KartDrift.ReplayControlPageWidget.OnClickedNextTab
	void CloseReplayMenu(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.CloseReplayMenu
	void CloseReplayController(int32_t DummyIndex); // Function KartDrift.ReplayControlPageWidget.CloseReplayController
}; 
 
 


//Class KartDrift.ReplayObject Size 528
// Inherited 40 bytes 
class UReplayObject : public UObject
{

 public: 
	char pad_40[488];  // Offset: 40 Size: 488



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ReplayDetailLogicComponent Size 272
// Inherited 224 bytes 
class UReplayDetailLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[8];  // Offset: 224 Size: 8
	struct TArray<struct UReplayObject*> ReplayList;  // Offset: 232 Size: 16
	char pad_248[24];  // Offset: 248 Size: 24



 // Functions 
 public:
	void OnSaveReplay(int32_t InIndex); // Function KartDrift.ReplayDetailLogicComponent.OnSaveReplay
	void OnFindReplayComplete(); // Function KartDrift.ReplayDetailLogicComponent.OnFindReplayComplete
	void OnDeleteReplay(int32_t InIndex); // Function KartDrift.ReplayDetailLogicComponent.OnDeleteReplay
}; 
 
 


//Class KartDrift.ReplayRuleRegister Size 72
// Inherited 40 bytes 
class UReplayRuleRegister : public UObject
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WarpZone Size 624
// Inherited 576 bytes 
class AWarpZone : public AKdTriggerBox
{

 public: 
	float IntermissionTime;  // Offset: 576 Size: 4
	char pad_580[4];  // Offset: 580 Size: 4
	struct AActor* DestinationActor;  // Offset: 584 Size: 8
	struct ULevelSequence* Sequence;  // Offset: 592 Size: 8
	char pad_600_1 : 7;  // Offset: 600 Size: 1
	bool bFaceForwardAfterWarp : 1;  // Offset: 600 Size: 1
	char pad_601[23];  // Offset: 601 Size: 23



 // Functions 
 public:
	void Warp(struct APawn* InPawn); // Function KartDrift.WarpZone.Warp
}; 
 
 


//Class KartDrift.StartRecordUnrealReplay Size 72
// Inherited 72 bytes 
class UStartRecordUnrealReplay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StopRecordUnrealReplay Size 72
// Inherited 72 bytes 
class UStopRecordUnrealReplay : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EndReplayAndBackToMenu Size 72
// Inherited 72 bytes 
class UEndReplayAndBackToMenu : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InitReplayPlayerController Size 72
// Inherited 72 bytes 
class UInitReplayPlayerController : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.CreateReplayControlPageWidget Size 112
// Inherited 72 bytes 
class UCreateReplayControlPageWidget : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> ReplayControlPageWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PlayReplayBGM Size 72
// Inherited 72 bytes 
class UPlayReplayBGM : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ResetComponent Size 376
// Inherited 176 bytes 
class UResetComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96
	struct UFMODEvent* ResetSound;  // Offset: 272 Size: 8
	char pad_280[96];  // Offset: 280 Size: 96



 // Functions 
 public:
	void Server_ResetByForce(); // Function KartDrift.ResetComponent.Server_ResetByForce
	void Server_Reset(); // Function KartDrift.ResetComponent.Server_Reset
	void NotifyActorBeginOverlap(struct AActor* MyActor, struct AActor* OtherActor); // Function KartDrift.ResetComponent.NotifyActorBeginOverlap
	void Multicast_Reset(struct FVector TargetPoint, struct FRotator TargetRotator); // Function KartDrift.ResetComponent.Multicast_Reset
}; 
 
 


//Class KartDrift.PqShopItemProductList Size 56
// Inherited 56 bytes 
class UPqShopItemProductList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RiderNameTagComponent Size 1552
// Inherited 1488 bytes 
class URiderNameTagComponent : public UCustomWidgetComponent
{

 public: 
	char pad_1488_1 : 7;  // Offset: 1488 Size: 1
	bool bDirtyCheck : 1;  // Offset: 1488 Size: 1
	char pad_1489[31];  // Offset: 1489 Size: 31
	struct URiderNameTagWidget* TagWidget;  // Offset: 1520 Size: 8
	char pad_1528[24];  // Offset: 1528 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RuleDelegateInterface Size 40
// Inherited 40 bytes 
class URuleDelegateInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Phase Size 80
// Inherited 40 bytes 
class UPhase : public UObject
{

 public: 
	struct FName PhaseName;  // Offset: 40 Size: 8
	struct TArray<struct URuleObject*> RuleList;  // Offset: 48 Size: 16
	struct TArray<struct URuleObject*> UpdateRuleList;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioComponent Size 536
// Inherited 176 bytes 
class UScenarioComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24
	struct TMap<struct FString, struct APlayerStart*> PlayerStartContainer;  // Offset: 200 Size: 80
	struct TMap<struct FString, struct FScenarioGroup> ScenarioActionContainer;  // Offset: 280 Size: 80
	struct FActiveScenario RegisterActiveGroup;  // Offset: 360 Size: 48
	char pad_408[112];  // Offset: 408 Size: 112
	struct TArray<struct AActor*> ScenarioSequenceActorList;  // Offset: 520 Size: 16



 // Functions 
 public:
	void PSOStopSequenceCollect(); // Function KartDrift.ScenarioComponent.PSOStopSequenceCollect
	void PSOPlaySequenceCollect(); // Function KartDrift.ScenarioComponent.PSOPlaySequenceCollect
	void OnFinished_PSOPlaySequence(); // Function KartDrift.ScenarioComponent.OnFinished_PSOPlaySequence
}; 
 
 


//Class KartDrift.ScenarioConditionWidget Size 752
// Inherited 624 bytes 
class UScenarioConditionWidget : public UScenarioWidgetBase
{

 public: 
	struct TSoftClassPtr<UObject> ConditionItemWidgetClass;  // Offset: 624 Size: 40
	struct UVerticalBox* V_VerticalBox;  // Offset: 664 Size: 8
	char pad_672[80];  // Offset: 672 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioConnectRuleComponent Size 600
// Inherited 200 bytes 
class UScenarioConnectRuleComponent : public UBaseConnectRuleComponent
{

 public: 
	struct TArray<struct APlayerStart*> StartSpotContainer;  // Offset: 200 Size: 16
	struct APawn* PlayerPawn;  // Offset: 216 Size: 8
	struct FString PlayerStartName;  // Offset: 224 Size: 16
	struct FString PlayerUniqueID;  // Offset: 240 Size: 16
	char pad_256[344];  // Offset: 256 Size: 344



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackDifficultWidget Size 672
// Inherited 608 bytes 
class UTrackDifficultWidget : public UUserWidget
{

 public: 
	struct UTrackDifficultUnitWidget* DifficultUnit_1;  // Offset: 608 Size: 8
	struct UTrackDifficultUnitWidget* DifficultUnit_2;  // Offset: 616 Size: 8
	struct UTrackDifficultUnitWidget* DifficultUnit_3;  // Offset: 624 Size: 8
	struct UTrackDifficultUnitWidget* DifficultUnit_4;  // Offset: 632 Size: 8
	struct UTrackDifficultUnitWidget* DifficultUnit_5;  // Offset: 640 Size: 8
	enum class ERaceMode ModeType;  // Offset: 648 Size: 1
	char pad_649[3];  // Offset: 649 Size: 3
	int32_t LevelGrade;  // Offset: 652 Size: 4
	char pad_656[16];  // Offset: 656 Size: 16



 // Functions 
 public:
	void SetDifficulty(enum class ERaceMode Type, int32_t grade); // Function KartDrift.TrackDifficultWidget.SetDifficulty
}; 
 
 


//Class KartDrift.ScenarioBase Size 624
// Inherited 544 bytes 
class AScenarioBase : public AActor
{

 public: 
	char pad_544[16];  // Offset: 544 Size: 16
	struct FScenarioIdentifier Identifier;  // Offset: 560 Size: 48
	enum class EScenarioActorType Type;  // Offset: 608 Size: 4
	char pad_612_1 : 7;  // Offset: 612 Size: 1
	bool bDefaultActivate : 1;  // Offset: 612 Size: 1
	int8_t InitializeOrder;  // Offset: 613 Size: 1
	enum class EScenarioActorState ScenarioActorState;  // Offset: 614 Size: 1
	char pad_615[1];  // Offset: 615 Size: 1
	struct APlayerController* Controller;  // Offset: 616 Size: 8



 // Functions 
 public:
	void SetActivation(bool InActivate, struct AActor* InOverlap); // Function KartDrift.ScenarioBase.SetActivation
}; 
 
 


//Class KartDrift.ScenarioWidget Size 688
// Inherited 624 bytes 
class AScenarioWidget : public AScenarioBase
{

 public: 
	enum class EWidgetOrder OrderType;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7
	struct TSoftClassPtr<UObject> WidgetClass;  // Offset: 632 Size: 40
	struct UUserWidget* Widget;  // Offset: 672 Size: 8
	int32_t SwitchIndex;  // Offset: 680 Size: 4
	char pad_684_1 : 7;  // Offset: 684 Size: 1
	bool bNaturallyLoopToOut : 1;  // Offset: 684 Size: 1
	char pad_685[3];  // Offset: 685 Size: 3



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSceneBase Size 624
// Inherited 624 bytes 
class AScenarioSceneBase : public AScenarioBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioStaticMesh Size 720
// Inherited 672 bytes 
class AScenarioStaticMesh : public AScenarioMesh
{

 public: 
	struct TSoftObjectPtr<UStaticMesh> Mesh;  // Offset: 672 Size: 40
	struct UStaticMeshComponent* MeshComponent;  // Offset: 712 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTeleport Size 680
// Inherited 624 bytes 
class AScenarioTeleport : public AScenarioSceneBase
{

 public: 
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bNewDriveInfo : 1;  // Offset: 624 Size: 1
	char pad_625[3];  // Offset: 625 Size: 3
	struct FVector KartWLVel;  // Offset: 628 Size: 12
	struct FVector KartWAVel;  // Offset: 640 Size: 12
	struct FVector NetWForce;  // Offset: 652 Size: 12
	struct FVector NetWTorque;  // Offset: 664 Size: 12
	float Speed;  // Offset: 676 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackGimmick_Road Size 800
// Inherited 560 bytes 
class ATrackGimmick_Road : public AStaticMeshActor
{

 public: 
	char pad_560[8];  // Offset: 560 Size: 8
	struct UCurveFloat* TimeCurve;  // Offset: 568 Size: 8
	float TimeCurveOffset;  // Offset: 576 Size: 4
	enum class EPatrolRotationType RotationType;  // Offset: 580 Size: 1
	char pad_581[3];  // Offset: 581 Size: 3
	struct UCurveVector* RotationCurve;  // Offset: 584 Size: 8
	char pad_592_1 : 7;  // Offset: 592 Size: 1
	bool bCanFlat : 1;  // Offset: 592 Size: 1
	char pad_593[7];  // Offset: 593 Size: 7
	struct UFMODEvent* BeginForwardMovementSound;  // Offset: 600 Size: 8
	struct UFMODEvent* EndForwardMovementSound;  // Offset: 608 Size: 8
	struct UFMODEvent* BeginBackwardMovementSound;  // Offset: 616 Size: 8
	struct UFMODEvent* EndBackwardMovementSound;  // Offset: 624 Size: 8
	char pad_632[160];  // Offset: 632 Size: 160
	struct USplineComponent* SplineComponent;  // Offset: 792 Size: 8



 // Functions 
 public:
	void OnComponentHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.TrackGimmick_Road.OnComponentHit
}; 
 
 


//Class KartDrift.ScenarioVisibilityWidget Size 640
// Inherited 624 bytes 
class AScenarioVisibilityWidget : public AScenarioBase
{

 public: 
	int32_t VisibleWidget;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct URaceHudWidget* Widget;  // Offset: 632 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioInitializeRule Size 72
// Inherited 72 bytes 
class UScenarioInitializeRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioVisibilityMobileWidget Size 640
// Inherited 624 bytes 
class AScenarioVisibilityMobileWidget : public AScenarioBase
{

 public: 
	int32_t VisibleWidget;  // Offset: 624 Size: 4
	int32_t HitTestInvisibleWidget;  // Offset: 628 Size: 4
	struct UTouchInputHUD* TouchInputHUD;  // Offset: 632 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioVisibilityEtcWidget Size 632
// Inherited 624 bytes 
class AScenarioVisibilityEtcWidget : public AScenarioBase
{

 public: 
	char pad_624_1 : 7;  // Offset: 624 Size: 1
	bool bKeyAccumVisible : 1;  // Offset: 624 Size: 1
	char pad_625[7];  // Offset: 625 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioStartBoostActive Size 624
// Inherited 624 bytes 
class AScenarioStartBoostActive : public AScenarioBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioForceUseDriftBoost Size 624
// Inherited 624 bytes 
class AScenarioForceUseDriftBoost : public AScenarioBase
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioBeginnerCare Size 632
// Inherited 624 bytes 
class AScenarioBeginnerCare : public AScenarioBase
{

 public: 
	int32_t BeginnerCareFlags;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPlatformEventsComponent Size 384
// Inherited 368 bytes 
class UScenarioPlatformEventsComponent : public UKdPlatformEventsComponent
{

 public: 
	char pad_368[16];  // Offset: 368 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioBGM Size 664
// Inherited 624 bytes 
class AScenarioBGM : public AScenarioBase
{

 public: 
	struct TSoftObjectPtr<UFMODEvent> PlayingBGM;  // Offset: 624 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTouchButtonAnimationQuery Size 672
// Inherited 624 bytes 
class AScenarioTouchButtonAnimationQuery : public AScenarioBase
{

 public: 
	struct FString ButtonSlotName;  // Offset: 624 Size: 16
	struct FString AnimName;  // Offset: 640 Size: 16
	int32_t NumLoopsToPlay;  // Offset: 656 Size: 4
	char pad_660[4];  // Offset: 660 Size: 4
	struct UTouchInputHUD* TouchInputHUD;  // Offset: 664 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioStaticTimeWriter Size 640
// Inherited 624 bytes 
class AScenarioStaticTimeWriter : public AScenarioBase
{

 public: 
	int32_t Slot;  // Offset: 624 Size: 4
	char pad_628[12];  // Offset: 628 Size: 12



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSwitchByKartSpeed Size 736
// Inherited 720 bytes 
class AScenarioSwitchByKartSpeed : public AScenarioSwitchBase
{

 public: 
	enum class EScenarioConditionalType Condition;  // Offset: 720 Size: 1
	char pad_721[3];  // Offset: 721 Size: 3
	float Speed;  // Offset: 724 Size: 4
	struct UKartMovementComponent* CachedKartMovementComponent;  // Offset: 728 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_WaitForUserInput Size 88
// Inherited 80 bytes 
class UTransition_WaitForUserInput : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioSwitchByWrongDrive Size 728
// Inherited 720 bytes 
class AScenarioSwitchByWrongDrive : public AScenarioSwitchBase
{

 public: 
	char pad_720[8];  // Offset: 720 Size: 8



 // Functions 
 public:
	void OnWrongWay(bool bInWrongWay); // Function KartDrift.ScenarioSwitchByWrongDrive.OnWrongWay
}; 
 
 


//Class KartDrift.ScenarioTrigger Size 720
// Inherited 624 bytes 
class AScenarioTrigger : public AScenarioSceneBase
{

 public: 
	struct UBoxComponent* BoxComponent;  // Offset: 624 Size: 8
	char pad_632_1 : 7;  // Offset: 632 Size: 1
	bool bOnce : 1;  // Offset: 632 Size: 1
	char pad_633[7];  // Offset: 633 Size: 7
	struct TMap<enum class EScenarioTriggerTargetType, struct FScenarioTriggerTarget> Container;  // Offset: 640 Size: 80



 // Functions 
 public:
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComponent, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function KartDrift.ScenarioTrigger.OnBeginOverlap
}; 
 
 


//Class KartDrift.WaterFlyReaction Size 896
// Inherited 880 bytes 
class UWaterFlyReaction : public UWaterReaction
{

 public: 
	char pad_880[16];  // Offset: 880 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackSetupComponent Size 320
// Inherited 176 bytes 
class UTimeAttackSetupComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96
	struct UShadowPlaySetupComponent* ShadowPlayComponent;  // Offset: 272 Size: 8
	struct UTimeAttackDataHelper* DataHelper;  // Offset: 280 Size: 8
	struct UTimeAttackConfigStorage* ConfigStorage;  // Offset: 288 Size: 8
	struct FRaceSaveGameLatestPtr SaveGameBeingPlayed;  // Offset: 296 Size: 8
	struct FRaceSaveGameLatestPtr SaveGameFromLastRace;  // Offset: 304 Size: 8
	char pad_312[8];  // Offset: 312 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByWidget Size 736
// Inherited 688 bytes 
class AScenarioTriggerByWidget : public AScenarioWidget
{

 public: 
	float Time;  // Offset: 688 Size: 4
	float GameDeltaTime;  // Offset: 692 Size: 4
	struct FScenarioTriggerTarget TriggerContainer;  // Offset: 696 Size: 32
	char pad_728[8];  // Offset: 728 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerBySequence Size 824
// Inherited 624 bytes 
class AScenarioTriggerBySequence : public AScenarioBase
{

 public: 
	struct FScenarioSequenceData SequenceData;  // Offset: 624 Size: 144
	struct FScenarioKartBodyPause KartBodyPause;  // Offset: 768 Size: 56



 // Functions 
 public:
	void OnFinished(); // Function KartDrift.ScenarioTriggerBySequence.OnFinished
}; 
 
 


//Class KartDrift.Transition_WaitForKartToStop Size 96
// Inherited 80 bytes 
class UTransition_WaitForKartToStop : public URaceGameTransition
{

 public: 
	struct UKartMovementComponent* KartMovementComponent;  // Offset: 80 Size: 8
	char pad_88[8];  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyStateTrigger Size 680
// Inherited 624 bytes 
class AScenarioKeyStateTrigger : public AScenarioBase
{

 public: 
	struct TArray<struct FScenarioKey> TriggeringKeys;  // Offset: 624 Size: 16
	enum class EScenarioKeyState State;  // Offset: 640 Size: 1
	char pad_641[7];  // Offset: 641 Size: 7
	struct FScenarioTriggerTarget TriggerContainer;  // Offset: 648 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByCharacterAnimation Size 704
// Inherited 624 bytes 
class AScenarioTriggerByCharacterAnimation : public AScenarioBase
{

 public: 
	struct TSoftObjectPtr<UAnimMontage> Montage;  // Offset: 624 Size: 40
	enum class ECharacterAnimGraphState AnimState;  // Offset: 664 Size: 1
	enum class ECharacterMontage MontageType;  // Offset: 665 Size: 1
	char pad_666_1 : 7;  // Offset: 666 Size: 1
	bool bCallTriggerWhenAnimationEnded : 1;  // Offset: 666 Size: 1
	char pad_667[5];  // Offset: 667 Size: 5
	struct FScenarioTriggerTarget TriggerContainer;  // Offset: 672 Size: 32



 // Functions 
 public:
	void OnAllMontageInstancesEnded(); // Function KartDrift.ScenarioTriggerByCharacterAnimation.OnAllMontageInstancesEnded
}; 
 
 


//Class KartDrift.ScenarioTriggerByResetKart Size 664
// Inherited 624 bytes 
class AScenarioTriggerByResetKart : public AScenarioBase
{

 public: 
	struct FScenarioTriggerTarget TriggerContainer;  // Offset: 624 Size: 32
	char pad_656[8];  // Offset: 656 Size: 8



 // Functions 
 public:
	void OnReset(); // Function KartDrift.ScenarioTriggerByResetKart.OnReset
}; 
 
 


//Class KartDrift.ScenarioTriggerByTimer Size 704
// Inherited 624 bytes 
class AScenarioTriggerByTimer : public AScenarioBase
{

 public: 
	float CriterionTime;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct FScenarioTriggerTarget LessThanTriggerContainer;  // Offset: 632 Size: 32
	struct FScenarioTriggerTarget MoreThanTriggerContainer;  // Offset: 664 Size: 32
	char pad_696[8];  // Offset: 696 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByStaticTime Size 704
// Inherited 624 bytes 
class AScenarioTriggerByStaticTime : public AScenarioBase
{

 public: 
	float CriterionTime;  // Offset: 624 Size: 4
	char pad_628[4];  // Offset: 628 Size: 4
	struct FScenarioTriggerTarget LessThanTriggerContainer;  // Offset: 632 Size: 32
	struct FScenarioTriggerTarget MoreThanTriggerContainer;  // Offset: 664 Size: 32
	int32_t Slot;  // Offset: 696 Size: 4
	char pad_700[4];  // Offset: 700 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTriggerByDriftAssistState Size 688
// Inherited 624 bytes 
class AScenarioTriggerByDriftAssistState : public AScenarioBase
{

 public: 
	struct FScenarioTriggerTarget EnableTriggerContainer;  // Offset: 624 Size: 32
	struct FScenarioTriggerTarget DisableTriggerContainer;  // Offset: 656 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioGlobalSettings Size 696
// Inherited 624 bytes 
class AScenarioGlobalSettings : public AScenarioBase
{

 public: 
	struct AScenarioVisibilityWidget* ScenarioVisibilityWidget;  // Offset: 624 Size: 8
	struct AScenarioVisibilityEtcWidget* ScenarioVisibilityEtcWidget;  // Offset: 632 Size: 8
	struct AScenarioBeginnerCare* ScenarioBeginnerCare;  // Offset: 640 Size: 8
	struct AScenarioSpeedControl* ScenarioSpeedControl;  // Offset: 648 Size: 8
	struct AScenarioBGM* ScenarioBGM;  // Offset: 656 Size: 8
	struct FScenarioTriggerTarget TriggerTarget;  // Offset: 664 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioExpressionSwitcherWidget Size 632
// Inherited 624 bytes 
class UScenarioExpressionSwitcherWidget : public UScenarioWidgetBase
{

 public: 
	struct UWidgetSwitcher* V_WidgetSwitcher;  // Offset: 624 Size: 8



 // Functions 
 public:
	void OnFinished(struct UScenarioWidgetBase* InWidgetBase); // Function KartDrift.ScenarioExpressionSwitcherWidget.OnFinished
}; 
 
 


//Class KartDrift.ScenarioExpressionWidget Size 720
// Inherited 624 bytes 
class UScenarioExpressionWidget : public UScenarioWidgetBase
{

 public: 
	struct UWidgetAnimation* Animation_In;  // Offset: 624 Size: 8
	struct UWidgetAnimation* Animation_Out;  // Offset: 632 Size: 8
	struct UWidgetAnimation* Animation_Loop;  // Offset: 640 Size: 8
	struct UWidgetAnimation* Animation_Finished_In;  // Offset: 648 Size: 8
	struct UUMGSequencePlayer* LoopSeuqnecePlayer;  // Offset: 656 Size: 8
	struct FDelegate OnFinishedInAnimationDelegate;  // Offset: 664 Size: 16
	struct FDelegate OnFinishedLoopAnimationDelegate;  // Offset: 680 Size: 16
	struct FDelegate OnFinishedOutAnimationDelegate;  // Offset: 696 Size: 16
	char pad_712[8];  // Offset: 712 Size: 8



 // Functions 
 public:
	void OnFinishedAnimation_Out(); // Function KartDrift.ScenarioExpressionWidget.OnFinishedAnimation_Out
	void OnFinishedAnimation_Loop(); // Function KartDrift.ScenarioExpressionWidget.OnFinishedAnimation_Loop
	void OnFinishedAnimation_In(); // Function KartDrift.ScenarioExpressionWidget.OnFinishedAnimation_In
}; 
 
 


//Class KartDrift.ScenarioGameMode Size 840
// Inherited 824 bytes 
class AScenarioGameMode : public AKdGameMode
{

 public: 
	struct FString ExtraOptions;  // Offset: 824 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioGameSession Size 1016
// Inherited 568 bytes 
class AScenarioGameSession : public AKdGameSession
{

 public: 
	char pad_568[8];  // Offset: 568 Size: 8
	struct TMap<struct FString, struct UKdGameSessionPlayer*> players;  // Offset: 576 Size: 80
	char pad_656[360];  // Offset: 656 Size: 360



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioGuideSetWidget Size 784
// Inherited 720 bytes 
class UScenarioGuideSetWidget : public UScenarioExpressionWidget
{

 public: 
	struct FText Text;  // Offset: 720 Size: 24
	float Angle;  // Offset: 744 Size: 4
	float Height;  // Offset: 748 Size: 4
	float Width;  // Offset: 752 Size: 4
	char pad_756[4];  // Offset: 756 Size: 4
	struct UKdTextBlock* V_Text;  // Offset: 760 Size: 8
	struct USizeBox* V_GuideSizeBox;  // Offset: 768 Size: 8
	struct UOverlay* V_TextOverlay;  // Offset: 776 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackGimmick_Door Size 808
// Inherited 560 bytes 
class ATrackGimmick_Door : public AStaticMeshActor
{

 public: 
	char pad_560[16];  // Offset: 560 Size: 16
	struct UCurveFloat* TimeCurve;  // Offset: 576 Size: 8
	float TimeCurveOffset;  // Offset: 584 Size: 4
	char pad_588[4];  // Offset: 588 Size: 4
	struct UFMODEvent* BeginForwardMovementSound;  // Offset: 592 Size: 8
	struct UFMODEvent* EndForwardMovementSound;  // Offset: 600 Size: 8
	struct UFMODEvent* BeginBackwardMovementSound;  // Offset: 608 Size: 8
	struct UFMODEvent* EndBackwardMovementSound;  // Offset: 616 Size: 8
	char pad_624[160];  // Offset: 624 Size: 160
	struct USplineComponent* SplineComponent;  // Offset: 784 Size: 8
	struct UStaticMeshComponent* RightStaticMeshComp;  // Offset: 792 Size: 8
	char pad_800[8];  // Offset: 800 Size: 8



 // Functions 
 public:
	void OnComponentHit_Right(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.TrackGimmick_Door.OnComponentHit_Right
	void OnComponentHit_Left(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function KartDrift.TrackGimmick_Door.OnComponentHit_Left
}; 
 
 


//Class KartDrift.ScenarioItemCube Size 840
// Inherited 744 bytes 
class AScenarioItemCube : public AGoItem_Cube
{

 public: 
	char pad_744[16];  // Offset: 744 Size: 16
	char pad_760_1 : 7;  // Offset: 760 Size: 1
	bool bOnce : 1;  // Offset: 760 Size: 1
	char pad_761[3];  // Offset: 761 Size: 3
	float OverrideRespawnTime;  // Offset: 764 Size: 4
	char pad_768_1 : 7;  // Offset: 768 Size: 1
	bool bContainsSpecificItem : 1;  // Offset: 768 Size: 1
	enum class EItemType SpecificItem;  // Offset: 769 Size: 1
	char pad_770[6];  // Offset: 770 Size: 6
	struct FScenarioIdentifier Identifier;  // Offset: 776 Size: 48
	enum class EScenarioActorType Type;  // Offset: 824 Size: 4
	char pad_828_1 : 7;  // Offset: 828 Size: 1
	bool bDefaultActivate : 1;  // Offset: 828 Size: 1
	int8_t InitializeOrder;  // Offset: 829 Size: 1
	enum class EScenarioActorState ScenarioActorState;  // Offset: 830 Size: 1
	char pad_831[1];  // Offset: 831 Size: 1
	struct UScenarioItemCubesComponent* ItemCubesComponent;  // Offset: 832 Size: 8



 // Functions 
 public:
	void SetActivation(bool InActivate, struct AActor* InOverlap); // Function KartDrift.ScenarioItemCube.SetActivation
}; 
 
 


//Class KartDrift.TMIRaceDataList Size 240
// Inherited 40 bytes 
class UTMIRaceDataList : public UObject
{

 public: 
	struct FString UniqueIdentifier;  // Offset: 40 Size: 16
	struct TArray<struct FTMIRaceData> TMIRaceData;  // Offset: 56 Size: 16
	struct TMap<char, struct FTMIItemModeData> TMIItemModeData;  // Offset: 72 Size: 80
	struct TArray<struct FTMIItemEventData> TMIItemEventData;  // Offset: 152 Size: 16
	struct FTMIRaceEventData TMIRaceEventData;  // Offset: 168 Size: 28
	char pad_196[4];  // Offset: 196 Size: 4
	struct TArray<struct FRecordUserCollisionInfo> UserCollision;  // Offset: 200 Size: 16
	struct FTMIBoosterStats boosterstats;  // Offset: 216 Size: 20
	char pad_236[4];  // Offset: 236 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioItemCubesComponent Size 248
// Inherited 248 bytes 
class UScenarioItemCubesComponent : public UItemCubesComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyAccumWidget Size 680
// Inherited 608 bytes 
class UScenarioKeyAccumWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimationGraph* AnimationGraph;  // Offset: 608 Size: 8
	int32_t MaxAccumItemCount;  // Offset: 616 Size: 4
	char pad_620[4];  // Offset: 620 Size: 4
	struct UPanelWidget* V_Panel_KeyAccumItemContainer;  // Offset: 624 Size: 8
	UScenarioKeyAccumItemWidget* KeyAccumItemWidgetClass;  // Offset: 632 Size: 8
	UScenarioKeyAccumLayoutItemWidget* KeyAccumLayoutItemWidgetClass;  // Offset: 640 Size: 8
	struct UScenarioKeyAccumLayoutItemWidget* KeyAccumLayoutItemWidget;  // Offset: 648 Size: 8
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 656 Size: 8
	char pad_664[16];  // Offset: 664 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyGuideWidget Size 776
// Inherited 608 bytes 
class UScenarioKeyGuideWidget : public UUserWidget
{

 public: 
	struct UWidgetAnimationGraph* AnimationGraph;  // Offset: 608 Size: 8
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 616 Size: 8
	enum class EInputDeviceType LatestInputDeviceType;  // Offset: 624 Size: 1
	char pad_625[3];  // Offset: 625 Size: 3
	struct FScenarioKeyGuideAnimData ScenarioKeyGuideAnimData;  // Offset: 628 Size: 36
	struct UPanelWidget* V_Panel_KeyContainer;  // Offset: 664 Size: 8
	UScenarioKeyWidget* ScenarioKeyWidgetClass;  // Offset: 672 Size: 8
	UKeyIconWidget* KeyIconWidgetClass;  // Offset: 680 Size: 8
	UUserWidget* KeyLinkWidgetClass;  // Offset: 688 Size: 8
	char pad_696_1 : 7;  // Offset: 696 Size: 1
	bool bEnableFocusVisualWhenKeyInputCome : 1;  // Offset: 696 Size: 1
	char pad_697[7];  // Offset: 697 Size: 7
	UScenarioKeyLayoutWidget* KeyLayoutWidgetClass;  // Offset: 704 Size: 8
	struct UScenarioKeyLayoutWidget* KeyLayoutWidget;  // Offset: 712 Size: 8
	char pad_720[56];  // Offset: 720 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TAAccountConfigStorage Size 40
// Inherited 40 bytes 
class UTAAccountConfigStorage : public UTimeAttackConfigStorage
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ServerQueryProtocol Size 96
// Inherited 48 bytes 
class UServerQueryProtocol : public UGameInstanceSubsystem
{

 public: 
	char pad_48[48];  // Offset: 48 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioKeyLayoutKeyWidget Size 648
// Inherited 608 bytes 
class UScenarioKeyLayoutKeyWidget : public UUserWidget
{

 public: 
	struct FScenarioKey GameTimeKey;  // Offset: 608 Size: 12
	char pad_620[4];  // Offset: 620 Size: 4
	struct UKeyTextureMap2* ScenarioKeyTextureMap;  // Offset: 624 Size: 8
	struct UKeyTextureMap* KeyTextureMap;  // Offset: 632 Size: 8
	struct UKdButtonImage* V_ButtonImage;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioLogicComponent Size 1120
// Inherited 224 bytes 
class UScenarioLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[896];  // Offset: 224 Size: 896



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioMessageElementWidget Size 640
// Inherited 608 bytes 
class UScenarioMessageElementWidget : public UUserWidget
{

 public: 
	char pad_608[8];  // Offset: 608 Size: 8
	struct UKdImageTextBlock* V_TextBlock_Message;  // Offset: 616 Size: 8
	struct UUserWidget* V_ScenarioConfirmButton;  // Offset: 624 Size: 8
	struct UScenarioLogicComponent* ScenarioLogicComponent;  // Offset: 632 Size: 8



 // Functions 
 public:
	void OnFinishedConfirmButtonAnimation(); // Function KartDrift.ScenarioMessageElementWidget.OnFinishedConfirmButtonAnimation
}; 
 
 


//Class KartDrift.ScenarioPauseComponent Size 280
// Inherited 272 bytes 
class UScenarioPauseComponent : public UPauseComponent
{

 public: 
	char pad_272[8];  // Offset: 272 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPawn Size 936
// Inherited 936 bytes 
class AScenarioPawn : public AKdPawn
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPhaseComponent Size 432
// Inherited 432 bytes 
class UScenarioPhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPlayerStatComponent Size 424
// Inherited 176 bytes 
class UScenarioPlayerStatComponent : public UActorComponent
{

 public: 
	char pad_176[160];  // Offset: 176 Size: 160
	struct TMap<struct AScenarioSwitchBase*, bool> SwitchActorContainer;  // Offset: 336 Size: 80
	struct APawn* CachedPawn;  // Offset: 416 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioPortraitMessageWidget Size 776
// Inherited 688 bytes 
class UScenarioPortraitMessageWidget : public UScenarioMessageWidget
{

 public: 
	struct UImage* V_Image_Portrait;  // Offset: 688 Size: 8
	char pad_696[80];  // Offset: 696 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioRaceCounterWidget Size 728
// Inherited 728 bytes 
class UScenarioRaceCounterWidget : public URaceCounterWidget
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScenarioTitleWidget Size 672
// Inherited 608 bytes 
class UScenarioTitleWidget : public UUserWidget
{

 public: 
	struct UKdTextBlock* V_Text_Title;  // Offset: 608 Size: 8
	struct UKdTextBlock* V_Text_Desc;  // Offset: 616 Size: 8
	char pad_624[48];  // Offset: 624 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ScreenTransitionWidget Size 664
// Inherited 608 bytes 
class UScreenTransitionWidget : public UUserWidget
{

 public: 
	char pad_608[48];  // Offset: 608 Size: 48
	struct UWidgetAnimation* Anim_Show_Inst;  // Offset: 656 Size: 8



 // Functions 
 public:
	void TransitionFinished(); // Function KartDrift.ScreenTransitionWidget.TransitionFinished
	void ScreenFullyCovered(); // Function KartDrift.ScreenTransitionWidget.ScreenFullyCovered
}; 
 
 


//Class KartDrift.SequenceSkipComponent Size 200
// Inherited 176 bytes 
class USequenceSkipComponent : public UActorComponent
{

 public: 
	char pad_176[24];  // Offset: 176 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.KdServer Size 56
// Inherited 40 bytes 
class UKdServer : public UObject
{

 public: 
	struct FString ServerPSNClientId;  // Offset: 40 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediServerMessage Size 80
// Inherited 56 bytes 
class UDqDediServerMessage : public UPqPacket
{

 public: 
	struct FString Channel;  // Offset: 56 Size: 16
	struct UObject* Msg;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrUpdatePlatformStore Size 72
// Inherited 72 bytes 
class UPrUpdatePlatformStore : public UPrPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ShadowQuestByWorld Size 80
// Inherited 72 bytes 
class UTransition_ShadowQuestByWorld : public UShadowQuestRule
{

 public: 
	char pad_72[8];  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediQueryAccountStatus Size 72
// Inherited 56 bytes 
class UDqDediQueryAccountStatus : public UPqPacket
{

 public: 
	struct TArray<struct FString> playerIds;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediGameLog Size 88
// Inherited 56 bytes 
class UDqDediGameLog : public UPqPacket
{

 public: 
	struct FString logName;  // Offset: 56 Size: 16
	struct FString Log;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrDediGetMultiplayRequest Size 104
// Inherited 72 bytes 
class UDrDediGetMultiplayRequest : public UPrPacket
{

 public: 
	struct UObject* Request;  // Offset: 72 Size: 8
	struct FString gameId;  // Offset: 80 Size: 16
	struct UObject* SessionRequest;  // Offset: 96 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetStickerStocks Size 72
// Inherited 56 bytes 
class ULqGetStickerStocks : public UPqPacket
{

 public: 
	struct TArray<int64_t> stickerStockIds;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrDediFinishRace Size 152
// Inherited 72 bytes 
class UDrDediFinishRace : public UPrPacket
{

 public: 
	struct TMap<struct FString, struct FRaceGameResult> aiRaceResult;  // Offset: 72 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediNxLogUser Size 152
// Inherited 56 bytes 
class UDqDediNxLogUser : public UPqPacket
{

 public: 
	struct FString accountId;  // Offset: 56 Size: 16
	struct FString accountname;  // Offset: 72 Size: 16
	struct FString osplatform;  // Offset: 88 Size: 16
	struct FString countryname;  // Offset: 104 Size: 16
	struct FString sid;  // Offset: 120 Size: 16
	struct FString osType;  // Offset: 136 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqDediNxLogInMatchEndRidePath Size 280
// Inherited 248 bytes 
class UDqDediNxLogInMatchEndRidePath : public UDqDediNxLogInMatchEnd
{

 public: 
	struct FString protohash;  // Offset: 248 Size: 16
	struct FString ridepath;  // Offset: 264 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DqCreateMultiplaySession Size 88
// Inherited 56 bytes 
class UDqCreateMultiplaySession : public UPqPacket
{

 public: 
	struct FString region;  // Offset: 56 Size: 16
	struct FString fleetId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrCreateMultiplaySession Size 168
// Inherited 72 bytes 
class UDrCreateMultiplaySession : public UPrPacket
{

 public: 
	struct FString gameId;  // Offset: 72 Size: 16
	struct FString Addr;  // Offset: 88 Size: 16
	struct FString Track;  // Offset: 104 Size: 16
	struct UObject* gameSettings;  // Offset: 120 Size: 8
	struct UObject* details;  // Offset: 128 Size: 8
	struct FString openLevelOption;  // Offset: 136 Size: 16
	struct FString packEncKey;  // Offset: 152 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DrQueryDebugSession Size 88
// Inherited 72 bytes 
class UDrQueryDebugSession : public UPrPacket
{

 public: 
	struct FString UUID;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SessionApiServer Size 88
// Inherited 40 bytes 
class USessionApiServer : public UObject
{

 public: 
	struct UHttpServerRequester* SessionApiServer;  // Offset: 40 Size: 8
	struct UServerRequest* WaitingSessionAPIRequests;  // Offset: 48 Size: 8
	char pad_56[16];  // Offset: 56 Size: 16
	struct TArray<struct FSessionApiPendingRequest> PendingSessionAPIRequests;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SetupPlayerInputInterface Size 40
// Inherited 40 bytes 
class USetupPlayerInputInterface : public UInterface
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowPlaySetupComponent Size 920
// Inherited 176 bytes 
class UShadowPlaySetupComponent : public UActorComponent
{

 public: 
	struct AKdPawn* PlayerPawn;  // Offset: 176 Size: 8
	struct AKdPawn* ShadowPawn;  // Offset: 184 Size: 8
	struct UKdPawnSpawner* PawnSpawner;  // Offset: 192 Size: 8
	struct UDelegateBarrierMany* Barrier;  // Offset: 200 Size: 8
	struct FRaceSaveGameLatestPtr ShadowSaveGame;  // Offset: 208 Size: 8
	char pad_216[704];  // Offset: 216 Size: 704



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestConfigStorage Size 40
// Inherited 40 bytes 
class UShadowQuestConfigStorage : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackGameState Size 1152
// Inherited 1144 bytes 
class ATimeAttackGameState : public AKdGameState
{

 public: 
	char pad_1144[8];  // Offset: 1144 Size: 8



 // Functions 
 public:
	void OnAsyncLoadCompleted(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.TimeAttackGameState.OnAsyncLoadCompleted
}; 
 
 


//Class KartDrift.ShadowQuestLogicComponent Size 344
// Inherited 224 bytes 
class UShadowQuestLogicComponent : public UWidgetLogicComponent
{

 public: 
	char pad_224[120];  // Offset: 224 Size: 120



 // Functions 
 public:
	void OnPageActivated(bool bActivated); // Function KartDrift.ShadowQuestLogicComponent.OnPageActivated
}; 
 
 


//Class KartDrift.ShadowQuestPawn Size 952
// Inherited 952 bytes 
class AShadowQuestPawn : public ATimeAttackPawn
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestPhaseComponent Size 656
// Inherited 432 bytes 
class UShadowQuestPhaseComponent : public UPhaseComponent
{

 public: 
	char pad_432[224];  // Offset: 432 Size: 224



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestResultDialog Size 872
// Inherited 816 bytes 
class UShadowQuestResultDialog : public UDialogTemplate
{

 public: 
	char pad_816[56];  // Offset: 816 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestAddHUD Size 72
// Inherited 72 bytes 
class UShadowQuestAddHUD : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestActivateStartBoost Size 72
// Inherited 72 bytes 
class UShadowQuestActivateStartBoost : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.RemoveDistanceTimeWidget Size 72
// Inherited 72 bytes 
class URemoveDistanceTimeWidget : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedTeamPhaseComponent Size 432
// Inherited 432 bytes 
class USpeedTeamPhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestAddRaceOverWidget Size 112
// Inherited 72 bytes 
class UShadowQuestAddRaceOverWidget : public UShadowQuestRule
{

 public: 
	struct TSoftClassPtr<UObject> RaceOverWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestRemoveRaceOverWidget Size 72
// Inherited 72 bytes 
class UShadowQuestRemoveRaceOverWidget : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestPlayFinishSequence Size 72
// Inherited 72 bytes 
class UShadowQuestPlayFinishSequence : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestAddResultWidget Size 112
// Inherited 72 bytes 
class UShadowQuestAddResultWidget : public UShadowQuestRule
{

 public: 
	struct TSoftClassPtr<UObject> ResultWidgetClass;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddShadowEmotion Size 72
// Inherited 72 bytes 
class UAddShadowEmotion : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopInventoryListKrPc Size 56
// Inherited 56 bytes 
class UPqShopInventoryListKrPc : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableDistanceWarning Size 72
// Inherited 72 bytes 
class UEnableDistanceWarning : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestStartSetup Size 72
// Inherited 72 bytes 
class UShadowQuestStartSetup : public UShadowQuestRule
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackShadowPawn Size 952
// Inherited 936 bytes 
class ATimeAttackShadowPawn : public AKdPawn
{

 public: 
	char pad_936[16];  // Offset: 936 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestShadowPawn Size 952
// Inherited 952 bytes 
class AShadowQuestShadowPawn : public ATimeAttackShadowPawn
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestStateComponent Size 256
// Inherited 176 bytes 
class UShadowQuestStateComponent : public UActorComponent
{

 public: 
	char pad_176[48];  // Offset: 176 Size: 48
	struct APawn* OpponentPawn;  // Offset: 224 Size: 8
	struct UServerTimerComponent* ServerTimer;  // Offset: 232 Size: 8
	char pad_240[16];  // Offset: 240 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShadowQuestUIComponent Size 408
// Inherited 176 bytes 
class UShadowQuestUIComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct UWidgetPtrLifetimeOwner* WidgetOwner;  // Offset: 192 Size: 8
	struct UShadowQuestConfigStorage* ConfigStorage;  // Offset: 200 Size: 8
	struct UShadowQuestStateComponent* StateComponent;  // Offset: 208 Size: 8
	struct URaceProgressComponent* MyRaceProgress;  // Offset: 216 Size: 8
	struct URaceProgressComponent* OpponentRaceProgress;  // Offset: 224 Size: 8
	char pad_232[176];  // Offset: 232 Size: 176



 // Functions 
 public:
}; 
 
 


//Class KartDrift.InvenItemEntryObject Size 72
// Inherited 40 bytes 
class UInvenItemEntryObject : public UObject
{

 public: 
	struct FKtStockItem StockItem;  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ConfirmItemEntryObject Size 96
// Inherited 40 bytes 
class UConfirmItemEntryObject : public UObject
{

 public: 
	char pad_40[56];  // Offset: 40 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShopFuncClass Size 120
// Inherited 40 bytes 
class UShopFuncClass : public UObject
{

 public: 
	char pad_40[8];  // Offset: 40 Size: 8
	struct FShopPurchasingInfo CachedStockInfo;  // Offset: 48 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ShopToy Size 176
// Inherited 120 bytes 
class UShopToy : public UShopFuncClass
{

 public: 
	char pad_120[56];  // Offset: 120 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopKoinProductList Size 88
// Inherited 72 bytes 
class UPrShopKoinProductList : public UPrPacket
{

 public: 
	struct TArray<struct FKtShopStock> Products;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopBalanceKrPc Size 56
// Inherited 56 bytes 
class UPqShopBalanceKrPc : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopBalanceKrPc Size 80
// Inherited 72 bytes 
class UPrShopBalanceKrPc : public UPrPacket
{

 public: 
	int32_t totalBalance;  // Offset: 72 Size: 4
	char pad_76[4];  // Offset: 76 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopPurchaseKrPc Size 88
// Inherited 56 bytes 
class UPqShopPurchaseKrPc : public UPqPacket
{

 public: 
	struct FString Category;  // Offset: 56 Size: 16
	struct FString stockId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopInventoryRefundKrPc Size 64
// Inherited 56 bytes 
class UPqShopInventoryRefundKrPc : public UPqPacket
{

 public: 
	int32_t Index;  // Offset: 56 Size: 4
	char pad_60[4];  // Offset: 60 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrShopPurchaseNxA Size 104
// Inherited 72 bytes 
class UPrShopPurchaseNxA : public UPrPacket
{

 public: 
	struct FString authorizedUrl;  // Offset: 72 Size: 16
	struct FString transactionId;  // Offset: 88 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqShopInventoryPickupNxA Size 72
// Inherited 56 bytes 
class UPqShopInventoryPickupNxA : public UPqPacket
{

 public: 
	struct FString transactionId;  // Offset: 56 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqVerifyToyPayment Size 88
// Inherited 56 bytes 
class UPqVerifyToyPayment : public UPqPacket
{

 public: 
	struct FKtToyPaymentInfo paymentInfo;  // Offset: 56 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PrVerifyToyPayment Size 88
// Inherited 72 bytes 
class UPrVerifyToyPayment : public UPrPacket
{

 public: 
	struct FString productId;  // Offset: 72 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqDeleteMyStickerDownload Size 64
// Inherited 56 bytes 
class ULqDeleteMyStickerDownload : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PqIsAdult Size 80
// Inherited 56 bytes 
class UPqIsAdult : public UPqPacket
{

 public: 
	char pad_56_1 : 7;  // Offset: 56 Size: 1
	bool isAdult : 1;  // Offset: 56 Size: 1
	char pad_57[7];  // Offset: 57 Size: 7
	struct FString birthday;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.PcAutoConfirmedKRPCProducts Size 64
// Inherited 48 bytes 
class UPcAutoConfirmedKRPCProducts : public UPcPacket
{

 public: 
	struct TArray<struct FKtShopStock> Products;  // Offset: 48 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SideMirrorCameraComponent Size 192
// Inherited 176 bytes 
class USideMirrorCameraComponent : public UActorComponent
{

 public: 
	struct AActor* MyActor;  // Offset: 176 Size: 8
	struct AActor* TargetActor;  // Offset: 184 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SimpleDedicatedRaceGameSession Size 664
// Inherited 568 bytes 
class ASimpleDedicatedRaceGameSession : public AKdGameSession
{

 public: 
	char pad_568[16];  // Offset: 568 Size: 16
	struct TMap<struct FString, struct UKdGameSessionPlayer*> players;  // Offset: 584 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SimpleMovementComponent Size 200
// Inherited 176 bytes 
class USimpleMovementComponent : public UActorComponent
{

 public: 
	struct TArray<struct FVector> CheckPoint;  // Offset: 176 Size: 16
	int32_t TargetIndex;  // Offset: 192 Size: 4
	float Speed;  // Offset: 196 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SkipFinishConditions Size 176
// Inherited 176 bytes 
class USkipFinishConditions : public UActorComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SirenReaction Size 704
// Inherited 704 bytes 
class USirenReaction : public UBananaReaction
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SlotChangerWidget Size 648
// Inherited 608 bytes 
class USlotChangerWidget : public UUserWidget
{

 public: 
	struct UKeyIconWidget* KeyIcon;  // Offset: 608 Size: 8
	struct UImage* SlotChangerImg;  // Offset: 616 Size: 8
	struct UTextBlock* SlotChangerCountText;  // Offset: 624 Size: 8
	struct UWidgetAnimation* ChangeAnimation;  // Offset: 632 Size: 8
	struct UFMODEvent* SlotChangeSound;  // Offset: 640 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WidgetManagerComponent Size 272
// Inherited 176 bytes 
class UWidgetManagerComponent : public UActorComponent
{

 public: 
	char pad_176[88];  // Offset: 176 Size: 88
	struct UUserWidget* CommonThrobberWidget;  // Offset: 264 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SmsGameLift Size 120
// Inherited 56 bytes 
class USmsGameLift : public USmsProvider
{

 public: 
	char pad_56[56];  // Offset: 56 Size: 56
	struct UGameInstance* GameInstance;  // Offset: 112 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerMarketTextChecker Size 96
// Inherited 40 bytes 
class UStickerMarketTextChecker : public UObject
{

 public: 
	char pad_40[56];  // Offset: 40 Size: 56



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SnowstormReaction Size 656
// Inherited 528 bytes 
class USnowstormReaction : public USceneComponent
{

 public: 
	char pad_528[8];  // Offset: 528 Size: 8
	struct TSoftObjectPtr<UMaterialInstance> SnowstormMatInst;  // Offset: 536 Size: 40
	struct UMaterialInstanceDynamic* SnowstormMaterial;  // Offset: 576 Size: 8
	struct UCameraComponent* CameraComp;  // Offset: 584 Size: 8
	struct UItemComponent* LocalVictim;  // Offset: 592 Size: 8
	char pad_600[56];  // Offset: 600 Size: 56



 // Functions 
 public:
	void OnCrash(enum class ECollisionChannel CollisionObjectType, int32_t CrashLevel, float HitVelocity, struct FVector CrashLocation); // Function KartDrift.SnowstormReaction.OnCrash
}; 
 
 


//Class KartDrift.SoundManager Size 640
// Inherited 544 bytes 
class ASoundManager : public AActor
{

 public: 
	char pad_544[32];  // Offset: 544 Size: 32
	struct TArray<struct FLoadSoundInfo> ActiveLoadSounds;  // Offset: 576 Size: 16
	struct TArray<struct FLoadSoundInfo> InActiveLoadSounds;  // Offset: 592 Size: 16
	struct TArray<struct FSoundInfo> InActivateSounds;  // Offset: 608 Size: 16
	struct TArray<struct FSoundInfo> ActiveSounds;  // Offset: 624 Size: 16



 // Functions 
 public:
	bool Start(struct UWorld* NewWorld); // Function KartDrift.SoundManager.Start
	bool End(); // Function KartDrift.SoundManager.End
}; 
 
 


//Class KartDrift.AddTeamBoostGauge Size 112
// Inherited 72 bytes 
class UAddTeamBoostGauge : public URuleObject
{

 public: 
	struct TSoftClassPtr<UObject> BoostGaugeWidget;  // Offset: 72 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableLeadCompensation Size 72
// Inherited 72 bytes 
class UEnableLeadCompensation : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SpeedSingleAiPawn Size 944
// Inherited 936 bytes 
class ASpeedSingleAiPawn : public AKdPawn
{

 public: 
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SQWidgetCheat Size 184
// Inherited 40 bytes 
class USQWidgetCheat : public UObject
{

 public: 
	char pad_40[16];  // Offset: 40 Size: 16
	struct UWidgetPtrLifetimeOwner* WidgetOwner;  // Offset: 56 Size: 8
	char pad_64[120];  // Offset: 64 Size: 120



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StaffCreditsDialog Size 832
// Inherited 816 bytes 
class UStaffCreditsDialog : public UDialogTemplate
{

 public: 
	char pad_816[16];  // Offset: 816 Size: 16



 // Functions 
 public:
	void OnFinishedOpenAnimation(); // Function KartDrift.StaffCreditsDialog.OnFinishedOpenAnimation
	void OnBackButtonClicked(int32_t InIndex); // Function KartDrift.StaffCreditsDialog.OnBackButtonClicked
}; 
 
 


//Class KartDrift.StickerImageCache Size 96
// Inherited 40 bytes 
class UStickerImageCache : public UObject
{

 public: 
	struct UTexture2D* Texture;  // Offset: 40 Size: 8
	struct FLiveryStickerDesc desc;  // Offset: 48 Size: 40
	char pad_88[8];  // Offset: 88 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerStockEntryObject Size 296
// Inherited 40 bytes 
class UStickerStockEntryObject : public UObject
{

 public: 
	char pad_40[24];  // Offset: 40 Size: 24
	struct FStickerStock StickerStock;  // Offset: 64 Size: 120
	char pad_184[8];  // Offset: 184 Size: 8
	struct UStickerImageCache* ImageCache;  // Offset: 192 Size: 8
	char pad_200[24];  // Offset: 200 Size: 24
	struct UAccountLiveryMarket* Market;  // Offset: 224 Size: 8
	struct UWorld* World;  // Offset: 232 Size: 8
	char pad_240[8];  // Offset: 240 Size: 8
	struct FLiveryStickerDesc StickerDesc;  // Offset: 248 Size: 40
	char pad_288[8];  // Offset: 288 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerSearchMarkerEntryObject Size 40
// Inherited 40 bytes 
class UStickerSearchMarkerEntryObject : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StickerSearchTagEntryObject Size 72
// Inherited 40 bytes 
class UStickerSearchTagEntryObject : public UObject
{

 public: 
	char pad_40[32];  // Offset: 40 Size: 32



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqStickerMarketLocked Size 56
// Inherited 56 bytes 
class ULqStickerMarketLocked : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrRestrictedUntil Size 80
// Inherited 72 bytes 
class ULrRestrictedUntil : public UPrPacket
{

 public: 
	struct FDateTime until;  // Offset: 72 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetStickerStock Size 64
// Inherited 56 bytes 
class ULqGetStickerStock : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetStickerStocks Size 120
// Inherited 72 bytes 
class ULrGetStickerStocks : public UPrPacket
{

 public: 
	struct TArray<struct FStickerStock> stickerStocks;  // Offset: 72 Size: 16
	struct TArray<int64_t> notFounds;  // Offset: 88 Size: 16
	struct TArray<int64_t> errors;  // Offset: 104 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrRegisterStickerStock Size 256
// Inherited 72 bytes 
class ULrRegisterStickerStock : public UPrPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 72 Size: 8
	struct FString stickerUniqueId;  // Offset: 80 Size: 16
	struct FKtDataStorePayload dataStoreLink;  // Offset: 96 Size: 160



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetMyStickerDownloadList Size 56
// Inherited 56 bytes 
class ULqGetMyStickerDownloadList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqGetMyStickerStockList Size 56
// Inherited 56 bytes 
class ULqGetMyStickerStockList : public UPqPacket
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrGetMyStickerStockList Size 96
// Inherited 72 bytes 
class ULrGetMyStickerStockList : public UPrPacket
{

 public: 
	struct TArray<struct FStockIdAndSlot> Stocks;  // Offset: 72 Size: 16
	int32_t slotCount;  // Offset: 88 Size: 4
	char pad_92[4];  // Offset: 92 Size: 4



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqDropMyStickerStock Size 64
// Inherited 56 bytes 
class ULqDropMyStickerStock : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqDeleteMyStickerStock Size 64
// Inherited 56 bytes 
class ULqDeleteMyStickerStock : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LrDeleteMyStickerStock Size 80
// Inherited 72 bytes 
class ULrDeleteMyStickerStock : public UPrPacket
{

 public: 
	char pad_72_1 : 7;  // Offset: 72 Size: 1
	bool changed : 1;  // Offset: 72 Size: 1
	char pad_73[7];  // Offset: 73 Size: 7



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqReportStickerStock Size 80
// Inherited 56 bytes 
class ULqReportStickerStock : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8
	struct FString reportCategory;  // Offset: 64 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.LqAddStickerStockBookmark Size 64
// Inherited 56 bytes 
class ULqAddStickerStockBookmark : public UPqPacket
{

 public: 
	int64_t stickerStockId;  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.SurfaceEffectComponent Size 232
// Inherited 176 bytes 
class USurfaceEffectComponent : public UActorComponent
{

 public: 
	struct UFMODAudioComponent* SurfaceSoundComp;  // Offset: 176 Size: 8
	struct UKartMovementComponent* KartMovement;  // Offset: 184 Size: 8
	struct UKartEffectComponent* KartEffect;  // Offset: 192 Size: 8
	struct UPhysicalMaterial* LastSurface;  // Offset: 200 Size: 8
	char pad_208[24];  // Offset: 208 Size: 24



 // Functions 
 public:
	void PlaySurfaceForceFeedback(struct UPhysicalMaterial* PM); // Function KartDrift.SurfaceEffectComponent.PlaySurfaceForceFeedback
}; 
 
 


//Class KartDrift.SVGToolsMeshActor Size 696
// Inherited 544 bytes 
class ASVGToolsMeshActor : public AActor
{

 public: 
	struct UTextureRenderTarget2D* TextureRenderTarget;  // Offset: 544 Size: 8
	struct USceneCaptureComponent2D* SceneCapture;  // Offset: 552 Size: 8
	char pad_560[80];  // Offset: 560 Size: 80
	struct TArray<struct UStaticMeshComponent*> BoundaryMeshComponents;  // Offset: 640 Size: 16
	char pad_656[40];  // Offset: 656 Size: 40



 // Functions 
 public:
	void OnBoundaryAssetLoadComplete(struct TSet<struct FSoftObjectPath> InAssetPathContainer); // Function KartDrift.SVGToolsMeshActor.OnBoundaryAssetLoadComplete
}; 
 
 


//Class KartDrift.TargetFinderComponent Size 384
// Inherited 176 bytes 
class UTargetFinderComponent : public UActorComponent
{

 public: 
	char pad_176[16];  // Offset: 176 Size: 16
	struct FVector AimWidget3DLocalOffset;  // Offset: 192 Size: 12
	float AimWidget3DScale;  // Offset: 204 Size: 4
	struct TSoftClassPtr<UObject> AimWidgetClass;  // Offset: 208 Size: 40
	struct TSoftClassPtr<UObject> AimWidget3DClass;  // Offset: 248 Size: 40
	struct UFMODAudioComponent* AudioComponent;  // Offset: 288 Size: 8
	struct AActor* FlySource;  // Offset: 296 Size: 8
	struct AActor* TargetCandidate;  // Offset: 304 Size: 8
	struct AActor* TargetReplicated;  // Offset: 312 Size: 8
	char pad_320[16];  // Offset: 320 Size: 16
	struct UWidgetComponent* WidgetComponent;  // Offset: 336 Size: 8
	struct UItemAimWidget* AimWidget;  // Offset: 344 Size: 8
	struct UItemAimWidget* AimWidget3D;  // Offset: 352 Size: 8
	struct UItemAimWidget* AimWidgetOnMe;  // Offset: 360 Size: 8
	char pad_368[16];  // Offset: 368 Size: 16



 // Functions 
 public:
	void Server_ChangeTargetTo(struct AActor* Target); // Function KartDrift.TargetFinderComponent.Server_ChangeTargetTo
	void Multicast_ChangeTargetTo(struct AActor* Target); // Function KartDrift.TargetFinderComponent.Multicast_ChangeTargetTo
}; 
 
 


//Class KartDrift.TeamBoostComponent Size 272
// Inherited 264 bytes 
class UTeamBoostComponent : public UBoostComponent
{

 public: 
	int32_t TeamIndex;  // Offset: 264 Size: 4
	char pad_268[4];  // Offset: 268 Size: 4



 // Functions 
 public:
	void ServerAddTeamBooster(float LastProgress, float MaxDriftGauge); // Function KartDrift.TeamBoostComponent.ServerAddTeamBooster
}; 
 
 


//Class KartDrift.TeamBoostGameStateComponent Size 200
// Inherited 176 bytes 
class UTeamBoostGameStateComponent : public UActorComponent
{

 public: 
	char pad_176[8];  // Offset: 176 Size: 8
	struct TArray<struct FTeamBoostGauge> TeamBoostGauge;  // Offset: 184 Size: 16



 // Functions 
 public:
	void MulticastNotifyGetTeamBoost(int32_t Team); // Function KartDrift.TeamBoostGameStateComponent.MulticastNotifyGetTeamBoost
}; 
 
 


//Class KartDrift.M_TrackChangeDialog Size 968
// Inherited 816 bytes 
class UM_TrackChangeDialog : public UDialogTemplate
{

 public: 
	char pad_816[48];  // Offset: 816 Size: 48
	struct UListView* TrackListView;  // Offset: 864 Size: 8
	struct TMap<struct FString, struct UM_TrackChangeDialogItem*> AliasToItemMap;  // Offset: 872 Size: 80
	struct UM_TrackChangeDialogItem* PreviousSelection;  // Offset: 952 Size: 8
	char pad_960[8];  // Offset: 960 Size: 8



 // Functions 
 public:
	void OnMoveLicenseButtonClicked(int32_t ButtonIndex); // Function KartDrift.M_TrackChangeDialog.OnMoveLicenseButtonClicked
	void OnFinalSelectButtonClicked(int32_t ButtonIndex); // Function KartDrift.M_TrackChangeDialog.OnFinalSelectButtonClicked
	void OnBackButtonClicked(int32_t Index); // Function KartDrift.M_TrackChangeDialog.OnBackButtonClicked
}; 
 
 


//Class KartDrift.TimeAttackConfigStorage Size 40
// Inherited 40 bytes 
class UTimeAttackConfigStorage : public UObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TANoAccountConfigStorage Size 48
// Inherited 40 bytes 
class UTANoAccountConfigStorage : public UTimeAttackConfigStorage
{

 public: 
	struct FRaceSaveGameLatestPtr LocalSaveGameCache;  // Offset: 40 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackGameMode Size 824
// Inherited 824 bytes 
class ATimeAttackGameMode : public AKdGameMode
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackKtServerComponent Size 272
// Inherited 176 bytes 
class UTimeAttackKtServerComponent : public UActorComponent
{

 public: 
	char pad_176[96];  // Offset: 176 Size: 96



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackPhaseComponent Size 432
// Inherited 432 bytes 
class UTimeAttackPhaseComponent : public UPhaseComponent
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackReplayerEnd Size 72
// Inherited 72 bytes 
class UTimeAttackReplayerEnd : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.DisableSideMirror Size 72
// Inherited 72 bytes 
class UDisableSideMirror : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_WaitForSaveTimeAttack Size 88
// Inherited 80 bytes 
class UTransition_WaitForSaveTimeAttack : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.EnableResultWidgetButtons Size 72
// Inherited 72 bytes 
class UEnableResultWidgetButtons : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ToTimeAttackCountdown Size 88
// Inherited 80 bytes 
class UTransition_ToTimeAttackCountdown : public URaceGameTransition
{

 public: 
	char pad_80[8];  // Offset: 80 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForceStopShadow Size 72
// Inherited 72 bytes 
class UForceStopShadow : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WebPageWidget Size 840
// Inherited 816 bytes 
class UWebPageWidget : public UDialogTemplate
{

 public: 
	char pad_816[24];  // Offset: 816 Size: 24



 // Functions 
 public:
	void LoadURL(struct FString NewURL); // Function KartDrift.WebPageWidget.LoadURL
	void HandleUrlChanged(struct FText& NewURL); // Function KartDrift.WebPageWidget.HandleUrlChanged
}; 
 
 


//Class KartDrift.SetupTimeAttack Size 72
// Inherited 72 bytes 
class USetupTimeAttack : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.StartTimeAttack Size 72
// Inherited 72 bytes 
class UStartTimeAttack : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ForceRaceRankInitialization Size 72
// Inherited 72 bytes 
class UForceRaceRankInitialization : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.Transition_ShowTransitionWidget Size 136
// Inherited 80 bytes 
class UTransition_ShowTransitionWidget : public URaceGameTransition
{

 public: 
	struct UScreenTransitionWidget* TransitionWidget;  // Offset: 80 Size: 8
	char pad_88[48];  // Offset: 88 Size: 48



 // Functions 
 public:
}; 
 
 


//Class KartDrift.AddAlwaysCanFinishRaceRule Size 72
// Inherited 72 bytes 
class UAddAlwaysCanFinishRaceRule : public URuleObject
{

 public: 



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TimeAttackTravelData Size 64
// Inherited 48 bytes 
class UTimeAttackTravelData : public UGameInstanceSubsystem
{

 public: 
	struct FRaceSaveGameLatestPtr ReplayFile;  // Offset: 48 Size: 8
	char pad_56[8];  // Offset: 56 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TMI_NXLogBaseComponent Size 336
// Inherited 176 bytes 
class UTMI_NXLogBaseComponent : public UActorComponent
{

 public: 
	struct TMap<struct APawn*, struct UObject*> TMIDataContainer;  // Offset: 176 Size: 80
	struct TSet<struct UObject*> ExpandDataContainer;  // Offset: 256 Size: 80



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TMI_NXLogMajorGameComponent Size 488
// Inherited 336 bytes 
class UTMI_NXLogMajorGameComponent : public UTMI_NXLogBaseComponent
{

 public: 
	char pad_336[28];  // Offset: 336 Size: 28
	float LastSaveTime;  // Offset: 364 Size: 4
	char pad_368_1 : 7;  // Offset: 368 Size: 1
	bool bRaceStart : 1;  // Offset: 368 Size: 1
	char pad_369_1 : 7;  // Offset: 369 Size: 1
	bool bRaceEnd : 1;  // Offset: 369 Size: 1
	char pad_370[6];  // Offset: 370 Size: 6
	struct TArray<struct APawn*> UserList;  // Offset: 376 Size: 16
	float TotalLapTime;  // Offset: 392 Size: 4
	char pad_396[4];  // Offset: 396 Size: 4
	struct UMajorGameData* RaceResult;  // Offset: 400 Size: 8
	char pad_408[80];  // Offset: 408 Size: 80



 // Functions 
 public:
	void OnEndGame(); // Function KartDrift.TMI_NXLogMajorGameComponent.OnEndGame
	void OnBeginGame(); // Function KartDrift.TMI_NXLogMajorGameComponent.OnBeginGame
	void DebugLogDatas(); // Function KartDrift.TMI_NXLogMajorGameComponent.DebugLogDatas
}; 
 
 


//Class KartDrift.TMIOvertakeEventProducer Size 224
// Inherited 40 bytes 
class UTMIOvertakeEventProducer : public UObject
{

 public: 
	char pad_40[184];  // Offset: 40 Size: 184



 // Functions 
 public:
}; 
 
 


//Class KartDrift.ToastManagerComponent Size 376
// Inherited 176 bytes 
class UToastManagerComponent : public UActorComponent
{

 public: 
	char pad_176[32];  // Offset: 176 Size: 32
	struct TSoftClassPtr<UObject> ToastPopupClass;  // Offset: 208 Size: 40
	struct UUserWidget* CurrentToastPopup;  // Offset: 248 Size: 8
	char pad_256[120];  // Offset: 256 Size: 120



 // Functions 
 public:
	void OnEndCloseAnimation(); // Function KartDrift.ToastManagerComponent.OnEndCloseAnimation
}; 
 
 


//Class KartDrift.TouchInstanceBoosterButton Size 744
// Inherited 696 bytes 
class UTouchInstanceBoosterButton : public UTouchInputButton
{

 public: 
	struct UNamedSlot* V_KeyGuideSlot;  // Offset: 696 Size: 8
	struct UWidgetSwitcher* V_WidgetSwitcher;  // Offset: 704 Size: 8
	struct UWidgetAnimation* NormalAnimation;  // Offset: 712 Size: 8
	struct UWidgetAnimation* EnableAnimation;  // Offset: 720 Size: 8
	struct UWidgetAnimation* HoverEnableAnimation;  // Offset: 728 Size: 8
	struct UMovementAssistComponent* Assist;  // Offset: 736 Size: 8



 // Functions 
 public:
	void OnSetBoost(enum class EBoostKind BoostKind); // Function KartDrift.TouchInstanceBoosterButton.OnSetBoost
	void OnGuideInstanceBoost(bool bReadyInstanceBoost); // Function KartDrift.TouchInstanceBoosterButton.OnGuideInstanceBoost
	void OnAssistEnable(bool bEnable); // Function KartDrift.TouchInstanceBoosterButton.OnAssistEnable
}; 
 
 


//Class KartDrift.TouchKeyGuideWidget Size 752
// Inherited 608 bytes 
class UTouchKeyGuideWidget : public UUserWidget
{

 public: 
	struct UTouchKeyGuideInstWidget* V_ItemUseGuide;  // Offset: 608 Size: 8
	struct UTouchKeyGuideInstWidget* V_InstanceBoostGuide01;  // Offset: 616 Size: 8
	struct UTouchKeyGuideInstWidget* V_InstanceBoostGuide02;  // Offset: 624 Size: 8
	struct UTouchKeyGuideInstWidget* V_DriftGuide;  // Offset: 632 Size: 8
	struct UTouchKeyGuideInstWidget* V_CounterSteerGuide;  // Offset: 640 Size: 8
	struct UTouchKeyGuideInstWidget* V_ResetGuide;  // Offset: 648 Size: 8
	struct FTouchKeyGuideNameSlots KeyGuideNameSlots;  // Offset: 656 Size: 72
	struct UMovementAssistComponent* AssistComponent;  // Offset: 728 Size: 8
	struct UItemSlotComponent* SlotComponent;  // Offset: 736 Size: 8
	struct URaceProgressComponent* RaceProgressComponent;  // Offset: 744 Size: 8



 // Functions 
 public:
	void UpdateItemSlot(struct TArray<enum class EItemType>& ItemTypes, bool bActivate); // Function KartDrift.TouchKeyGuideWidget.UpdateItemSlot
	void GuideReset(bool bActivate); // Function KartDrift.TouchKeyGuideWidget.GuideReset
	void GuideInstanceBoost(bool bActivate); // Function KartDrift.TouchKeyGuideWidget.GuideInstanceBoost
	void GuideDrift(bool bLeft, bool bActivate); // Function KartDrift.TouchKeyGuideWidget.GuideDrift
	void GuideCounterSteer(bool bPositive, bool bActivate); // Function KartDrift.TouchKeyGuideWidget.GuideCounterSteer
	void GuideBoost(bool bActivate); // Function KartDrift.TouchKeyGuideWidget.GuideBoost
}; 
 
 


//Class KartDrift.TouchResetButton Size 704
// Inherited 696 bytes 
class UTouchResetButton : public UTouchInputButton
{

 public: 
	struct UNamedSlot* V_KeyGuideSlot;  // Offset: 696 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TouchStartBoosterButton Size 744
// Inherited 696 bytes 
class UTouchStartBoosterButton : public UTouchInputButton
{

 public: 
	char pad_696[16];  // Offset: 696 Size: 16
	struct UWidgetAnimation* ShowAnimation;  // Offset: 712 Size: 8
	struct UWidgetAnimation* EnableAnimation;  // Offset: 720 Size: 8
	struct UWidgetAnimation* HideAnimation;  // Offset: 728 Size: 8
	struct UWidgetAnimation* GuideAnimation;  // Offset: 736 Size: 8



 // Functions 
 public:
	void OnStartBoosterStateChanged(bool bInIsEnabled); // Function KartDrift.TouchStartBoosterButton.OnStartBoosterStateChanged
	void OnEndRaceCountdown(float EndTime); // Function KartDrift.TouchStartBoosterButton.OnEndRaceCountdown
	void OnBeginRaceCountdown(float BeginTime); // Function KartDrift.TouchStartBoosterButton.OnBeginRaceCountdown
}; 
 
 


//Class KartDrift.TrackGimmick_Patrol Size 960
// Inherited 680 bytes 
class ATrackGimmick_Patrol : public AKdSkeletalMeshActor
{

 public: 
	char pad_680[16];  // Offset: 680 Size: 16
	struct UAnimSequenceBase* IdleAnim;  // Offset: 696 Size: 8
	struct UAnimSequenceBase* ActivateAnim;  // Offset: 704 Size: 8
	struct UCurveFloat* TimeCurve;  // Offset: 712 Size: 8
	float TimeCurveOffset;  // Offset: 720 Size: 4
	float LocationLerpAlpha;  // Offset: 724 Size: 4
	enum class EPatrolRotationType RotationType;  // Offset: 728 Size: 1
	char pad_729[3];  // Offset: 729 Size: 3
	float RotationOffset;  // Offset: 732 Size: 4
	float RotationLerpAlpha;  // Offset: 736 Size: 4
	char pad_740[4];  // Offset: 740 Size: 4
	struct UCurveVector* RotationCurve;  // Offset: 744 Size: 8
	struct USkeletalMesh* ChildMesh;  // Offset: 752 Size: 8
	struct UAnimSequenceBase* ChildMeshAnim;  // Offset: 760 Size: 8
	struct FTransform ChildMeshTransform;  // Offset: 768 Size: 48
	float Radius;  // Offset: 816 Size: 4
	char pad_820[4];  // Offset: 820 Size: 4
	USceneComponent* ReactionClass;  // Offset: 824 Size: 8
	enum class EItemType SpawnItemType;  // Offset: 832 Size: 1
	char pad_833[3];  // Offset: 833 Size: 3
	float DisableTime;  // Offset: 836 Size: 4
	char pad_840[80];  // Offset: 840 Size: 80
	struct USplineComponent* SplineComponent;  // Offset: 920 Size: 8
	struct USkeletalMeshComponent* ChildMeshComponent;  // Offset: 928 Size: 8
	struct UItemComponent* GimmickItemComponent;  // Offset: 936 Size: 8
	float LastAffectTime;  // Offset: 944 Size: 4
	char pad_948[12];  // Offset: 948 Size: 12



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TrackPlayList Size 64
// Inherited 40 bytes 
class UTrackPlayList : public UObject
{

 public: 
	char pad_40[24];  // Offset: 40 Size: 24



 // Functions 
 public:
}; 
 
 


//Class KartDrift.TransformAnimationComponent Size 912
// Inherited 176 bytes 
class UTransformAnimationComponent : public UActorComponent
{

 public: 
	char pad_176[736];  // Offset: 176 Size: 736



 // Functions 
 public:
	void OnLerpAnimScale(float Value); // Function KartDrift.TransformAnimationComponent.OnLerpAnimScale
	void OnLerpAnimRot(float Value); // Function KartDrift.TransformAnimationComponent.OnLerpAnimRot
	void OnLerpAnimLoc(float Value); // Function KartDrift.TransformAnimationComponent.OnLerpAnimLoc
}; 
 
 


//Class KartDrift.UfoReaction Size 752
// Inherited 528 bytes 
class UUfoReaction : public USceneComponent
{

 public: 
	char pad_528[16];  // Offset: 528 Size: 16
	struct TSoftObjectPtr<UFMODEvent> NormalAffectSound;  // Offset: 544 Size: 40
	struct TSoftObjectPtr<UFMODEvent> EndSound;  // Offset: 584 Size: 40
	struct TSoftObjectPtr<UFMODEvent> EMPSound;  // Offset: 624 Size: 40
	struct TSoftObjectPtr<UParticleSystem> Ufo_Affect;  // Offset: 664 Size: 40
	char pad_704[8];  // Offset: 704 Size: 8
	struct UParticleSystemComponent* BeamEffectComponent;  // Offset: 712 Size: 8
	struct UItemComponent* LocalVictim;  // Offset: 720 Size: 8
	struct UItemComponent* LocalUser;  // Offset: 728 Size: 8
	char pad_736[16];  // Offset: 736 Size: 16



 // Functions 
 public:
}; 
 
 


//Class KartDrift.VoiceChatListItem Size 112
// Inherited 40 bytes 
class UVoiceChatListItem : public UObject
{

 public: 
	char pad_40[72];  // Offset: 40 Size: 72



 // Functions 
 public:
}; 
 
 


//Class KartDrift.VoiceChatRowWidget Size 728
// Inherited 656 bytes 
class UVoiceChatRowWidget : public UAnimEventUserWidget
{

 public: 
	char pad_656[32];  // Offset: 656 Size: 32
	struct UWidgetAnimation* Anim_Enter;  // Offset: 688 Size: 8
	struct UKdTextBlock* V_RiderNameTextBlock;  // Offset: 696 Size: 8
	struct UKdButtonImage* V_PlatformImg;  // Offset: 704 Size: 8
	struct UVoiceChatListItem* ListItem;  // Offset: 712 Size: 8
	char pad_720[8];  // Offset: 720 Size: 8



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WallGuide Size 936
// Inherited 560 bytes 
class AWallGuide : public AStaticMeshActor
{

 public: 
	enum class EBCWallType BeginnerCareWallType;  // Offset: 560 Size: 1
	enum class EBCWallThemeType ThemeType;  // Offset: 561 Size: 1
	char pad_562_1 : 7;  // Offset: 562 Size: 1
	bool bActorUnMerge : 1;  // Offset: 562 Size: 1
	char pad_563[5];  // Offset: 563 Size: 5
	struct UFMODEvent* Wall_ContactSound;  // Offset: 568 Size: 8
	struct FSplineCurves SplineCurves;  // Offset: 576 Size: 112
	int32_t MeshCount;  // Offset: 688 Size: 4
	char pad_692[4];  // Offset: 692 Size: 4
	struct TSoftObjectPtr<UMaterialInterface> Mat_ShortCut;  // Offset: 696 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_00;  // Offset: 736 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_01;  // Offset: 776 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Fall_Type_02;  // Offset: 816 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Corner_Type_00;  // Offset: 856 Size: 40
	struct TSoftObjectPtr<UMaterialInterface> Mat_Corner_Type_01;  // Offset: 896 Size: 40



 // Functions 
 public:
}; 
 
 


//Class KartDrift.WarningPopup Size 944
// Inherited 816 bytes 
class UWarningPopup : public UDialogTemplate
{

 public: 
	char pad_816[72];  // Offset: 816 Size: 72
	struct UKdTextBlock* TitleTextBlock;  // Offset: 888 Size: 8
	struct UKdTextBlock* SubTextBlock;  // Offset: 896 Size: 8
	struct UKdTextBlock* SubTextBlock2;  // Offset: 904 Size: 8
	struct UKdTextBlock* TagTextBlock;  // Offset: 912 Size: 8
	struct UButtonTemplate* ButtonConfirm;  // Offset: 920 Size: 8
	struct UButtonTemplate* ButtonCancel;  // Offset: 928 Size: 8
	char pad_936[8];  // Offset: 936 Size: 8



 // Functions 
 public:
	void ConfirmButtonFocused(int32_t InIndex); // Function KartDrift.WarningPopup.ConfirmButtonFocused
	void ConfirmButtonClicked(int32_t InIndex); // Function KartDrift.WarningPopup.ConfirmButtonClicked
	void CancelButtonFocused(int32_t InIndex); // Function KartDrift.WarningPopup.CancelButtonFocused
	void CancelButtonClicked(int32_t InIndex); // Function KartDrift.WarningPopup.CancelButtonClicked
}; 
 
 


