namespace offsets
{
	namespace UFoliageType
	{
			constexpr auto UpdateGuid = 0x28; // Size: 16, Type: struct FGuid
			constexpr auto Density = 0x38; // Size: 4, Type: float
			constexpr auto DensityAdjustmentFactor = 0x3c; // Size: 4, Type: float
			constexpr auto Radius = 0x40; // Size: 4, Type: float
			constexpr auto bSingleInstanceModeOverrideRadius = 0x44; // Size: 1, Type: bool
			constexpr auto SingleInstanceModeRadius = 0x48; // Size: 4, Type: float
			constexpr auto Scaling = 0x4c; // Size: 1, Type: enum class EFoliageScaling
			constexpr auto ScaleX = 0x50; // Size: 8, Type: struct FFloatInterval
			constexpr auto ScaleY = 0x58; // Size: 8, Type: struct FFloatInterval
			constexpr auto ScaleZ = 0x60; // Size: 8, Type: struct FFloatInterval
			constexpr auto VertexColorMaskByChannel[4] = 0x68; // Size: 48, Type: struct FFoliageVertexColorChannelMask
			constexpr auto VertexColorMask = 0x98; // Size: 1, Type: enum class FoliageVertexColorMask
			constexpr auto VertexColorMaskThreshold = 0x9c; // Size: 4, Type: float
			constexpr auto VertexColorMaskInvert = 0xa0; // Size: 1, Type: char
			constexpr auto ZOffset = 0xa4; // Size: 8, Type: struct FFloatInterval
			constexpr auto AlignToNormal = 0xac; // Size: 1, Type: char
			constexpr auto AlignMaxAngle = 0xb0; // Size: 4, Type: float
			constexpr auto RandomYaw = 0xb4; // Size: 1, Type: char
			constexpr auto RandomPitchAngle = 0xb8; // Size: 4, Type: float
			constexpr auto GroundSlopeAngle = 0xbc; // Size: 8, Type: struct FFloatInterval
			constexpr auto Height = 0xc4; // Size: 8, Type: struct FFloatInterval
			constexpr auto LandscapeLayers = 0xd0; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto MinimumLayerWeight = 0xe0; // Size: 4, Type: float
			constexpr auto ExclusionLandscapeLayers = 0xe8; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto MinimumExclusionLayerWeight = 0xf8; // Size: 4, Type: float
			constexpr auto LandscapeLayer = 0xfc; // Size: 8, Type: struct FName
			constexpr auto CollisionWithWorld = 0x104; // Size: 1, Type: char
			constexpr auto CollisionScale = 0x108; // Size: 12, Type: struct FVector
			constexpr auto MeshBounds = 0x114; // Size: 28, Type: struct FBoxSphereBounds
			constexpr auto LowBoundOriginRadius = 0x130; // Size: 12, Type: struct FVector
			constexpr auto Mobility = 0x13c; // Size: 1, Type: enum class EComponentMobility
			constexpr auto CullDistance = 0x140; // Size: 8, Type: struct FInt32Interval
			constexpr auto bEnableStaticLighting = 0x148; // Size: 1, Type: char
			constexpr auto CastShadow = 0x148; // Size: 1, Type: char
			constexpr auto bAffectDynamicIndirectLighting = 0x148; // Size: 1, Type: char
			constexpr auto bAffectDistanceFieldLighting = 0x148; // Size: 1, Type: char
			constexpr auto bCastDynamicShadow = 0x148; // Size: 1, Type: char
			constexpr auto bCastStaticShadow = 0x148; // Size: 1, Type: char
			constexpr auto bCastShadowAsTwoSided = 0x148; // Size: 1, Type: char
			constexpr auto bReceivesDecals = 0x148; // Size: 1, Type: char
			constexpr auto bOverrideLightMapRes = 0x149; // Size: 1, Type: char
			constexpr auto OverriddenLightMapRes = 0x14c; // Size: 4, Type: int32_t
			constexpr auto LightmapType = 0x150; // Size: 1, Type: enum class ELightmapType
			constexpr auto bUseAsOccluder = 0x154; // Size: 1, Type: char
			constexpr auto bVisibleInRayTracing = 0x158; // Size: 1, Type: char
			constexpr auto bEvaluateWorldPositionOffset = 0x158; // Size: 1, Type: char
			constexpr auto BodyInstance = 0x160; // Size: 344, Type: struct FBodyInstance
			constexpr auto CustomNavigableGeometry = 0x2b8; // Size: 1, Type: enum class EHasCustomNavigableGeometry
			constexpr auto LightingChannels = 0x2b9; // Size: 1, Type: struct FLightingChannels
			constexpr auto bRenderCustomDepth = 0x2bc; // Size: 1, Type: char
			constexpr auto CustomDepthStencilWriteMask = 0x2c0; // Size: 1, Type: enum class ERendererStencilMask
			constexpr auto CustomDepthStencilValue = 0x2c4; // Size: 4, Type: int32_t
			constexpr auto TranslucencySortPriority = 0x2c8; // Size: 4, Type: int32_t
			constexpr auto OutlineStencilValue = 0x2cc; // Size: 4, Type: int32_t
			constexpr auto CollisionRadius = 0x2d0; // Size: 4, Type: float
			constexpr auto ShadeRadius = 0x2d4; // Size: 4, Type: float
			constexpr auto NumSteps = 0x2d8; // Size: 4, Type: int32_t
			constexpr auto InitialSeedDensity = 0x2dc; // Size: 4, Type: float
			constexpr auto AverageSpreadDistance = 0x2e0; // Size: 4, Type: float
			constexpr auto SpreadVariance = 0x2e4; // Size: 4, Type: float
			constexpr auto SeedsPerStep = 0x2e8; // Size: 4, Type: int32_t
			constexpr auto DistributionSeed = 0x2ec; // Size: 4, Type: int32_t
			constexpr auto MaxInitialSeedOffset = 0x2f0; // Size: 4, Type: float
			constexpr auto bCanGrowInShade = 0x2f4; // Size: 1, Type: bool
			constexpr auto bSpawnsInShade = 0x2f5; // Size: 1, Type: bool
			constexpr auto MaxInitialAge = 0x2f8; // Size: 4, Type: float
			constexpr auto MaxAge = 0x2fc; // Size: 4, Type: float
			constexpr auto OverlapPriority = 0x300; // Size: 4, Type: float
			constexpr auto ProceduralScale = 0x304; // Size: 8, Type: struct FFloatInterval
			constexpr auto ScaleCurve = 0x310; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto changeCount = 0x398; // Size: 4, Type: int32_t
			constexpr auto ReapplyDensity = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyRadius = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyAlignToNormal = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyRandomYaw = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyScaling = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyScaleX = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyScaleY = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyScaleZ = 0x39c; // Size: 1, Type: char
			constexpr auto ReapplyRandomPitchAngle = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyGroundSlope = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyHeight = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyLandscapeLayers = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyZOffset = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyCollisionWithWorld = 0x39d; // Size: 1, Type: char
			constexpr auto ReapplyVertexColorMask = 0x39d; // Size: 1, Type: char
			constexpr auto bEnableDensityScaling = 0x39d; // Size: 1, Type: char
			constexpr auto bEnableDiscardOnLoad = 0x39e; // Size: 1, Type: char
			constexpr auto RuntimeVirtualTextures = 0x3a0; // Size: 16, Type: struct TArray<struct URuntimeVirtualTexture*>
			constexpr auto VirtualTextureCullMips = 0x3b0; // Size: 4, Type: int32_t
			constexpr auto VirtualTextureRenderPassType = 0x3b4; // Size: 1, Type: enum class ERuntimeVirtualTextureMainPassType
	}
} 
